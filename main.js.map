{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/turf-jsts/jsts.min.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/xml.js","webpack:///./node_modules/ol/format/XMLFeature.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/format/xsd.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/format/GPX.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./src/style.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./src/map.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/@turf/helpers/main.es.js","webpack:///./node_modules/@turf/meta/main.es.js","webpack:///./node_modules/@turf/bbox/main.es.js","webpack:///./node_modules/@turf/center/main.es.js","webpack:///./node_modules/@turf/clone/main.es.js","webpack:///./node_modules/@turf/projection/main.es.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/polygon.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/@turf/buffer/main.es.js","webpack:///./src/geom.js","webpack:///./node_modules/ol/Geolocation.js","webpack:///./src/notification.js","webpack:///./src/index.js","webpack:///./src/monitor.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","e","message","Mt","color","u","root_","size_","h","f","array_","arguments","It","addAll","g","y","Array","configurable","TypeError","parseInt","Number","writable","isFinite","isInteger","floor","parseFloat","isNaN","trunc","_","interfaces_","getClass","equalsWithTolerance","abs","__proto__","constructor","Error","v","I","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","E","x","C","z","NULL_ORDINATE","S","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","equals2D","getOrdinate","equals3D","equals","equalInZ","compareTo","clone","copy","toString","distance3D","distance","hashCode","setCoordinate","L","NaN","_dimensionsToTest","w","O","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","T","R","P","LOG_10","log10","clamp","wrap","average","D","str","append","setCharAt","substr","intValue","A","isWhitespace","toUpperCase","F","_hi","_lo","init","parse","G","PI","TWO_PI","PI_2","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","magnitude","divide","gt","lt","multiply","subtract","valueOf","selfAdd","sqr","doubleValue","add","negate","isZero","selfSubtract","getSpecialNumberString","selfDivide","dump","createNaN","ge","selfMultiply","reciprocal","rint","setValue","isNegative","selfSqr","toStandardNotation","toSciNotation","fill","charAt","stringOfChar","substring","isPositive","signum","isDigit","q","B","DP_SAFE_EPSILON","orientationIndex","orientationIndexFilter","signOfDet2x2","intersection","V","U","size","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","getY","toCoordinateArray","arraycopy","getProperty","line.separator","_minx","_maxx","_miny","_maxy","H","getArea","getWidth","getHeight","isNull","getMaxX","getMaxY","getMinX","getMinY","covers","expandToInclude","minExtent","translate","setToNull","maxExtent","expandBy","centre","W","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","K","geometryFactory","_e","read","replace","exec","toLowerCase","Q","write","extractGeometry","getGeometryType","J","isEmpty","coordinate","point","_coordinates","multipoint","_geometries","linestring","_points","linearring","multilinestring","polygon","_shell","_holes","multipolygon","geometrycollection","createPoint","trim","split","createMultiPoint","createLineString","createLinearRing","createMultiLineString","createPolygon","createMultiPolygon","createGeometryCollection","parser","toLineString","$","tt","et","shouldNeverReachHere","isTrue","nt","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","it","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","computeIntLineIndex","getTopologySummary","isEndPoint","isCollinear","computeIntersection","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","isInteriorIntersection","getIntersection","computeEdgeDistance","getEndpoint","isIntersection","getIntersectionAlongSegment","nonRobustComputeEdgeDistance","rt","isInSegmentEnvelopes","at","normalizeToMinimum","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","checkDD","out","println","normalizeToEnvCentre","computeCollinearIntersection","distancePointLine","ot","st","_p","_crossingCount","_isPointOnSegment","countSegment","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","ut","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","signedArea","distanceLineLine","isPointInRing","computeLength","isCCW","computeOrientation","distancePointLinePerpendicular","isOnLine","filter","ct","_envelope","_factory","_SRID","_userData","getSRID","pt","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","equalsTopo","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","setUserData","iterator","hasNext","next","isGeometryCollectionOrDerived","hasNonEmptyElements","hasNullElements","ht","ft","dt","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","yt","_t","mt","vt","toArray","Et","xt","set","Nt","ensureCapacity","Ct","arrayList_","position_","St","coordArrayType","closeRing","Lt","bt","ForwardComparator","BidirectionalComparator","wt","Ot","isRing","ptNotInList","scroll","hasRepeatedPoints","removeRepeatedPoints","reverse","removeNull","copyDeep","isEqualReversed","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","extract","OLDcompare","Tt","put","values","entrySet","Rt","Pt","Dt","hashSet_","getValue","getKey","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","At","Ft","treeSet_","Gt","concat","asList","qt","Bt","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","toDimensionValue","Vt","Ut","isDone","isGeometryChanged","zt","getCoordinates","getNumPoints","isEquivalentClass","getBoundaryDimension","getBoundary","Xt","isClosed","Yt","_geom","_geomFact","_bnRule","_endpointMap","boundaryMultiLineString","getEmptyMultiPoint","computeBoundaryCoordinates","createMultiPointFromCoords","Kt","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","count","kt","jt","Ht","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","printStackTrace","readLine","Wt","copyCoord","isEqual","swap","ensureValidRing","createClosedRing","isSimple","getPointN","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Jt","Qt","Zt","$t","getNumInteriorRing","convexHull","getExteriorRing","getInteriorRingN","te","isValid","ee","validateConstruction","MINIMUM_VALID_SIZE","ne","ie","_isUserDataCopied","re","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","edit","editInternal","editGeometryCollection","editPolygon","getName","GeometryEditorOperation","oe","se","ae","editCoordinates","ue","_dimension","ce","pe","instanceObject","readResolve","instance","he","map_","Map","done","entries","forEach","fe","_modelType","_scale","FLOATING","de","FIXED","setScale","maximumPreciseValue","getMaximumSignificantDigits","getScale","isFloating","FLOATING_SINGLE","getType","round","mostPrecise","_name","nameToTypeMap","ye","Type","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","me","buildGeometry","toGeometryArray","toPolygonArray","toLineStringArray","toPointArray","createGeometry","toMultiPolygonArray","toMultiLineStringArray","toMultiPointArray","toLinearRingArray","createPointFromInternalCoord","ve","Ie","JSON","type","Ee","coordinates","geometries","xe","Feature","geometry","FeatureCollection","features","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","Ne","precisionModel","reducePrecision","points","Ce","Se","Le","ON","opposite","peek","empty","be","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","findRightmostEdgeAtNode","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","we","msgWithCoord","Oe","addLast","removeFirst","shift","Te","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","isVisited","computeDepths","copySymDepths","computeDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","setDepth","getNodes","getDirectedEdges","Re","location","setAllLocations","setAllLocationsIfNull","isLine","merge","getLocations","flip","setLocations","isArea","isAnyNull","setLocation","isEqualOnSide","allPositionsEqual","Pe","elt","getGeometryCount","toLine","toLineLabel","De","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","getOutgoingDegree","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","setShell","toPolygon","Me","setMinEdgeRing","getNextMin","Ae","buildMinimalRings","getMinEdgeRing","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","Fe","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","computeIM","isInResult","Ge","_coord","isIncidentEdgeInResult","print","computeMergedLocation","setNode","setLabelBoundary","qe","nodeMap","nodeFact","find","addNode","getBoundaryNodes","Be","Ve","NE","NW","SW","SE","isNorthern","isOpposite","commonHalfPlane","isInHalfPlane","quadrant","Ue","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","compareDirection","getDy","atan2","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","ze","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","setNextMin","getDepthDelta","isLineEdge","printEdge","printReverse","setSym","setVisitedEdge","setNext","depthFactor","Xe","Ye","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","insertEdge","findEdgeEnd","addEdges","ke","_shellList","sortShellsAndHoles","computePolygons","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","getPolygons","je","getBounds","He","_bounds","_item","getItem","We","_size","_items","poll","reorder","Ke","visitItem","Je","query","Qe","_childBoundables","_level","Ze","getLevel","getChildBoundables","addChildBoundable","computeBounds","$e","reverseOrder","singletonList","tn","_boundable1","_boundable2","_distance","_itemDistance","expandToQueue","isComposite","expand","isLeaves","getDistance","getBoundable","en","_root","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nn","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","itemsTree","boundablesAtLevel","getIntersectsOp","createHigherLevels","getRoot","createParentBoundables","depth","getComparator","compareDoubles","rn","on","sn","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","createParentBoundablesFromVerticalSlice","an","verticalSlices","nearestNeighbour","POSITIVE_INFINITY","centreX","avg","centreY","un","relativeSign","compareValue","ln","_segString","coord","segmentIndex","_segmentOctant","_isInterior","isInterior","cn","_nodeMap","getSplitCoordinates","addEndpoints","addEdgeCoordinates","addCollapsedNodes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","addSplitEdges","createSplitEdge","findCollapseIndex","gn","getData","getSegmentOctant","checkSplitEdgesCorrectness","pn","octant","hn","setData","fn","addIntersection","_nodeList","_data","safeOctant","addIntersectionNode","getNodeList","addIntersections","getNodedSubstrings","dn","p0","p1","yn","isVertical","project","projectionFactor","angle","distancePerpendicular","midPoint","closestPoints","closestPoint","lineIntersection","pointAlongOffset","setCoordinates","segmentFraction","isHorizontal","pointAlong","_n","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","getLineSegment","mn","_start","_end","_context","_id","computeSelect","select","computeOverlaps","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","vn","getChainStartIndices","findChainEnd","toIntArray","getChains","In","computeNodes","En","_segInt","setSegmentIntersector","xn","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","intersectChains","Nn","_si","processIntersections","Cn","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","setEndCapStyle","setJoinStyle","setMitreLimit","Sn","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","getJoinStyle","setSimplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","cos","Ln","_distanceTol","_isDeleted","_angleOrientation","_inputLine","bn","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","findNextNonDeletedIndex","isShallowConcavity","simplify","collapseLine","wn","_ptList","_minimimVertexDistance","On","COORDINATE_ARRAY_TYPE","addPt","isRedundant","revere","addPts","setMinimumVertexDistance","Tn","Rn","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","isAcute","isObtuse","interiorAngle","normalizePositive","angleBetween","diff","toRadians","getTurn","sin","angleBetweenOriented","Pn","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","MAX_CLOSING_SEG_LEN_FACTOR","Dn","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","computeOffsetSegment","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","addFilletArc","addMitreJoin","addLimitedMitreJoin","addFilletCorner","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","createCircle","hasNarrowConcaveAngle","Mn","getOffsetCurve","getSegGen","computePointCurve","computeOffsetCurve","computeSingleSidedBufferCurve","simplifyTolerance","computeRingBufferCurve","computeLineBufferCurve","getLineCurve","getBufferParameters","getRingCurve","copyCoordinates","An","_subgraphs","_seg","_cga","Fn","DepthSegment","findStabbedSegments","Gn","_leftDepth","_upwardSeg","compareX","qn","p2","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","det","perpendicularBisector","angleBisector","Bn","_inputGeom","_curveBuilder","_curveList","addPoint","addCurve","addPolygon","isErodedCompletely","addPolygonRing","isTriangleErodedCompletely","addLineString","getCurves","addCollection","Vn","locate","Un","_parent","_atStart","_max","_subcollectionIterator","isAtomic","zn","containsPointInPolygon","Xn","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","propagateSideLabels","isAreaLabelsConsistent","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","findIndex","getGeometry","computeLabelling","getDegree","insertEdgeEnd","Yn","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","updateLabelling","mergeSymLabels","findCoveredLineEdges","kn","jn","_orientation","orientation","compareOriented","Hn","_ocaMap","findEdgeIndex","findEqualEdge","Wn","Kn","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","Jn","dist","getSegmentIndex","Qn","edge","pts","ni","Zn","$n","startIndex","env1","env2","computeIntersectsForChain","getStartIndexes","computeIntersects","ti","NULL_VALUE","ei","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","setIsolated","setName","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","ii","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","depthDelta","buildSubgraphs","createSubgraphs","createEmptyResultGeometry","getNoder","buffer","computeNodedEdges","setNoder","convertSegStrings","ri","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","isIntegerPrecision","rescale","scale","oi","_segStrings","si","fact","checkEndPtVertexIntersections","checkInteriorIntersections","checkValid","checkCollapses","checkCollapse","ai","_pt","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","ui","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","intersectsToleranceSquare","copyScaled","getSafeEnvelope","intersectsPixelClosure","addSnappedNode","li","selectedSegment","ci","pi","HotPixelSnapAction","snap","hi","isNodeAdded","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","fi","_interiorIntersections","getInteriorIntersections","gi","_pm","_pointSnapper","checkCorrectness","snapRound","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","di","_argGeom","_resultGeometry","_saveException","yi","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","bufferReducedPrecision","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","getResultGeometry","bufferOp","_i","_isNull","setMinimum","initialize","setMaximum","mi","computeDistance","vi","_maxPtDist","Ii","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","xi","getMaxPointDistance","computeMaxVertexDistance","Ei","findDistance","getDistancePoints","_minPtDist","Ni","_comps","Ci","_lines","_isForcedToLineString","setForceToLineString","getLines","Si","_boundaryRule","_isIn","_numBoundaries","locateInternal","locateInPolygonRing","updateLocationInfo","computeLocation","Li","_component","_segIndex","INSIDE_AREA","bi","isInsideArea","getGeometryComponent","wi","getPoints","Oi","_locations","Ti","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","computeContainmentDistance","computeMinDistanceLinesPoints","computeMinDistance","computeFacetDistance","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","isWithinDistance","Ri","Pi","Di","_g0","_g1","_ptDist","_densifyFrac","Mi","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","compute","computeOrientedDistance","Ai","Fi","orientedDistance","_euclideanDist","_numSubSegs","Gi","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","qi","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","checkPositiveValid","checkNegativeValid","getPolygonLines","checkMinimumDistance","getErrorIndicator","getErrorLocation","getErrorMessage","Bi","_errorMsg","Vi","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","report","isValidMsg","Ui","zi","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","setKeepIntersections","isEndSegment","createAllIntersectionsFinder","createAnyIntersectionFinder","createIntersectionCounter","Xi","execute","computeIntersections","Yi","_nv","toSegmentStrings","ki","_mapOp","ji","_op","_lineEdgesList","_resultLineList","collectLines","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","getArgGeometry","buildLines","Lr","isResultOfOp","isCoveredByA","labelIsolatedLines","INTERSECTION","Hi","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","Wi","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","Ki","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","snapVertices","findSnapForVertex","snapTo","snapSegments","findSegmentIndexToSnap","setAllowSnappingToSourceVertices","Ji","_srcGeom","Qi","SNAP_PRECISION_FACTOR","extractTargetCoordinates","Zi","snapToSelf","computeSnapTolerance","computeMinimumSegmentLength","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","_snapPts","_isSelfSnap","snapLine","$i","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","toBinaryString","getBit","tr","_commonCoord","_ccFilter","nr","er","CommonCoordinateFilter","Translater","addCommonBits","ir","removeCommonBits","getCommonCoordinate","_commonBitsX","_commonBitsY","trans","rr","_cbr","selfSnap","prepareResult","overlayOp","union","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","or","sr","mce","chainIndex","ar","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","INSERT","ur","isDelete","setDeleteEventIndex","getObject","getInsertEvent","isInsert","isSameLabel","getDeleteEventIndex","lr","cr","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","setIsDoneIfProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","pr","events","nOverlaps","prepareEvents","processOverlaps","addEdge","hr","_min","NEGATIVE_INFINITY","fr","NodeComparator","getMin","getMax","gr","dr","yr","_node1","_node2","buildExtent","_r","_leaves","buildTree","buildLevel","buildRoot","printNode","mr","getItems","vr","xr","Ir","SegmentVisitor","IntervalIndexedGeometry","Er","_counter","addLine","Nr","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","insertBoundaryPoint","determineBoundary","computeSelfNodes","createEdgeSetIntersector","addSelfIntersectionNodes","computeSplitEdges","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","Cr","_resultPrecisionModel","_arg","setComputationPrecision","Sr","MapOp","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","createEmptyResult","replaceCollapsedEdges","updateNodeLabelling","computeOverlay","insertUniqueEdges","copyPoints","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","labelIncompleteNode","resultDimension","br","_g","_boundaryDistanceTolerance","_linework","extractLinework","isWithinToleranceOfBoundary","wr","getLinework","Or","_doLeft","_doRight","extractPoints","computeOffsetPoints","setSidesToGenerate","Tr","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","Rr","reportResult","addTestPts","hasLocation","isValidResult","getInvalidLocation","Pr","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","combine","createList","Dr","_inputPolys","Mr","STRTREE_NODE_CAPACITY","reduceToGeometries","unionTree","extractByEnvelope","unionOptimized","unionActual","unionUsingEnvelopeIntersection","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","bufferUnion","Ar","GeoJSONReader","GeoJSONWriter","OverlayOp","UnionOp","BufferOp","tmp","defaultCompare","quickselectStep","exp","sd","newLeft","newRight","factory","util_abstract","uidCounter_","getUid","obj","ol_uid","VERSION","ol_AssertionError","AssertionError","code","assert","assertion","errorCode","obj_assign","assign","target","var_sources","arguments$1","output","source","obj_clear","getValues","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ObjectEventType","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","unlistenAll","hasListener","opt_type","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","isArray","once","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","ol_Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","setGeometry","properties","setGeometryName","getGeometryName","style","getStyle","setStyle","getStyleFunction","handleGeometryChange_","styles","getZIndex","createStyleFunction","id","CollectionEventType","ADD","REMOVE","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","assertUnique_","updateLength_","array","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","end","extension","arr1","arr2","len1","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","BELOW","boundingExtent","extent","createEmpty","extendCoordinate","opt_extent","extent_clone","closestSquaredDistanceXY","dx","dy","containsCoordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","extent_getArea","extent_isEmpty","getBottomLeft","getBottomRight","extent_getCenter","getForViewAndSize","center","resolution","rotation","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","extent_intersects","getTopLeft","getTopRight","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","FormatType","ARRAY_BUFFER","TEXT","XML","loadFeaturesXhr","url","success","failure","projection","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","loadingstrategy_all","cosh","squaredSegmentDistance","math_squaredDistance","angleInRadians","angleInDegrees","modulo","lerp","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sphere_offset","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","proj_getTransform","proj_transform","State","UNDEFINED","LOADING","READY","adaptAttributions","attributionLike","frameState","source_Source","Source","projection_","attributions_","attributions","attributionsCollapsible_","attributionsCollapsible","loading","state_","state","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getState","getWrapX","refresh","setAttributions","setState","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","uid","update","getAll","getInExtent","callback","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","dataProjection","addFeatures","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","i$1","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","removeLoadedExtent","removed","setLoader","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","render_EventType","visibleAtResolution","layerState","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","states","getSource","handleSourceChange_","renderEvent","layerStatesArray","layerStates","render","VectorRenderType","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color_toString","cache","cacheSize","asColorLike","createCanvasContext2D","opt_width","opt_height","canvas","document","createElement","width","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","ImageState","IDLE","LOADED","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","setSize","prune","tmp_","transform_reset","transform_set","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","transform_scale","transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","textContent","padding","position","body","appendChild","offsetHeight","measureTextWidth","rotateAtOffset","offsetX","offsetY","rotate","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Image_ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","getRotation","getRotateWithView","getSnapToPixel","getAnchor","getImage","pixelRatio","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","getSize","setRotateWithView","setRotation","setSnapToPixel","snapToPixel","listenImageChange","thisArg","unlistenImageChange","Circle","RegularShape","CircleStyle","stroke","atlasManager","getFill","getStroke","getRadius","atlasManager_","setRadius","radius_","render_","ImageStyle","checksums_","canvas_","hitDetectionCanvas_","fill_","origin_","points_","radius1","radius2_","radius2","angle_","stroke_","anchor_","imageSize_","hitDetectionImageSize_","getRadius2","getAngle","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","text_","zIndex_","getText","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","style_Style","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","toFunction","getRenderMode","layer_Vector","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","power","applyTransform","DOCUMENT","implementation","createDocument","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","xml","makeArrayPusher","valueReader","objectStack","makeObjectPropertySetter","opt_property","localName","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","pushParseAndPop","opt_keys","pushSerializeAndPop","format_XMLFeature","FeatureFormat","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","padNumber","number","opt_precision","numberString","toFixed","decimal","readDateTime","dateTime","Date","readDecimal","readNonNegativeInteger","readString","writeDecimalTextNode","string","toPrecision","createTextNode","writeNonNegativeIntegerTextNode","nonNegativeInteger","writeStringTextNode","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","containsXY","getClosestPoint","opt_closestPoint","computeExtent","returnOrUpdate","anchor","opt_sy","opt_anchor","tolerance","squaredTolerance","deltaX","deltaY","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","flat_transform_rotate","flat_transform_scale","flat_transform_translate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","interpolatePoint","fraction","pointX","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","m0","linearRingContainsExtent","val","forEachCorner","linearRingContainsXY","linearRingsContainsXY","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","lineStringLength","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","quantize","quantizeArray","geom_LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","geom_MultiLineString","ends_","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","geom_Point","deflateCoordinate","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","multiLineString","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","setAttributeNS","setAttribute","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","src","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","GPX_appendCoordinate","ele","time","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","getAttribute","hasZ","hasM","applyLayoutOptions","ii$1","href","format_GPX","area_linearRing","twiceArea","area_linearRings","geom_LinearRing","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","maxSegmentLength","segmentLength","reverse_coordinates","linearRingIsClockwise","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRings","linearRings","geom_Polygon","fromExtent","positionBackgroundStyle","positionOutside","positionInside","shortestLineOutside","track","style_buffer","style_position","shortestLine","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","outTarget","over","enter","outEvent","leave","cleanUpPointer_","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","delta","rotationconstraint_none","ViewHint","ViewProperty","coordinate_add","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","easeIn","easeOut","inAndOut","linear","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinate1","coordinate2","coordinate_equals","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","resolutions","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getCenter","animate","var_args","animationCount","isDef","setCenter","setZoom","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","unskipFeature","control_Control","Control","target_","listenerKeys","getMap","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","ol_Kinetic","interaction_Property","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","scaleFromCenter","interaction_DragZoom","DragBox","DragZoom","box_","minArea_","onBoxEnd_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","ERROR_THRESHOLD","ol_ImageCanvas","ImageBase","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","getPixelRatio","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","simpleGeometry","transformGeom2D","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","MapRenderer","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","calculateMatrices2D","compareFnc","stableSort","save","viewResolution","layerRenderer","getLayerRenderer","prepareFrame","composeFrame","restore","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","thisArg2","numLayers","forEachLayerAtCoordinate","registerLayerRenderers","constructors","ctor","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","mat","transform_invert","removeLayerRendererByKey_","translatedCoordinate","projectionExtent","worldWidth","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","mapRenderer","ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","drawTextOnPath","measure","startM","maxAngle","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Default","Image","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","interiorPoints","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","dirty","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","ol_Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","Tile_TileLayer","TileLayer","setPreload","setUseInterimTilesOnError","layer_Tile","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","hash","createFromTileUrlFunctions","nullTileUrlFunction","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","sourceExtent","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation_Triangulation","targetProj","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","tmpTileCoord","TileGrid_TileGrid","opt_strict","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createForExtent","extentFromProjection","createForProjection","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","ratio","getTileCoordForTileUrlFunction","opt_projection","worldsAway","withinExtentAndZ","TileSourceEvent","TileEventType","defaultTileLoadFunction","imageTile","source_TileJSON","TileImage","TileJSON","reprojectionErrorThreshold","tileJSON_","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","handleTileJSONResponse","handleTileJSONError","client","onXHRLoad_","onXHRError_","tileJSON","response","getTileJSON","epsg4326Projection","xyzOptions","gridOptions","createXYZ","tileUrlFunction","attributionExtent","UrlTile","urls","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","generateTileUrlFunction_","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","match","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","map_view","map_map","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","geom_MultiPoint","appendPoint","getPoint","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","center_linearRingss","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_readGeometry","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","earthRadius","factors","meters","metres","millimeters","millimetres","centimeters","centimetres","kilometers","kilometres","miles","nauticalmiles","inches","yards","feet","radians","degrees","main_es_feature","isObject","validateBBox","validateId","feat","main_es_point","isNumber","featureCollection","fc","radiansToLength","factor","lengthToRadians","num","coordEach","geojson","excludeWrapCoord","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","featureIndex","geomIndex","multiFeatureIndex","geometryIndex","geomType","featureEach","geomEach","featureProperties","featureBBox","main_es","BBox","center_main_es","ext","cloneFeature","cloned","cloneProperties","cloneGeometry","geom","deepSlice","clone_main_es","cloneFeatureCollection","convert","mutate","convertToMercator","convertToWgs84","newCoord","lonLat","D2R","MAXEXTENT","xy","R2D","adder","Adder","reset","adder_add","temp","bv","av","epsilon","halfPi","quarterPi","tau","math_degrees","sign","noop","streamGeometry","stream","streamGeometryType","streamObjectType","Sphere","sphere","streamLine","streamPolygon","lineStart","lineEnd","polygonStart","polygonEnd","src_stream","cartesian_spherical","cartesian","cartesian_cartesian","spherical","lambda","phi","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","cartesianNormalizeInPlace","src_compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","t0","t1","cosRadius","sinRadius","step","circleRadius","clip_buffer","line","rejoin","clip_line","ax","ay","pointEqual","Intersection","other","clip_polygon","segments","compareIntersection","startInside","subject","segment","polygon_link","current","isSubject","ascending","array_array","arrays","merged","clipMax","clipMin","extent_clipExtent","from","to","comparePoint","ca","cb","ring","x__","y__","v__","x_","y_","v_","clean","activeStream","bufferStream","clipStream","linePoint","winding","a0","b0","polygonInside","cleanInside","polygonContains_sum","polygonContains","normal","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","phi1","absDelta","antimeridian","phiArc","src_identity","bounds_x0","bounds_y0","bounds_x1","bounds_y1","path_bounds","bounds","PathContext","_radius","pointRadius","_line","_point","PathString","_string","string_circle","_circle","src_clip","pointVisible","clipLine","sink","rotatedStart","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","clip_circle","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","n1xn2","uu","t2","polar","q1","c0","v00","transformer","methods","TransformStream","fitExtent","fitSize","maxDepth","cosMinDistance","resample","delta2","resampleLineTo","phi2","lambda2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","projection_projection","projectionMutator","projectAt","projectRotate","cacheStream","preclip","postclip","projectResample","projectTransform","recenter","clipAngle","precision","azimuthalRaw","cx","cy","azimuthalInvert","sc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","equirectangularRaw","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","transverseMercator","main_es_bufferFeature","steps","projected","results","buffered","needsTransverseMercator","projectCoords","defineProjection","toMercator","jsts_min","coordsIsNaN","unprojectCoords","toWgs84","buffer_main_es","feature$$1","multiBuffered","getBufferCoordinates","geojsonGeom","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","ol_Geolocation","Geolocation","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","opt_n","opt_sphereRadius","circular","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","Notifier","[object Object]","actionHandler","Notification","requestPermission","then","serviceWorker","register","registration","action","showNotification","segmentGeometry","segmentFeature","bufferGeometry","src_bufferFeature","searchParams","URLSearchParams","fenceWidth","polygonCoordinates","monitor","positionFeature","shortestLineFeature","onPositionChange","notifier","onAction","outside","mutted","eventData","closest","actions","tag","renotify"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e(t.jsts={})}(this,function(t){\"use strict\";function e(){}function n(t){this.message=t||\"\"}function i(t){this.message=t||\"\"}function r(t){this.message=t||\"\"}function o(){}function s(t){return null===t?Mt:t.color}function a(t){return null===t?null:t.parent}function u(t,e){null!==t&&(t.color=e)}function l(t){return null===t?null:t.left}function c(t){return null===t?null:t.right}function p(){this.root_=null,this.size_=0}function h(){}function f(){this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}function g(){}function d(t){this.message=t||\"\"}function y(){this.array_=[]}\"fill\"in Array.prototype||Object.defineProperty(Array.prototype,\"fill\",{configurable:!0,value:function(t){if(void 0===this||null===this)throw new TypeError(this+\" is not an object\");var e=Object(this),n=Math.max(Math.min(e.length,9007199254740991),0)||0,i=1 in arguments?parseInt(Number(arguments[1]),10)||0:0;i=i<0?Math.max(n+i,0):Math.min(i,n);var r=2 in arguments&&void 0!==arguments[2]?parseInt(Number(arguments[2]),10)||0:n;for(r=r<0?Math.max(n+arguments[2],0):Math.min(r,n);i<r;)e[i]=t,++i;return e},writable:!0}),Number.isFinite=Number.isFinite||function(t){return\"number\"==typeof t&&isFinite(t)},Number.isInteger=Number.isInteger||function(t){return\"number\"==typeof t&&isFinite(t)&&Math.floor(t)===t},Number.parseFloat=Number.parseFloat||parseFloat,Number.isNaN=Number.isNaN||function(t){return t!=t},Math.trunc=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};var _=function(){};_.prototype.interfaces_=function(){return[]},_.prototype.getClass=function(){return _},_.prototype.equalsWithTolerance=function(t,e,n){return Math.abs(t-e)<=n};var m=function(t){function e(e){t.call(this,e),this.name=\"IllegalArgumentException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),v=function(){},I={MAX_VALUE:{configurable:!0}};v.isNaN=function(t){return Number.isNaN(t)},v.doubleToLongBits=function(t){return t},v.longBitsToDouble=function(t){return t},v.isInfinite=function(t){return!Number.isFinite(t)},I.MAX_VALUE.get=function(){return Number.MAX_VALUE},Object.defineProperties(v,I);var E=function(){},x=function(){},N=function(){},C=function t(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)this.x=0,this.y=0,this.z=t.NULL_ORDINATE;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.z=e.z}else 2===arguments.length?(this.x=arguments[0],this.y=arguments[1],this.z=t.NULL_ORDINATE):3===arguments.length&&(this.x=arguments[0],this.y=arguments[1],this.z=arguments[2])},S={DimensionalComparator:{configurable:!0},serialVersionUID:{configurable:!0},NULL_ORDINATE:{configurable:!0},X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0}};C.prototype.setOrdinate=function(t,e){switch(t){case C.X:this.x=e;break;case C.Y:this.y=e;break;case C.Z:this.z=e;break;default:throw new m(\"Invalid ordinate index: \"+t)}},C.prototype.equals2D=function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!_.equalsWithTolerance(this.x,e.x,n)&&!!_.equalsWithTolerance(this.y,e.y,n)}},C.prototype.getOrdinate=function(t){switch(t){case C.X:return this.x;case C.Y:return this.y;case C.Z:return this.z}throw new m(\"Invalid ordinate index: \"+t)},C.prototype.equals3D=function(t){return this.x===t.x&&this.y===t.y&&(this.z===t.z||v.isNaN(this.z))&&v.isNaN(t.z)},C.prototype.equals=function(t){return t instanceof C&&this.equals2D(t)},C.prototype.equalInZ=function(t,e){return _.equalsWithTolerance(this.z,t.z,e)},C.prototype.compareTo=function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0},C.prototype.clone=function(){},C.prototype.copy=function(){return new C(this)},C.prototype.toString=function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.z+\")\"},C.prototype.distance3D=function(t){var e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return Math.sqrt(e*e+n*n+i*i)},C.prototype.distance=function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)},C.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this.x),t=37*t+C.hashCode(this.y)},C.prototype.setCoordinate=function(t){this.x=t.x,this.y=t.y,this.z=t.z},C.prototype.interfaces_=function(){return[E,x,e]},C.prototype.getClass=function(){return C},C.hashCode=function(){if(1===arguments.length){var t=arguments[0],e=v.doubleToLongBits(t);return Math.trunc((e^e)>>>32)}},S.DimensionalComparator.get=function(){return L},S.serialVersionUID.get=function(){return 0x5cbf2c235c7e5800},S.NULL_ORDINATE.get=function(){return v.NaN},S.X.get=function(){return 0},S.Y.get=function(){return 1},S.Z.get=function(){return 2},Object.defineProperties(C,S);var L=function(t){if(this._dimensionsToTest=2,0===arguments.length);else if(1===arguments.length){var e=arguments[0];if(2!==e&&3!==e)throw new m(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=e}};L.prototype.compare=function(t,e){var n=t,i=e,r=L.compare(n.x,i.x);if(0!==r)return r;var o=L.compare(n.y,i.y);if(0!==o)return o;if(this._dimensionsToTest<=2)return 0;return L.compare(n.z,i.z)},L.prototype.interfaces_=function(){return[N]},L.prototype.getClass=function(){return L},L.compare=function(t,e){return t<e?-1:t>e?1:v.isNaN(t)?v.isNaN(e)?0:-1:v.isNaN(e)?1:0};var b=function(){};b.prototype.create=function(){},b.prototype.interfaces_=function(){return[]},b.prototype.getClass=function(){return b};var w=function(){},O={INTERIOR:{configurable:!0},BOUNDARY:{configurable:!0},EXTERIOR:{configurable:!0},NONE:{configurable:!0}};w.prototype.interfaces_=function(){return[]},w.prototype.getClass=function(){return w},w.toLocationSymbol=function(t){switch(t){case w.EXTERIOR:return\"e\";case w.BOUNDARY:return\"b\";case w.INTERIOR:return\"i\";case w.NONE:return\"-\"}throw new m(\"Unknown location value: \"+t)},O.INTERIOR.get=function(){return 0},O.BOUNDARY.get=function(){return 1},O.EXTERIOR.get=function(){return 2},O.NONE.get=function(){return-1},Object.defineProperties(w,O);var T=function(t,e){return t.interfaces_&&t.interfaces_().indexOf(e)>-1},R=function(){},P={LOG_10:{configurable:!0}};R.prototype.interfaces_=function(){return[]},R.prototype.getClass=function(){return R},R.log10=function(t){var e=Math.log(t);return v.isInfinite(e)?e:v.isNaN(e)?e:e/R.LOG_10},R.min=function(t,e,n,i){var r=t;return e<r&&(r=e),n<r&&(r=n),i<r&&(r=i),r},R.clamp=function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var i=arguments[0],r=arguments[1],o=arguments[2];return i<r?r:i>o?o:i}},R.wrap=function(t,e){return t<0?e- -t%e:t%e},R.max=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=t;return e>i&&(i=e),n>i&&(i=n),i}if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=r;return o>u&&(u=o),s>u&&(u=s),a>u&&(u=a),u}},R.average=function(t,e){return(t+e)/2},P.LOG_10.get=function(){return Math.log(10)},Object.defineProperties(R,P);var D=function(t){this.str=t};D.prototype.append=function(t){this.str+=t},D.prototype.setCharAt=function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)},D.prototype.toString=function(t){return this.str};var M=function(t){this.value=t};M.prototype.intValue=function(){return this.value},M.prototype.compareTo=function(t){return this.value<t?-1:this.value>t?1:0},M.isNaN=function(t){return Number.isNaN(t)};var A=function(){};A.isWhitespace=function(t){return t<=32&&t>=0||127===t},A.toUpperCase=function(t){return t.toUpperCase()};var F=function t(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var e=arguments[0];this.init(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var i=arguments[0];t.call(this,t.parse(i))}}else if(2===arguments.length){var r=arguments[0],o=arguments[1];this.init(r,o)}},G={PI:{configurable:!0},TWO_PI:{configurable:!0},PI_2:{configurable:!0},E:{configurable:!0},NaN:{configurable:!0},EPS:{configurable:!0},SPLIT:{configurable:!0},MAX_PRINT_DIGITS:{configurable:!0},TEN:{configurable:!0},ONE:{configurable:!0},SCI_NOT_EXPONENT_CHAR:{configurable:!0},SCI_NOT_ZERO:{configurable:!0}};F.prototype.le=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<=t._lo},F.prototype.extractSignificantDigits=function(t,e){var n=this.abs(),i=F.magnitude(n._hi),r=F.TEN.pow(i);(n=n.divide(r)).gt(F.TEN)?(n=n.divide(F.TEN),i+=1):n.lt(F.ONE)&&(n=n.multiply(F.TEN),i-=1);for(var o=i+1,s=new D,a=F.MAX_PRINT_DIGITS-1,u=0;u<=a;u++){t&&u===o&&s.append(\".\");var l=Math.trunc(n._hi);if(l<0)break;var c=!1,p=0;l>9?(c=!0,p=\"9\"):p=\"0\"+l,s.append(p),n=n.subtract(F.valueOf(l)).multiply(F.TEN),c&&n.selfAdd(F.TEN);var h=!0,f=F.magnitude(n._hi);if(f<0&&Math.abs(f)>=a-u&&(h=!1),!h)break}return e[0]=i,s.toString()},F.prototype.sqr=function(){return this.multiply(this)},F.prototype.doubleValue=function(){return this._hi+this._lo},F.prototype.subtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.add(-e)}},F.prototype.equals=function(){if(1===arguments.length){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}},F.prototype.isZero=function(){return 0===this._hi&&0===this._lo},F.prototype.selfSubtract=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.isNaN()?this:this.selfAdd(-e,0)}},F.prototype.getSpecialNumberString=function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null},F.prototype.min=function(t){return this.le(t)?this:t},F.prototype.selfDivide=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfDivide(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null,c=null,p=null;return u=this._hi/n,l=F.SPLIT*u,r=l-u,p=F.SPLIT*n,r=l-r,o=u-r,s=p-n,c=u*n,s=p-s,a=n-s,p=r*s-c+r*a+o*s+o*a,l=(this._hi-c-p+this._lo-u*i)/n,p=u+l,this._hi=p,this._lo=u-p+l,this}},F.prototype.dump=function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"},F.prototype.divide=function(){if(arguments[0]instanceof F){var t=arguments[0],e=null,n=null,i=null,r=null,o=null,s=null,a=null,u=null;n=(o=this._hi/t._hi)-(e=(s=F.SPLIT*o)-(e=s-o)),u=e*(i=(u=F.SPLIT*t._hi)-(i=u-t._hi))-(a=o*t._hi)+e*(r=t._hi-i)+n*i+n*r,s=(this._hi-a-u+this._lo-o*t._lo)/t._hi;return new F(u=o+s,o-u+s)}if(\"number\"==typeof arguments[0]){var l=arguments[0];return v.isNaN(l)?F.createNaN():F.copy(this).selfDivide(l,0)}},F.prototype.ge=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>=t._lo},F.prototype.pow=function(t){if(0===t)return F.valueOf(1);var e=new F(this),n=F.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&n.selfMultiply(e),(i/=2)>0&&(e=e.sqr());else n=e;return t<0?n.reciprocal():n},F.prototype.ceil=function(){if(this.isNaN())return F.NaN;var t=Math.ceil(this._hi),e=0;return t===this._hi&&(e=Math.ceil(this._lo)),new F(t,e)},F.prototype.compareTo=function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0},F.prototype.rint=function(){if(this.isNaN())return this;return this.add(.5).floor()},F.prototype.setValue=function(){if(arguments[0]instanceof F){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.init(e),this}},F.prototype.max=function(t){return this.ge(t)?this:t},F.prototype.sqrt=function(){if(this.isZero())return F.valueOf(0);if(this.isNegative())return F.NaN;var t=1/Math.sqrt(this._hi),e=this._hi*t,n=F.valueOf(e),i=this.subtract(n.sqr())._hi*(.5*t);return n.add(i)},F.prototype.selfAdd=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0],n=null,i=null,r=null,o=null,s=null,a=null;return r=this._hi+e,s=r-this._hi,o=r-s,o=e-s+(this._hi-o),a=o+this._lo,n=r+a,i=a+(r-n),this._hi=n+i,this._lo=i+(n-this._hi),this}}else if(2===arguments.length){var u=arguments[0],l=arguments[1],c=null,p=null,h=null,f=null,g=null,d=null,y=null;f=this._hi+u,p=this._lo+l,g=f-(d=f-this._hi),h=p-(y=p-this._lo);var _=(c=f+(d=(g=u-d+(this._hi-g))+p))+(d=(h=l-y+(this._lo-h))+(d+(f-c))),m=d+(c-_);return this._hi=_,this._lo=m,this}},F.prototype.selfMultiply=function(){if(1===arguments.length){if(arguments[0]instanceof F){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return this.selfMultiply(e,0)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1],r=null,o=null,s=null,a=null,u=null,l=null;r=(u=F.SPLIT*this._hi)-this._hi,l=F.SPLIT*n,r=u-r,o=this._hi-r,s=l-n;var c=(u=this._hi*n)+(l=r*(s=l-s)-u+r*(a=n-s)+o*s+o*a+(this._hi*i+this._lo*n)),p=l+(r=u-c);return this._hi=c,this._lo=p,this}},F.prototype.selfSqr=function(){return this.selfMultiply(this)},F.prototype.floor=function(){if(this.isNaN())return F.NaN;var t=Math.floor(this._hi),e=0;return t===this._hi&&(e=Math.floor(this._lo)),new F(t,e)},F.prototype.negate=function(){return this.isNaN()?this:new F(-this._hi,-this._lo)},F.prototype.clone=function(){},F.prototype.multiply=function(){if(arguments[0]instanceof F){var t=arguments[0];return t.isNaN()?F.createNaN():F.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return v.isNaN(e)?F.createNaN():F.copy(this).selfMultiply(e,0)}},F.prototype.isNaN=function(){return v.isNaN(this._hi)},F.prototype.intValue=function(){return Math.trunc(this._hi)},F.prototype.toString=function(){var t=F.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()},F.prototype.toStandardNotation=function(){var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!0,e),i=e[0]+1,r=n;if(\".\"===n.charAt(0))r=\"0\"+n;else if(i<0)r=\"0.\"+F.stringOfChar(\"0\",-i)+n;else if(-1===n.indexOf(\".\")){var o=i-n.length;r=n+F.stringOfChar(\"0\",o)+\".0\"}return this.isNegative()?\"-\"+r:r},F.prototype.reciprocal=function(){var t=null,e=null,n=null,i=null,r=null,o=null,s=null,a=null;e=(r=1/this._hi)-(t=(o=F.SPLIT*r)-(t=o-r)),n=(a=F.SPLIT*this._hi)-this._hi;var u=r+(o=(1-(s=r*this._hi)-(a=t*(n=a-n)-s+t*(i=this._hi-n)+e*n+e*i)-r*this._lo)/this._hi);return new F(u,r-u+o)},F.prototype.toSciNotation=function(){if(this.isZero())return F.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var e=new Array(1).fill(null),n=this.extractSignificantDigits(!1,e),i=F.SCI_NOT_EXPONENT_CHAR+e[0];if(\"0\"===n.charAt(0))throw new Error(\"Found leading zero: \"+n);var r=\"\";n.length>1&&(r=n.substring(1));var o=n.charAt(0)+\".\"+r;return this.isNegative()?\"-\"+o+i:o+i},F.prototype.abs=function(){return this.isNaN()?F.NaN:this.isNegative()?this.negate():new F(this)},F.prototype.isPositive=function(){return(this._hi>0||0===this._hi)&&this._lo>0},F.prototype.lt=function(t){return(this._hi<t._hi||this._hi===t._hi)&&this._lo<t._lo},F.prototype.add=function(){if(arguments[0]instanceof F){var t=arguments[0];return F.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return F.copy(this).selfAdd(e)}},F.prototype.init=function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof F){var e=arguments[0];this._hi=e._hi,this._lo=e._lo}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._hi=n,this._lo=i}},F.prototype.gt=function(t){return(this._hi>t._hi||this._hi===t._hi)&&this._lo>t._lo},F.prototype.isNegative=function(){return(this._hi<0||0===this._hi)&&this._lo<0},F.prototype.trunc=function(){return this.isNaN()?F.NaN:this.isPositive()?this.floor():this.ceil()},F.prototype.signum=function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0},F.prototype.interfaces_=function(){return[e,E,x]},F.prototype.getClass=function(){return F},F.sqr=function(t){return F.valueOf(t).selfMultiply(t)},F.valueOf=function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return F.parse(t)}if(\"number\"==typeof arguments[0]){var e=arguments[0];return new F(e)}},F.sqrt=function(t){return F.valueOf(t).sqrt()},F.parse=function(t){for(var e=0,n=t.length;A.isWhitespace(t.charAt(e));)e++;var i=!1;if(e<n){var r=t.charAt(e);\"-\"!==r&&\"+\"!==r||(e++,\"-\"===r&&(i=!0))}for(var o=new F,s=0,a=0,u=0;!(e>=n);){var l=t.charAt(e);if(e++,A.isDigit(l)){var c=l-\"0\";o.selfMultiply(F.TEN),o.selfAdd(c),s++}else{if(\".\"!==l){if(\"e\"===l||\"E\"===l){var p=t.substring(e);try{u=M.parseInt(p)}catch(e){throw e instanceof Error?new Error(\"Invalid exponent \"+p+\" in string \"+t):e}break}throw new Error(\"Unexpected character '\"+l+\"' at position \"+e+\" in string \"+t)}a=s}}var h=o,f=s-a-u;if(0===f)h=o;else if(f>0){var g=F.TEN.pow(f);h=o.divide(g)}else if(f<0){var d=F.TEN.pow(-f);h=o.multiply(d)}return i?h.negate():h},F.createNaN=function(){return new F(v.NaN,v.NaN)},F.copy=function(t){return new F(t)},F.magnitude=function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),i=Math.trunc(Math.floor(n));return 10*Math.pow(10,i)<=e&&(i+=1),i},F.stringOfChar=function(t,e){for(var n=new D,i=0;i<e;i++)n.append(t);return n.toString()},G.PI.get=function(){return new F(3.141592653589793,1.2246467991473532e-16)},G.TWO_PI.get=function(){return new F(6.283185307179586,2.4492935982947064e-16)},G.PI_2.get=function(){return new F(1.5707963267948966,6.123233995736766e-17)},G.E.get=function(){return new F(2.718281828459045,1.4456468917292502e-16)},G.NaN.get=function(){return new F(v.NaN,v.NaN)},G.EPS.get=function(){return 1.23259516440783e-32},G.SPLIT.get=function(){return 134217729},G.MAX_PRINT_DIGITS.get=function(){return 32},G.TEN.get=function(){return F.valueOf(10)},G.ONE.get=function(){return F.valueOf(1)},G.SCI_NOT_EXPONENT_CHAR.get=function(){return\"E\"},G.SCI_NOT_ZERO.get=function(){return\"0.0E0\"},Object.defineProperties(F,G);var q=function(){},B={DP_SAFE_EPSILON:{configurable:!0}};q.prototype.interfaces_=function(){return[]},q.prototype.getClass=function(){return q},q.orientationIndex=function(t,e,n){var i=q.orientationIndexFilter(t,e,n);if(i<=1)return i;var r=F.valueOf(e.x).selfAdd(-t.x),o=F.valueOf(e.y).selfAdd(-t.y),s=F.valueOf(n.x).selfAdd(-e.x),a=F.valueOf(n.y).selfAdd(-e.y);return r.selfMultiply(a).selfSubtract(o.selfMultiply(s)).signum()},q.signOfDet2x2=function(t,e,n,i){return t.multiply(i).selfSubtract(e.multiply(n)).signum()},q.intersection=function(t,e,n,i){var r=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(e.x).selfSubtract(t.x)),o=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(e.y).selfSubtract(t.y)),s=r.subtract(o),a=F.valueOf(i.x).selfSubtract(n.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),u=F.valueOf(i.y).selfSubtract(n.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),l=a.subtract(u).selfDivide(s).doubleValue(),c=F.valueOf(t.x).selfAdd(F.valueOf(e.x).selfSubtract(t.x).selfMultiply(l)).doubleValue(),p=F.valueOf(e.x).selfSubtract(t.x).selfMultiply(F.valueOf(t.y).selfSubtract(n.y)),h=F.valueOf(e.y).selfSubtract(t.y).selfMultiply(F.valueOf(t.x).selfSubtract(n.x)),f=p.subtract(h).selfDivide(s).doubleValue(),g=F.valueOf(n.y).selfAdd(F.valueOf(i.y).selfSubtract(n.y).selfMultiply(f)).doubleValue();return new C(c,g)},q.orientationIndexFilter=function(t,e,n){var i=null,r=(t.x-n.x)*(e.y-n.y),o=(t.y-n.y)*(e.x-n.x),s=r-o;if(r>0){if(o<=0)return q.signum(s);i=r+o}else{if(!(r<0))return q.signum(s);if(o>=0)return q.signum(s);i=-r-o}var a=q.DP_SAFE_EPSILON*i;return s>=a||-s>=a?q.signum(s):2},q.signum=function(t){return t>0?1:t<0?-1:0},B.DP_SAFE_EPSILON.get=function(){return 1e-15},Object.defineProperties(q,B);var V=function(){},U={X:{configurable:!0},Y:{configurable:!0},Z:{configurable:!0},M:{configurable:!0}};U.X.get=function(){return 0},U.Y.get=function(){return 1},U.Z.get=function(){return 2},U.M.get=function(){return 3},V.prototype.setOrdinate=function(t,e,n){},V.prototype.size=function(){},V.prototype.getOrdinate=function(t,e){},V.prototype.getCoordinate=function(){},V.prototype.getCoordinateCopy=function(t){},V.prototype.getDimension=function(){},V.prototype.getX=function(t){},V.prototype.clone=function(){},V.prototype.expandEnvelope=function(t){},V.prototype.copy=function(){},V.prototype.getY=function(t){},V.prototype.toCoordinateArray=function(){},V.prototype.interfaces_=function(){return[x]},V.prototype.getClass=function(){return V},Object.defineProperties(V,U);var z=function(){},X=function(t){function e(){t.call(this,\"Projective point not representable on the Cartesian plane.\")}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(z),Y=function(){};Y.arraycopy=function(t,e,n,i,r){for(var o=0,s=e;s<e+r;s++)n[i+o]=t[s],o++},Y.getProperty=function(t){return{\"line.separator\":\"\\n\"}[t]};var k=function t(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var e=arguments[0];this.x=e.x,this.y=e.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];this.x=n,this.y=i,this.w=1}else if(arguments[0]instanceof t&&arguments[1]instanceof t){var r=arguments[0],o=arguments[1];this.x=r.y*o.w-o.y*r.w,this.y=o.x*r.w-r.x*o.w,this.w=r.x*o.y-o.x*r.y}else if(arguments[0]instanceof C&&arguments[1]instanceof C){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2];this.x=u,this.y=l,this.w=c}else if(4===arguments.length){var p=arguments[0],h=arguments[1],f=arguments[2],g=arguments[3],d=p.y-h.y,y=h.x-p.x,_=p.x*h.y-h.x*p.y,m=f.y-g.y,v=g.x-f.x,I=f.x*g.y-g.x*f.y;this.x=y*I-v*_,this.y=m*_-d*I,this.w=d*v-m*y}};k.prototype.getY=function(){var t=this.y/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getX=function(){var t=this.x/this.w;if(v.isNaN(t)||v.isInfinite(t))throw new X;return t},k.prototype.getCoordinate=function(){var t=new C;return t.x=this.getX(),t.y=this.getY(),t},k.prototype.interfaces_=function(){return[]},k.prototype.getClass=function(){return k},k.intersection=function(t,e,n,i){var r=t.y-e.y,o=e.x-t.x,s=t.x*e.y-e.x*t.y,a=n.y-i.y,u=i.x-n.x,l=n.x*i.y-i.x*n.y,c=r*u-a*o,p=(o*l-u*s)/c,h=(a*s-r*l)/c;if(v.isNaN(p)||v.isInfinite(p)||v.isNaN(h)||v.isInfinite(h))throw new X;return new C(p,h)};var j=function t(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof C){var e=arguments[0];this.init(e.x,e.x,e.y,e.y)}else if(arguments[0]instanceof t){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.init(i.x,r.x,i.y,r.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}},H={serialVersionUID:{configurable:!0}};j.prototype.getArea=function(){return this.getWidth()*this.getHeight()},j.prototype.equals=function(t){if(!(t instanceof j))return!1;var e=t;return this.isNull()?e.isNull():this._maxx===e.getMaxX()&&this._maxy===e.getMaxY()&&this._minx===e.getMinX()&&this._miny===e.getMinY()},j.prototype.intersection=function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new j;var e=this._minx>t._minx?this._minx:t._minx,n=this._miny>t._miny?this._miny:t._miny,i=this._maxx<t._maxx?this._maxx:t._maxx,r=this._maxy<t._maxy?this._maxy:t._maxy;return new j(e,i,n,r)},j.prototype.isNull=function(){return this._maxx<this._minx},j.prototype.getMaxX=function(){return this._maxx},j.prototype.covers=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof j){var e=arguments[0];return!this.isNull()&&!e.isNull()&&(e.getMinX()>=this._minx&&e.getMaxX()<=this._maxx&&e.getMinY()>=this._miny&&e.getMaxY()<=this._maxy)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&(n>=this._minx&&n<=this._maxx&&i>=this._miny&&i<=this._maxy)}},j.prototype.intersects=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof C){var e=arguments[0];return this.intersects(e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return!this.isNull()&&!(n>this._maxx||n<this._minx||i>this._maxy||i<this._miny)}},j.prototype.getMinY=function(){return this._miny},j.prototype.getMinX=function(){return this._minx},j.prototype.expandToInclude=function(){if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];if(e.isNull())return null;this.isNull()?(this._minx=e.getMinX(),this._maxx=e.getMaxX(),this._miny=e.getMinY(),this._maxy=e.getMaxY()):(e._minx<this._minx&&(this._minx=e._minx),e._maxx>this._maxx&&(this._maxx=e._maxx),e._miny<this._miny&&(this._miny=e._miny),e._maxy>this._maxy&&(this._maxy=e._maxy))}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.isNull()?(this._minx=n,this._maxx=n,this._miny=i,this._maxy=i):(n<this._minx&&(this._minx=n),n>this._maxx&&(this._maxx=n),i<this._miny&&(this._miny=i),i>this._maxy&&(this._maxy=i))}},j.prototype.minExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e},j.prototype.getWidth=function(){return this.isNull()?0:this._maxx-this._minx},j.prototype.compareTo=function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0},j.prototype.translate=function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)},j.prototype.toString=function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"},j.prototype.setToNull=function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1},j.prototype.getHeight=function(){return this.isNull()?0:this._maxy-this._miny},j.prototype.maxExtent=function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e},j.prototype.expandBy=function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}},j.prototype.contains=function(){if(1===arguments.length){if(arguments[0]instanceof j){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof C){var e=arguments[0];return this.covers(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.covers(n,i)}},j.prototype.centre=function(){return this.isNull()?null:new C((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)},j.prototype.init=function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof j){var e=arguments[0];this._minx=e._minx,this._maxx=e._maxx,this._miny=e._miny,this._maxy=e._maxy}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.init(n.x,i.x,n.y,i.y)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];r<o?(this._minx=r,this._maxx=o):(this._minx=o,this._maxx=r),s<a?(this._miny=s,this._maxy=a):(this._miny=a,this._maxy=s)}},j.prototype.getMaxY=function(){return this._maxy},j.prototype.distance=function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)},j.prototype.hashCode=function(){var t=17;return t=37*t+C.hashCode(this._minx),t=37*t+C.hashCode(this._maxx),t=37*t+C.hashCode(this._miny),t=37*t+C.hashCode(this._maxy)},j.prototype.interfaces_=function(){return[E,e]},j.prototype.getClass=function(){return j},j.intersects=function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(i.x,r.x),c=Math.max(i.x,r.x);return!(l>u)&&(!(c<a)&&(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(i.y,r.y),c=Math.max(i.y,r.y),!(l>u)&&!(c<a)))}},H.serialVersionUID.get=function(){return 0x51845cd552189800},Object.defineProperties(j,H);var W={typeStr:/^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,emptyTypeStr:/^\\s*(\\w+)\\s*EMPTY\\s*$/,spaces:/\\s+/,parenComma:/\\)\\s*,\\s*\\(/,doubleParenComma:/\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/,trimParens:/^\\s*\\(?(.*?)\\)?\\s*$/},K=function(t){this.geometryFactory=t||new _e};K.prototype.read=function(t){var e,n,i;t=t.replace(/[\\n\\r]/g,\" \");var r=W.typeStr.exec(t);if(-1!==t.search(\"EMPTY\")&&((r=W.emptyTypeStr.exec(t))[2]=void 0),r&&(n=r[1].toLowerCase(),i=r[2],Q[n]&&(e=Q[n].apply(this,[i]))),void 0===e)throw new Error(\"Could not parse WKT \"+t);return e},K.prototype.write=function(t){return this.extractGeometry(t)},K.prototype.extractGeometry=function(t){var e=t.getGeometryType().toLowerCase();if(!J[e])return null;var n=e.toUpperCase();return t.isEmpty()?n+\" EMPTY\":n+\"(\"+J[e].apply(this,[t])+\")\"};var J={coordinate:function(t){return t.x+\" \"+t.y},point:function(t){return J.coordinate.call(this,t._coordinates._coordinates[0])},multipoint:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.point.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},linestring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},linearring:function(t){for(var e=[],n=0,i=t._points._coordinates.length;n<i;++n)e.push(J.coordinate.apply(this,[t._points._coordinates[n]]));return e.join(\",\")},multilinestring:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},polygon:function(t){var e=[];e.push(\"(\"+J.linestring.apply(this,[t._shell])+\")\");for(var n=0,i=t._holes.length;n<i;++n)e.push(\"(\"+J.linestring.apply(this,[t._holes[n]])+\")\");return e.join(\",\")},multipolygon:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(\"(\"+J.polygon.apply(this,[t._geometries[n]])+\")\");return e.join(\",\")},geometrycollection:function(t){for(var e=[],n=0,i=t._geometries.length;n<i;++n)e.push(this.extractGeometry(t._geometries[n]));return e.join(\",\")}},Q={point:function(t){if(void 0===t)return this.geometryFactory.createPoint();var e=t.trim().split(W.spaces);return this.geometryFactory.createPoint(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])))},multipoint:function(t){if(void 0===t)return this.geometryFactory.createMultiPoint();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.point.apply(this,[e]));return this.geometryFactory.createMultiPoint(i)},linestring:function(t){if(void 0===t)return this.geometryFactory.createLineString();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLineString(i)},linearring:function(t){if(void 0===t)return this.geometryFactory.createLinearRing();for(var e,n=t.trim().split(\",\"),i=[],r=0,o=n.length;r<o;++r)e=n[r].trim().split(W.spaces),i.push(new C(Number.parseFloat(e[0]),Number.parseFloat(e[1])));return this.geometryFactory.createLinearRing(i)},multilinestring:function(t){if(void 0===t)return this.geometryFactory.createMultiLineString();for(var e,n=t.trim().split(W.parenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.linestring.apply(this,[e]));return this.geometryFactory.createMultiLineString(i)},polygon:function(t){if(void 0===t)return this.geometryFactory.createPolygon();for(var e,n,i,r,o=t.trim().split(W.parenComma),s=[],a=0,u=o.length;a<u;++a)e=o[a].replace(W.trimParens,\"$1\"),n=Q.linestring.apply(this,[e]),i=this.geometryFactory.createLinearRing(n._points),0===a?r=i:s.push(i);return this.geometryFactory.createPolygon(r,s)},multipolygon:function(t){if(void 0===t)return this.geometryFactory.createMultiPolygon();for(var e,n=t.trim().split(W.doubleParenComma),i=[],r=0,o=n.length;r<o;++r)e=n[r].replace(W.trimParens,\"$1\"),i.push(Q.polygon.apply(this,[e]));return this.geometryFactory.createMultiPolygon(i)},geometrycollection:function(t){if(void 0===t)return this.geometryFactory.createGeometryCollection();for(var e=(t=t.replace(/,\\s*([A-Za-z])/g,\"|$1\")).trim().split(\"|\"),n=[],i=0,r=e.length;i<r;++i)n.push(this.read(e[i]));return this.geometryFactory.createGeometryCollection(n)}},Z=function(t){this.parser=new K(t)};Z.prototype.write=function(t){return this.parser.write(t)},Z.toLineString=function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"};var $=function(t){function e(e){t.call(this,e),this.name=\"RuntimeException\",this.message=e,this.stack=(new t).stack}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error),tt=function(t){function e(){if(t.call(this),0===arguments.length)t.call(this);else if(1===arguments.length){var e=arguments[0];t.call(this,e)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}($),et=function(){};et.prototype.interfaces_=function(){return[]},et.prototype.getClass=function(){return et},et.shouldNeverReachHere=function(){if(0===arguments.length)et.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new tt(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}},et.isTrue=function(){var t,e;if(1===arguments.length)t=arguments[0],et.isTrue(t,null);else if(2===arguments.length&&(t=arguments[0],e=arguments[1],!t))throw null===e?new tt:new tt(e)},et.equals=function(){var t,e,n;if(2===arguments.length)t=arguments[0],e=arguments[1],et.equals(t,e,null);else if(3===arguments.length&&(t=arguments[0],e=arguments[1],n=arguments[2],!e.equals(t)))throw new tt(\"Expected \"+t+\" but encountered \"+e+(null!==n?\": \"+n:\"\"))};var nt=function(){this._result=null,this._inputLines=Array(2).fill().map(function(){return Array(2)}),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new C,this._intPt[1]=new C,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0},it={DONT_INTERSECT:{configurable:!0},DO_INTERSECT:{configurable:!0},COLLINEAR:{configurable:!0},NO_INTERSECTION:{configurable:!0},POINT_INTERSECTION:{configurable:!0},COLLINEAR_INTERSECTION:{configurable:!0}};nt.prototype.getIndexAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]},nt.prototype.getTopologySummary=function(){var t=new D;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()},nt.prototype.computeIntersection=function(t,e,n,i){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=i,this._result=this.computeIntersect(t,e,n,i)},nt.prototype.getIntersectionNum=function(){return this._result},nt.prototype.computeIntLineIndex=function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map(function(){return Array(2)}),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}},nt.prototype.isProper=function(){return this.hasIntersection()&&this._isProper},nt.prototype.setPrecisionModel=function(t){this._precisionModel=t},nt.prototype.isInteriorIntersection=function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}},nt.prototype.getIntersection=function(t){return this._intPt[t]},nt.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper},nt.prototype.hasIntersection=function(){return this._result!==nt.NO_INTERSECTION},nt.prototype.getEdgeDistance=function(t,e){return nt.computeEdgeDistance(this._intPt[e],this._inputLines[t][0],this._inputLines[t][1])},nt.prototype.isCollinear=function(){return this._result===nt.COLLINEAR_INTERSECTION},nt.prototype.toString=function(){return Z.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Z.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()},nt.prototype.getEndpoint=function(t,e){return this._inputLines[t][e]},nt.prototype.isIntersection=function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1},nt.prototype.getIntersectionAlongSegment=function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]},nt.prototype.interfaces_=function(){return[]},nt.prototype.getClass=function(){return nt},nt.computeEdgeDistance=function(t,e,n){var i=Math.abs(n.x-e.x),r=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=i>r?i:r;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=i>r?s:a)||t.equals(e)||(o=Math.max(s,a))}return et.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o},nt.nonRobustComputeEdgeDistance=function(t,e,n){var i=t.x-e.x,r=t.y-e.y,o=Math.sqrt(i*i+r*r);return et.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o},it.DONT_INTERSECT.get=function(){return 0},it.DO_INTERSECT.get=function(){return 1},it.COLLINEAR.get=function(){return 2},it.NO_INTERSECTION.get=function(){return 0},it.POINT_INTERSECTION.get=function(){return 1},it.COLLINEAR_INTERSECTION.get=function(){return 2},Object.defineProperties(nt,it);var rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isInSegmentEnvelopes=function(t){var e=new j(this._inputLines[0][0],this._inputLines[0][1]),n=new j(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)},e.prototype.computeIntersection=function(){if(3!==arguments.length)return t.prototype.computeIntersection.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2];if(this._isProper=!1,j.intersects(n,i,e)&&0===at.orientationIndex(n,i,e)&&0===at.orientationIndex(i,n,e))return this._isProper=!0,(e.equals(n)||e.equals(i))&&(this._isProper=!1),this._result=t.POINT_INTERSECTION,null;this._result=t.NO_INTERSECTION},e.prototype.normalizeToMinimum=function(t,e,n,i,r){r.x=this.smallestInAbsValue(t.x,e.x,n.x,i.x),r.y=this.smallestInAbsValue(t.y,e.y,n.y,i.y),t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.safeHCoordinateIntersection=function(t,n,i,r){var o=null;try{o=k.intersection(t,n,i,r)}catch(s){if(!(s instanceof X))throw s;o=e.nearestEndpoint(t,n,i,r)}return o},e.prototype.intersection=function(t,n,i,r){var o=this.intersectionWithNormalization(t,n,i,r);return this.isInSegmentEnvelopes(o)||(o=new C(e.nearestEndpoint(t,n,i,r))),null!==this._precisionModel&&this._precisionModel.makePrecise(o),o},e.prototype.smallestInAbsValue=function(t,e,n,i){var r=t,o=Math.abs(r);return Math.abs(e)<o&&(r=e,o=Math.abs(e)),Math.abs(n)<o&&(r=n,o=Math.abs(n)),Math.abs(i)<o&&(r=i),r},e.prototype.checkDD=function(t,e,n,i,r){var o=q.intersection(t,e,n,i),s=this.isInSegmentEnvelopes(o);Y.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),r.distance(o)>1e-4&&Y.out.println(\"Distance = \"+r.distance(o))},e.prototype.intersectionWithNormalization=function(t,e,n,i){var r=new C(t),o=new C(e),s=new C(n),a=new C(i),u=new C;this.normalizeToEnvCentre(r,o,s,a,u);var l=this.safeHCoordinateIntersection(r,o,s,a);return l.x+=u.x,l.y+=u.y,l},e.prototype.computeCollinearIntersection=function(e,n,i,r){var o=j.intersects(e,n,i),s=j.intersects(e,n,r),a=j.intersects(i,r,e),u=j.intersects(i,r,n);return o&&s?(this._intPt[0]=i,this._intPt[1]=r,t.COLLINEAR_INTERSECTION):a&&u?(this._intPt[0]=e,this._intPt[1]=n,t.COLLINEAR_INTERSECTION):o&&a?(this._intPt[0]=i,this._intPt[1]=e,!i.equals(e)||s||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):o&&u?(this._intPt[0]=i,this._intPt[1]=n,!i.equals(n)||s||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||o||u?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):s&&u?(this._intPt[0]=r,this._intPt[1]=n,!r.equals(n)||o||a?t.COLLINEAR_INTERSECTION:t.POINT_INTERSECTION):t.NO_INTERSECTION},e.prototype.normalizeToEnvCentre=function(t,e,n,i,r){var o=t.x<e.x?t.x:e.x,s=t.y<e.y?t.y:e.y,a=t.x>e.x?t.x:e.x,u=t.y>e.y?t.y:e.y,l=n.x<i.x?n.x:i.x,c=n.y<i.y?n.y:i.y,p=n.x>i.x?n.x:i.x,h=n.y>i.y?n.y:i.y,f=((o>l?o:l)+(a<p?a:p))/2,g=((s>c?s:c)+(u<h?u:h))/2;r.x=f,r.y=g,t.x-=r.x,t.y-=r.y,e.x-=r.x,e.y-=r.y,n.x-=r.x,n.y-=r.y,i.x-=r.x,i.y-=r.y},e.prototype.computeIntersect=function(e,n,i,r){if(this._isProper=!1,!j.intersects(e,n,i,r))return t.NO_INTERSECTION;var o=at.orientationIndex(e,n,i),s=at.orientationIndex(e,n,r);if(o>0&&s>0||o<0&&s<0)return t.NO_INTERSECTION;var a=at.orientationIndex(i,r,e),u=at.orientationIndex(i,r,n);if(a>0&&u>0||a<0&&u<0)return t.NO_INTERSECTION;return 0===o&&0===s&&0===a&&0===u?this.computeCollinearIntersection(e,n,i,r):(0===o||0===s||0===a||0===u?(this._isProper=!1,e.equals2D(i)||e.equals2D(r)?this._intPt[0]=e:n.equals2D(i)||n.equals2D(r)?this._intPt[0]=n:0===o?this._intPt[0]=new C(i):0===s?this._intPt[0]=new C(r):0===a?this._intPt[0]=new C(e):0===u&&(this._intPt[0]=new C(n))):(this._isProper=!0,this._intPt[0]=this.intersection(e,n,i,r)),t.POINT_INTERSECTION)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.nearestEndpoint=function(t,e,n,i){var r=t,o=at.distancePointLine(t,n,i),s=at.distancePointLine(e,n,i);return s<o&&(o=s,r=e),(s=at.distancePointLine(n,t,e))<o&&(o=s,r=n),(s=at.distancePointLine(i,t,e))<o&&(o=s,r=i),r},e}(nt),ot=function(){};ot.prototype.interfaces_=function(){return[]},ot.prototype.getClass=function(){return ot},ot.orientationIndex=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=n.x-e.x,s=n.y-e.y;return ot.signOfDet2x2(i,r,o,s)},ot.signOfDet2x2=function(t,e,n,i){var r=null,o=null,s=null;if(r=1,0===t||0===i)return 0===e||0===n?0:e>0?n>0?-r:r:n>0?r:-r;if(0===e||0===n)return i>0?t>0?r:-r:t>0?-r:r;if(e>0?i>0?e<=i||(r=-r,o=t,t=n,n=o,o=e,e=i,i=o):e<=-i?(r=-r,n=-n,i=-i):(o=t,t=-n,n=o,o=e,e=-i,i=o):i>0?-e<=i?(r=-r,t=-t,e=-e):(o=-t,t=n,n=o,o=-e,e=i,i=o):e>=i?(t=-t,e=-e,n=-n,i=-i):(r=-r,o=-t,t=-n,n=o,o=-e,e=-i,i=o),t>0){if(!(n>0))return r;if(!(t<=n))return r}else{if(n>0)return-r;if(!(t>=n))return-r;r=-r,t=-t,n=-n}for(;;){if(s=Math.floor(n/t),n-=s*t,(i-=s*e)<0)return-r;if(i>e)return r;if(t>n+n){if(e<i+i)return r}else{if(e>i+i)return-r;n=t-n,i=e-i,r=-r}if(0===i)return 0===n?0:-r;if(0===n)return r;if(s=Math.floor(t/n),t-=s*n,(e-=s*i)<0)return r;if(e>i)return-r;if(n>t+t){if(i<e+e)return-r}else{if(i>e+e)return r;t=n-t,e=i-e,r=-r}if(0===e)return 0===t?0:r;if(0===t)return-r}};var st=function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t};st.prototype.countSegment=function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,i=e.x;return n>i&&(n=e.x,i=t.x),this._p.x>=n&&this._p.x<=i&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var r=t.x-this._p.x,o=t.y-this._p.y,s=e.x-this._p.x,a=e.y-this._p.y,u=ot.signOfDet2x2(r,o,s,a);if(0===u)return this._isPointOnSegment=!0,null;a<o&&(u=-u),u>0&&this._crossingCount++}},st.prototype.isPointInPolygon=function(){return this.getLocation()!==w.EXTERIOR},st.prototype.getLocation=function(){return this._isPointOnSegment?w.BOUNDARY:this._crossingCount%2==1?w.INTERIOR:w.EXTERIOR},st.prototype.isOnSegment=function(){return this._isPointOnSegment},st.prototype.interfaces_=function(){return[]},st.prototype.getClass=function(){return st},st.locatePointInRing=function(){if(arguments[0]instanceof C&&T(arguments[1],V)){for(var t=arguments[0],e=arguments[1],n=new st(t),i=new C,r=new C,o=1;o<e.size();o++)if(e.getCoordinate(o,i),e.getCoordinate(o-1,r),n.countSegment(i,r),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof C&&arguments[1]instanceof Array){for(var s=arguments[0],a=arguments[1],u=new st(s),l=1;l<a.length;l++){var c=a[l],p=a[l-1];if(u.countSegment(c,p),u.isOnSegment())return u.getLocation()}return u.getLocation()}};var at=function(){},ut={CLOCKWISE:{configurable:!0},RIGHT:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},LEFT:{configurable:!0},COLLINEAR:{configurable:!0},STRAIGHT:{configurable:!0}};at.prototype.interfaces_=function(){return[]},at.prototype.getClass=function(){return at},at.orientationIndex=function(t,e,n){return q.orientationIndex(t,e,n)},at.signedArea=function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,i=1;i<t.length-1;i++){var r=t[i].x-n,o=t[i+1].y;e+=r*(t[i-1].y-o)}return e/2}if(T(arguments[0],V)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new C,l=new C,c=new C;s.getCoordinate(0,l),s.getCoordinate(1,c);var p=l.x;c.x-=p;for(var h=0,f=1;f<a-1;f++)u.y=l.y,l.x=c.x,l.y=c.y,s.getCoordinate(f+1,c),c.x-=p,h+=l.x*(u.y-c.y);return h/2}},at.distanceLineLine=function(t,e,n,i){if(t.equals(e))return at.distancePointLine(t,n,i);if(n.equals(i))return at.distancePointLine(i,t,e);var r=!1;if(j.intersects(t,e,n,i)){var o=(e.x-t.x)*(i.y-n.y)-(e.y-t.y)*(i.x-n.x);if(0===o)r=!0;else{var s=(t.y-n.y)*(i.x-n.x)-(t.x-n.x)*(i.y-n.y),a=((t.y-n.y)*(e.x-t.x)-(t.x-n.x)*(e.y-t.y))/o,u=s/o;(u<0||u>1||a<0||a>1)&&(r=!0)}}else r=!0;return r?R.min(at.distancePointLine(t,n,i),at.distancePointLine(e,n,i),at.distancePointLine(n,t,e),at.distancePointLine(i,t,e)):0},at.isPointInRing=function(t,e){return at.locatePointInRing(t,e)!==w.EXTERIOR},at.computeLength=function(t){var e=t.size();if(e<=1)return 0;var n=0,i=new C;t.getCoordinate(0,i);for(var r=i.x,o=i.y,s=1;s<e;s++){t.getCoordinate(s,i);var a=i.x,u=i.y,l=a-r,c=u-o;n+=Math.sqrt(l*l+c*c),r=a,o=u}return n},at.isCCW=function(t){var e=t.length-1;if(e<3)throw new m(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var n=t[0],i=0,r=1;r<=e;r++){var o=t[r];o.y>n.y&&(n=o,i=r)}var s=i;do{(s-=1)<0&&(s=e)}while(t[s].equals2D(n)&&s!==i);var a=i;do{a=(a+1)%e}while(t[a].equals2D(n)&&a!==i);var u=t[s],l=t[a];if(u.equals2D(n)||l.equals2D(n)||u.equals2D(l))return!1;var c=at.computeOrientation(u,n,l),p=!1;return p=0===c?u.x>l.x:c>0,p},at.locatePointInRing=function(t,e){return st.locatePointInRing(t,e)},at.distancePointLinePerpendicular=function(t,e,n){var i=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),r=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/i;return Math.abs(r)*Math.sqrt(i)},at.computeOrientation=function(t,e,n){return at.orientationIndex(t,e,n)},at.distancePointLine=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(0===e.length)throw new m(\"Line array must contain at least one vertex\");for(var n=t.distance(e[0]),i=0;i<e.length-1;i++){var r=at.distancePointLine(t,e[i],e[i+1]);r<n&&(n=r)}return n}if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];if(s.x===a.x&&s.y===a.y)return o.distance(s);var u=(a.x-s.x)*(a.x-s.x)+(a.y-s.y)*(a.y-s.y),l=((o.x-s.x)*(a.x-s.x)+(o.y-s.y)*(a.y-s.y))/u;if(l<=0)return o.distance(s);if(l>=1)return o.distance(a);var c=((s.y-o.y)*(a.x-s.x)-(s.x-o.x)*(a.y-s.y))/u;return Math.abs(c)*Math.sqrt(u)}},at.isOnLine=function(t,e){for(var n=new rt,i=1;i<e.length;i++){var r=e[i-1],o=e[i];if(n.computeIntersection(t,r,o),n.hasIntersection())return!0}return!1},ut.CLOCKWISE.get=function(){return-1},ut.RIGHT.get=function(){return at.CLOCKWISE},ut.COUNTERCLOCKWISE.get=function(){return 1},ut.LEFT.get=function(){return at.COUNTERCLOCKWISE},ut.COLLINEAR.get=function(){return 0},ut.STRAIGHT.get=function(){return at.COLLINEAR},Object.defineProperties(at,ut);var lt=function(){};lt.prototype.filter=function(t){},lt.prototype.interfaces_=function(){return[]},lt.prototype.getClass=function(){return lt};var ct=function(){var t=arguments[0];this._envelope=null,this._factory=null,this._SRID=null,this._userData=null,this._factory=t,this._SRID=t.getSRID()},pt={serialVersionUID:{configurable:!0},SORTINDEX_POINT:{configurable:!0},SORTINDEX_MULTIPOINT:{configurable:!0},SORTINDEX_LINESTRING:{configurable:!0},SORTINDEX_LINEARRING:{configurable:!0},SORTINDEX_MULTILINESTRING:{configurable:!0},SORTINDEX_POLYGON:{configurable:!0},SORTINDEX_MULTIPOLYGON:{configurable:!0},SORTINDEX_GEOMETRYCOLLECTION:{configurable:!0},geometryChangedFilter:{configurable:!0}};ct.prototype.isGeometryCollection=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION},ct.prototype.getFactory=function(){return this._factory},ct.prototype.getGeometryN=function(t){return this},ct.prototype.getArea=function(){return 0},ct.prototype.isRectangle=function(){return!1},ct.prototype.equals=function(){if(arguments[0]instanceof ct){var t=arguments[0];return null!==t&&this.equalsTopo(t)}if(arguments[0]instanceof Object){var e=arguments[0];if(!(e instanceof ct))return!1;var n=e;return this.equalsExact(n)}},ct.prototype.equalsExact=function(t){return this===t||this.equalsExact(t,0)},ct.prototype.geometryChanged=function(){this.apply(ct.geometryChangedFilter)},ct.prototype.geometryChangedAction=function(){this._envelope=null},ct.prototype.equalsNorm=function(t){return null!==t&&this.norm().equalsExact(t.norm())},ct.prototype.getLength=function(){return 0},ct.prototype.getNumGeometries=function(){return 1},ct.prototype.compareTo=function(){if(1===arguments.length){var t=arguments[0],e=t;return this.getSortIndex()!==e.getSortIndex()?this.getSortIndex()-e.getSortIndex():this.isEmpty()&&e.isEmpty()?0:this.isEmpty()?-1:e.isEmpty()?1:this.compareToSameClass(t)}if(2===arguments.length){var n=arguments[0],i=arguments[1];return this.getSortIndex()!==n.getSortIndex()?this.getSortIndex()-n.getSortIndex():this.isEmpty()&&n.isEmpty()?0:this.isEmpty()?-1:n.isEmpty()?1:this.compareToSameClass(n,i)}},ct.prototype.getUserData=function(){return this._userData},ct.prototype.getSRID=function(){return this._SRID},ct.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())},ct.prototype.checkNotGeometryCollection=function(t){if(t.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION)throw new m(\"This method does not support GeometryCollection arguments\")},ct.prototype.equal=function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n},ct.prototype.norm=function(){var t=this.copy();return t.normalize(),t},ct.prototype.getPrecisionModel=function(){return this._factory.getPrecisionModel()},ct.prototype.getEnvelopeInternal=function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new j(this._envelope)},ct.prototype.setSRID=function(t){this._SRID=t},ct.prototype.setUserData=function(t){this._userData=t},ct.prototype.compare=function(t,e){for(var n=t.iterator(),i=e.iterator();n.hasNext()&&i.hasNext();){var r=n.next(),o=i.next(),s=r.compareTo(o);if(0!==s)return s}return n.hasNext()?1:i.hasNext()?-1:0},ct.prototype.hashCode=function(){return this.getEnvelopeInternal().hashCode()},ct.prototype.isGeometryCollectionOrDerived=function(){return this.getSortIndex()===ct.SORTINDEX_GEOMETRYCOLLECTION||this.getSortIndex()===ct.SORTINDEX_MULTIPOINT||this.getSortIndex()===ct.SORTINDEX_MULTILINESTRING||this.getSortIndex()===ct.SORTINDEX_MULTIPOLYGON},ct.prototype.interfaces_=function(){return[x,E,e]},ct.prototype.getClass=function(){return ct},ct.hasNonEmptyElements=function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1},ct.hasNullElements=function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1},pt.serialVersionUID.get=function(){return 0x799ea46522854c00},pt.SORTINDEX_POINT.get=function(){return 0},pt.SORTINDEX_MULTIPOINT.get=function(){return 1},pt.SORTINDEX_LINESTRING.get=function(){return 2},pt.SORTINDEX_LINEARRING.get=function(){return 3},pt.SORTINDEX_MULTILINESTRING.get=function(){return 4},pt.SORTINDEX_POLYGON.get=function(){return 5},pt.SORTINDEX_MULTIPOLYGON.get=function(){return 6},pt.SORTINDEX_GEOMETRYCOLLECTION.get=function(){return 7},pt.geometryChangedFilter.get=function(){return ht},Object.defineProperties(ct,pt);var ht=function(){};ht.interfaces_=function(){return[lt]},ht.filter=function(t){t.geometryChangedAction()};var ft=function(){};ft.prototype.filter=function(t){},ft.prototype.interfaces_=function(){return[]},ft.prototype.getClass=function(){return ft};var gt=function(){},dt={Mod2BoundaryNodeRule:{configurable:!0},EndPointBoundaryNodeRule:{configurable:!0},MultiValentEndPointBoundaryNodeRule:{configurable:!0},MonoValentEndPointBoundaryNodeRule:{configurable:!0},MOD2_BOUNDARY_RULE:{configurable:!0},ENDPOINT_BOUNDARY_RULE:{configurable:!0},MULTIVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},MONOVALENT_ENDPOINT_BOUNDARY_RULE:{configurable:!0},OGC_SFS_BOUNDARY_RULE:{configurable:!0}};gt.prototype.isInBoundary=function(t){},gt.prototype.interfaces_=function(){return[]},gt.prototype.getClass=function(){return gt},dt.Mod2BoundaryNodeRule.get=function(){return yt},dt.EndPointBoundaryNodeRule.get=function(){return _t},dt.MultiValentEndPointBoundaryNodeRule.get=function(){return mt},dt.MonoValentEndPointBoundaryNodeRule.get=function(){return vt},dt.MOD2_BOUNDARY_RULE.get=function(){return new yt},dt.ENDPOINT_BOUNDARY_RULE.get=function(){return new _t},dt.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new mt},dt.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get=function(){return new vt},dt.OGC_SFS_BOUNDARY_RULE.get=function(){return gt.MOD2_BOUNDARY_RULE},Object.defineProperties(gt,dt);var yt=function(){};yt.prototype.isInBoundary=function(t){return t%2==1},yt.prototype.interfaces_=function(){return[gt]},yt.prototype.getClass=function(){return yt};var _t=function(){};_t.prototype.isInBoundary=function(t){return t>0},_t.prototype.interfaces_=function(){return[gt]},_t.prototype.getClass=function(){return _t};var mt=function(){};mt.prototype.isInBoundary=function(t){return t>1},mt.prototype.interfaces_=function(){return[gt]},mt.prototype.getClass=function(){return mt};var vt=function(){};vt.prototype.isInBoundary=function(t){return 1===t},vt.prototype.interfaces_=function(){return[gt]},vt.prototype.getClass=function(){return vt};var It=function(){};It.prototype.add=function(){},It.prototype.addAll=function(){},It.prototype.isEmpty=function(){},It.prototype.iterator=function(){},It.prototype.size=function(){},It.prototype.toArray=function(){},It.prototype.remove=function(){},(n.prototype=new Error).name=\"IndexOutOfBoundsException\";var Et=function(){};Et.prototype.hasNext=function(){},Et.prototype.next=function(){},Et.prototype.remove=function(){};var xt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(){},e.prototype.set=function(){},e.prototype.isEmpty=function(){},e}(It);(i.prototype=new Error).name=\"NoSuchElementException\";var Nt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.ensureCapacity=function(){},e.prototype.interfaces_=function(){return[t,It]},e.prototype.add=function(t){return 1===arguments.length?this.array_.push(t):this.array_.splice(arguments[0],arguments[1]),!0},e.prototype.clear=function(){this.array_=[]},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.set=function(t,e){var n=this.array_[t];return this.array_[t]=e,n},e.prototype.iterator=function(){return new Ct(this)},e.prototype.get=function(t){if(t<0||t>=this.size())throw new n;return this.array_[t]},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.size=function(){return this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.remove=function(t){for(var e=!1,n=0,i=this.array_.length;n<i;n++)if(this.array_[n]===t){this.array_.splice(n,1),e=!0;break}return e},e}(xt),Ct=function(t){function e(e){t.call(this),this.arrayList_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.arrayList_.size())throw new i;return this.arrayList_.get(this.position_++)},e.prototype.hasNext=function(){return this.position_<this.arrayList_.size()},e.prototype.set=function(t){return this.arrayList_.set(this.position_-1,t)},e.prototype.remove=function(){this.arrayList_.remove(this.arrayList_.get(this.position_))},e}(Et),St=function(t){function e(){if(t.call(this),0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.ensureCapacity(e.length),this.add(e,!0)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.ensureCapacity(n.length),this.add(n,i)}}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={coordArrayType:{configurable:!0}};return n.coordArrayType.get=function(){return new Array(0).fill(null)},e.prototype.getCoordinate=function(t){return this.get(t)},e.prototype.addAll=function(){if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=!1,r=e.iterator();r.hasNext();)this.add(r.next(),n),i=!0;return i}return t.prototype.addAll.apply(this,arguments)},e.prototype.clone=function(){for(var e=t.prototype.clone.call(this),n=0;n<this.size();n++)e.add(n,this.get(n).copy());return e},e.prototype.toCoordinateArray=function(){return this.toArray(e.coordArrayType)},e.prototype.add=function(){if(1===arguments.length){var e=arguments[0];t.prototype.add.call(this,e)}else if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var n=arguments[0],i=arguments[1];return this.add(n,i,!0),!0}if(arguments[0]instanceof C&&\"boolean\"==typeof arguments[1]){var r=arguments[0];if(!arguments[1]&&this.size()>=1){if(this.get(this.size()-1).equals2D(r))return null}t.prototype.add.call(this,r)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return this.add(o,s),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var a=arguments[0],u=arguments[1];if(arguments[2])for(var l=0;l<a.length;l++)this.add(a[l],u);else for(var c=a.length-1;c>=0;c--)this.add(a[c],u);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1];if(!arguments[2]){var f=this.size();if(f>0){if(p>0){if(this.get(p-1).equals2D(h))return null}if(p<f){if(this.get(p).equals2D(h))return null}}}t.prototype.add.call(this,p,h)}}else if(4===arguments.length){var g=arguments[0],d=arguments[1],y=arguments[2],_=arguments[3],m=1;y>_&&(m=-1);for(var v=y;v!==_;v+=m)this.add(g[v],d);return!0}},e.prototype.closeRing=function(){this.size()>0&&this.add(new C(this.get(0)),!1)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},Object.defineProperties(e,n),e}(Nt),Lt=function(){},bt={ForwardComparator:{configurable:!0},BidirectionalComparator:{configurable:!0},coordArrayType:{configurable:!0}};bt.ForwardComparator.get=function(){return wt},bt.BidirectionalComparator.get=function(){return Ot},bt.coordArrayType.get=function(){return new Array(0).fill(null)},Lt.prototype.interfaces_=function(){return[]},Lt.prototype.getClass=function(){return Lt},Lt.isRing=function(t){return!(t.length<4)&&!!t[0].equals2D(t[t.length-1])},Lt.ptNotInList=function(t,e){for(var n=0;n<t.length;n++){var i=t[n];if(Lt.indexOf(i,e)<0)return i}return null},Lt.scroll=function(t,e){var n=Lt.indexOf(e,t);if(n<0)return null;var i=new Array(t.length).fill(null);Y.arraycopy(t,n,i,0,t.length-n),Y.arraycopy(t,0,i,t.length-n,n),Y.arraycopy(i,0,t,0,t.length)},Lt.equals=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];if(i===r)return!0;if(null===i||null===r)return!1;if(i.length!==r.length)return!1;for(var s=0;s<i.length;s++)if(0!==o.compare(i[s],r[s]))return!1;return!0}},Lt.intersection=function(t,e){for(var n=new St,i=0;i<t.length;i++)e.intersects(t[i])&&n.add(t[i],!0);return n.toCoordinateArray()},Lt.hasRepeatedPoints=function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1},Lt.removeRepeatedPoints=function(t){if(!Lt.hasRepeatedPoints(t))return t;return new St(t,!1).toCoordinateArray()},Lt.reverse=function(t){for(var e=t.length-1,n=Math.trunc(e/2),i=0;i<=n;i++){var r=t[i];t[i]=t[e-i],t[e-i]=r}},Lt.removeNull=function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var i=new Array(e).fill(null);if(0===e)return i;for(var r=0,o=0;o<t.length;o++)null!==t[o]&&(i[r++]=t[o]);return i},Lt.copyDeep=function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=new C(t[n]);return e}if(5===arguments.length)for(var i=arguments[0],r=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=new C(i[r+u])},Lt.isEqualReversed=function(t,e){for(var n=0;n<t.length;n++){var i=t[n],r=e[t.length-n-1];if(0!==i.compareTo(r))return!1}return!0},Lt.envelope=function(t){for(var e=new j,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e},Lt.toCoordinateArray=function(t){return t.toArray(Lt.coordArrayType)},Lt.atLeastNCoordinatesOrNothing=function(t,e){return e.length>=t?e:[]},Lt.indexOf=function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1},Lt.increasingDirection=function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,i=t[e].compareTo(t[n]);if(0!==i)return i}return 1},Lt.compare=function(t,e){for(var n=0;n<t.length&&n<e.length;){var i=t[n].compareTo(e[n]);if(0!==i)return i;n++}return n<e.length?-1:n<t.length?1:0},Lt.minCoordinate=function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e},Lt.extract=function(t,e,n){e=R.clamp(e,0,t.length);var i=(n=R.clamp(n,-1,t.length))-e+1;n<0&&(i=0),e>=t.length&&(i=0),n<e&&(i=0);var r=new Array(i).fill(null);if(0===i)return r;for(var o=0,s=e;s<=n;s++)r[o++]=t[s];return r},Object.defineProperties(Lt,bt);var wt=function(){};wt.prototype.compare=function(t,e){return Lt.compare(t,e)},wt.prototype.interfaces_=function(){return[N]},wt.prototype.getClass=function(){return wt};var Ot=function(){};Ot.prototype.compare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;var r=Lt.compare(n,i);return Lt.isEqualReversed(n,i)?0:r},Ot.prototype.OLDcompare=function(t,e){var n=t,i=e;if(n.length<i.length)return-1;if(n.length>i.length)return 1;if(0===n.length)return 0;for(var r=Lt.increasingDirection(n),o=Lt.increasingDirection(i),s=r>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(i[a]);if(0!==l)return l;s+=r,a+=o}return 0},Ot.prototype.interfaces_=function(){return[N]},Ot.prototype.getClass=function(){return Ot};var Tt=function(){};Tt.prototype.get=function(){},Tt.prototype.put=function(){},Tt.prototype.size=function(){},Tt.prototype.values=function(){},Tt.prototype.entrySet=function(){};var Rt=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Tt);(r.prototype=new Error).name=\"OperationNotSupported\",(o.prototype=new It).contains=function(){};var Pt=function(t){function e(){t.call(this),this.array_=[],arguments[0]instanceof It&&this.addAll(arguments[0])}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(this.array_[e]===t)return!0}return!1},e.prototype.add=function(t){return!this.contains(t)&&(this.array_.push(t),!0)},e.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},e.prototype.remove=function(t){throw new Error},e.prototype.size=function(){return this.array_.length},e.prototype.isEmpty=function(){return 0===this.array_.length},e.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},e.prototype.iterator=function(){return new Dt(this)},e}(o),Dt=function(t){function e(e){t.call(this),this.hashSet_=e,this.position_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.next=function(){if(this.position_===this.hashSet_.size())throw new i;return this.hashSet_.array_[this.position_++]},e.prototype.hasNext=function(){return this.position_<this.hashSet_.size()},e.prototype.remove=function(){throw new r},e}(Et),Mt=0;(p.prototype=new Rt).get=function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null},p.prototype.put=function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,i,r=this.root_;do{if(n=r,(i=t.compareTo(r.key))<0)r=r.left;else{if(!(i>0)){var o=r.value;return r.value=e,o}r=r.right}}while(null!==r);var s={key:t,left:null,right:null,value:e,parent:n,color:Mt,getValue:function(){return this.value},getKey:function(){return this.key}};return i<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null},p.prototype.fixAfterInsertion=function(t){for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)if(a(t)===l(a(a(t)))){var e=c(a(a(t)));1===s(e)?(u(a(t),Mt),u(e,Mt),u(a(a(t)),1),t=a(a(t))):(t===c(a(t))&&(t=a(t),this.rotateLeft(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateRight(a(a(t))))}else{var n=l(a(a(t)));1===s(n)?(u(a(t),Mt),u(n,Mt),u(a(a(t)),1),t=a(a(t))):(t===l(a(t))&&(t=a(t),this.rotateRight(t)),u(a(t),Mt),u(a(a(t)),1),this.rotateLeft(a(a(t))))}this.root_.color=Mt},p.prototype.values=function(){var t=new Nt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=p.successor(e));)t.add(e.value);return t},p.prototype.entrySet=function(){var t=new Pt,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=p.successor(e));)t.add(e);return t},p.prototype.rotateLeft=function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}},p.prototype.rotateRight=function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null===t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}},p.prototype.getFirstEntry=function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t},p.successor=function(t){if(null===t)return null;if(null!==t.right){for(var e=t.right;null!==e.left;)e=e.left;return e}for(var n=t.parent,i=t;null!==n&&i===n.right;)i=n,n=n.parent;return n},p.prototype.size=function(){return this.size_};var At=function(){};At.prototype.interfaces_=function(){return[]},At.prototype.getClass=function(){return At},h.prototype=new o,(f.prototype=new h).contains=function(t){for(var e=0,n=this.array_.length;e<n;e++){if(0===this.array_[e].compareTo(t))return!0}return!1},f.prototype.add=function(t){if(this.contains(t))return!1;for(var e=0,n=this.array_.length;e<n;e++){if(1===this.array_[e].compareTo(t))return this.array_.splice(e,0,t),!0}return this.array_.push(t),!0},f.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next());return!0},f.prototype.remove=function(t){throw new r},f.prototype.size=function(){return this.array_.length},f.prototype.isEmpty=function(){return 0===this.array_.length},f.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t},f.prototype.iterator=function(){return new Ft(this)};var Ft=function(t){this.treeSet_=t,this.position_=0};Ft.prototype.next=function(){if(this.position_===this.treeSet_.size())throw new i;return this.treeSet_.array_[this.position_++]},Ft.prototype.hasNext=function(){return this.position_<this.treeSet_.size()},Ft.prototype.remove=function(){throw new r};var Gt=function(){};Gt.sort=function(){var t,e,n,i,r=arguments[0];if(1===arguments.length)i=function(t,e){return t.compareTo(e)},r.sort(i);else if(2===arguments.length)n=arguments[1],i=function(t,e){return n.compare(t,e)},r.sort(i);else if(3===arguments.length){(e=r.slice(arguments[1],arguments[2])).sort();var o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length));for(r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])}else if(4===arguments.length)for(e=r.slice(arguments[1],arguments[2]),n=arguments[3],i=function(t,e){return n.compare(t,e)},e.sort(i),o=r.slice(0,arguments[1]).concat(e,r.slice(arguments[2],r.length)),r.splice(0,r.length),t=0;t<o.length;t++)r.push(o[t])},Gt.asList=function(t){for(var e=new Nt,n=0,i=t.length;n<i;n++)e.add(t[n]);return e};var qt=function(){},Bt={P:{configurable:!0},L:{configurable:!0},A:{configurable:!0},FALSE:{configurable:!0},TRUE:{configurable:!0},DONTCARE:{configurable:!0},SYM_FALSE:{configurable:!0},SYM_TRUE:{configurable:!0},SYM_DONTCARE:{configurable:!0},SYM_P:{configurable:!0},SYM_L:{configurable:!0},SYM_A:{configurable:!0}};Bt.P.get=function(){return 0},Bt.L.get=function(){return 1},Bt.A.get=function(){return 2},Bt.FALSE.get=function(){return-1},Bt.TRUE.get=function(){return-2},Bt.DONTCARE.get=function(){return-3},Bt.SYM_FALSE.get=function(){return\"F\"},Bt.SYM_TRUE.get=function(){return\"T\"},Bt.SYM_DONTCARE.get=function(){return\"*\"},Bt.SYM_P.get=function(){return\"0\"},Bt.SYM_L.get=function(){return\"1\"},Bt.SYM_A.get=function(){return\"2\"},qt.prototype.interfaces_=function(){return[]},qt.prototype.getClass=function(){return qt},qt.toDimensionSymbol=function(t){switch(t){case qt.FALSE:return qt.SYM_FALSE;case qt.TRUE:return qt.SYM_TRUE;case qt.DONTCARE:return qt.SYM_DONTCARE;case qt.P:return qt.SYM_P;case qt.L:return qt.SYM_L;case qt.A:return qt.SYM_A}throw new m(\"Unknown dimension value: \"+t)},qt.toDimensionValue=function(t){switch(A.toUpperCase(t)){case qt.SYM_FALSE:return qt.FALSE;case qt.SYM_TRUE:return qt.TRUE;case qt.SYM_DONTCARE:return qt.DONTCARE;case qt.SYM_P:return qt.P;case qt.SYM_L:return qt.L;case qt.SYM_A:return qt.A}throw new m(\"Unknown dimension symbol: \"+t)},Object.defineProperties(qt,Bt);var Vt=function(){};Vt.prototype.filter=function(t){},Vt.prototype.interfaces_=function(){return[]},Vt.prototype.getClass=function(){return Vt};var Ut=function(){};Ut.prototype.filter=function(t,e){},Ut.prototype.isDone=function(){},Ut.prototype.isGeometryChanged=function(){},Ut.prototype.interfaces_=function(){return[]},Ut.prototype.getClass=function(){return Ut};var zt=function(t){function e(e,n){if(t.call(this,n),this._geometries=e||[],t.hasNullElements(this._geometries))throw new m(\"geometries must not contain null elements\")}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){for(var t=new j,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t},e.prototype.getGeometryN=function(t){return this._geometries[t]},e.prototype.getSortIndex=function(){return t.SORTINDEX_GEOMETRYCOLLECTION},e.prototype.getCoordinates=function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var i=this._geometries[n].getCoordinates(),r=0;r<i.length;r++)t[++e]=i[r];return t},e.prototype.getArea=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._geometries.length!==i._geometries.length)return!1;for(var r=0;r<this._geometries.length;r++)if(!this._geometries[r].equalsExact(i._geometries[r],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();Gt.sort(this._geometries)},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()},e.prototype.getBoundaryDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t},e.prototype.getDimension=function(){for(var t=qt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t},e.prototype.getLength=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t},e.prototype.getNumGeometries=function(){return this._geometries.length},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createGeometryCollection(e)},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=new f(Gt.asList(this._geometries)),n=new f(Gt.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=i,s=this.getNumGeometries(),a=o.getNumGeometries(),u=0;u<s&&u<a;){var l=this.getGeometryN(u),c=o.getGeometryN(u),p=l.compareToSameClass(c,r);if(0!==p)return p;u++}return u<s?1:u<a?-1:0}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._geometries.length)return null;for(var i=0;i<this._geometries.length&&(this._geometries[i].apply(n),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){var r=arguments[0];r.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(r)}else if(T(arguments[0],lt)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}},e.prototype.getBoundary=function(){return this.checkNotGeometryCollection(this),et.shouldNeverReachHere(),null},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._geometries=new Array(this._geometries.length).fill(null);for(var n=0;n<this._geometries.length;n++)e._geometries[n]=this._geometries[n].clone();return e},e.prototype.getGeometryType=function(){return\"GeometryCollection\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.isEmpty=function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x4f07bcb1f857d800},Object.defineProperties(e,n),e}(ct),Xt=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTILINESTRING},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0},e.prototype.getDimension=function(){return 1},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[t-1-n]=this._geometries[n].reverse();return this.getFactory().createMultiLineString(e)},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.getGeometryType=function(){return\"MultiLineString\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x7155d2ab4afa8000},Object.defineProperties(e,n),e}(zt),Yt=function(){if(this._geom=null,this._geomFact=null,this._bnRule=null,this._endpointMap=null,1===arguments.length){var t=arguments[0],e=gt.MOD2_BOUNDARY_RULE;this._geom=t,this._geomFact=t.getFactory(),this._bnRule=e}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this._geom=n,this._geomFact=n.getFactory(),this._bnRule=i}};Yt.prototype.boundaryMultiLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();var e=this.computeBoundaryCoordinates(t);return 1===e.length?this._geomFact.createPoint(e[0]):this._geomFact.createMultiPointFromCoords(e)},Yt.prototype.getBoundary=function(){return this._geom instanceof Kt?this.boundaryLineString(this._geom):this._geom instanceof Xt?this.boundaryMultiLineString(this._geom):this._geom.getBoundary()},Yt.prototype.boundaryLineString=function(t){if(this._geom.isEmpty())return this.getEmptyMultiPoint();if(t.isClosed()){return this._bnRule.isInBoundary(2)?t.getStartPoint():this._geomFact.createMultiPoint()}return this._geomFact.createMultiPoint([t.getStartPoint(),t.getEndPoint()])},Yt.prototype.getEmptyMultiPoint=function(){return this._geomFact.createMultiPoint()},Yt.prototype.computeBoundaryCoordinates=function(t){var e=new Nt;this._endpointMap=new p;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);0!==i.getNumPoints()&&(this.addEndpoint(i.getCoordinateN(0)),this.addEndpoint(i.getCoordinateN(i.getNumPoints()-1)))}for(var r=this._endpointMap.entrySet().iterator();r.hasNext();){var o=r.next(),s=o.getValue().count;this._bnRule.isInBoundary(s)&&e.add(o.getKey())}return Lt.toCoordinateArray(e)},Yt.prototype.addEndpoint=function(t){var e=this._endpointMap.get(t);null===e&&(e=new kt,this._endpointMap.put(t,e)),e.count++},Yt.prototype.interfaces_=function(){return[]},Yt.prototype.getClass=function(){return Yt},Yt.getBoundary=function(){if(1===arguments.length){var t=arguments[0];return new Yt(t).getBoundary()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Yt(e,n).getBoundary()}};var kt=function(){this.count=null};kt.prototype.interfaces_=function(){return[]},kt.prototype.getClass=function(){return kt};var jt=function(){},Ht={NEWLINE:{configurable:!0},SIMPLE_ORDINATE_FORMAT:{configurable:!0}};jt.prototype.interfaces_=function(){return[]},jt.prototype.getClass=function(){return jt},jt.chars=function(t,e){for(var n=new Array(e).fill(null),i=0;i<e;i++)n[i]=t;return String(n)},jt.getStackTrace=function(){if(1===arguments.length){var t=arguments[0],e=new function(){},n=new function(){}(e);return t.printStackTrace(n),e.toString()}if(2===arguments.length){for(var i=arguments[0],r=arguments[1],o=\"\",s=new function(){}(new function(){}(jt.getStackTrace(i))),a=0;a<r;a++)try{o+=s.readLine()+jt.NEWLINE}catch(t){if(!(t instanceof g))throw t;et.shouldNeverReachHere()}return o}},jt.split=function(t,e){for(var n=e.length,i=new Nt,r=\"\"+t,o=r.indexOf(e);o>=0;){var s=r.substring(0,o);i.add(s),o=(r=r.substring(o+n)).indexOf(e)}r.length>0&&i.add(r);for(var a=new Array(i.size()).fill(null),u=0;u<a.length;u++)a[u]=i.get(u);return a},jt.toString=function(){if(1===arguments.length){var t=arguments[0];return jt.SIMPLE_ORDINATE_FORMAT.format(t)}},jt.spaces=function(t){return jt.chars(\" \",t)},Ht.NEWLINE.get=function(){return Y.getProperty(\"line.separator\")},Ht.SIMPLE_ORDINATE_FORMAT.get=function(){return new function(){}(\"0.#\")},Object.defineProperties(jt,Ht);var Wt=function(){};Wt.prototype.interfaces_=function(){return[]},Wt.prototype.getClass=function(){return Wt},Wt.copyCoord=function(t,e,n,i){for(var r=Math.min(t.getDimension(),n.getDimension()),o=0;o<r;o++)n.setOrdinate(i,o,t.getOrdinate(e,o))},Wt.isRing=function(t){var e=t.size();return 0===e||!(e<=3)&&(t.getOrdinate(0,V.X)===t.getOrdinate(e-1,V.X)&&t.getOrdinate(0,V.Y)===t.getOrdinate(e-1,V.Y))},Wt.isEqual=function(t,e){var n=t.size();if(n!==e.size())return!1;for(var i=Math.min(t.getDimension(),e.getDimension()),r=0;r<n;r++)for(var o=0;o<i;o++){var s=t.getOrdinate(r,o),a=e.getOrdinate(r,o);if(t.getOrdinate(r,o)!==e.getOrdinate(r,o)&&(!v.isNaN(s)||!v.isNaN(a)))return!1}return!0},Wt.extend=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();if(Wt.copy(e,0,i,0,r),r>0)for(var o=r;o<n;o++)Wt.copy(e,r-1,i,o,1);return i},Wt.reverse=function(t){for(var e=t.size()-1,n=Math.trunc(e/2),i=0;i<=n;i++)Wt.swap(t,i,e-i)},Wt.swap=function(t,e,n){if(e===n)return null;for(var i=0;i<t.getDimension();i++){var r=t.getOrdinate(e,i);t.setOrdinate(e,i,t.getOrdinate(n,i)),t.setOrdinate(n,i,r)}},Wt.copy=function(t,e,n,i,r){for(var o=0;o<r;o++)Wt.copyCoord(t,e+o,n,i+o)},Wt.toString=function(){if(1===arguments.length){var t=arguments[0],e=t.size();if(0===e)return\"()\";var n=t.getDimension(),i=new D;i.append(\"(\");for(var r=0;r<e;r++){r>0&&i.append(\" \");for(var o=0;o<n;o++)o>0&&i.append(\",\"),i.append(jt.toString(t.getOrdinate(r,o)))}return i.append(\")\"),i.toString()}},Wt.ensureValidRing=function(t,e){var n=e.size();if(0===n)return e;if(n<=3)return Wt.createClosedRing(t,e,4);return e.getOrdinate(0,V.X)===e.getOrdinate(n-1,V.X)&&e.getOrdinate(0,V.Y)===e.getOrdinate(n-1,V.Y)?e:Wt.createClosedRing(t,e,n+1)},Wt.createClosedRing=function(t,e,n){var i=t.create(n,e.getDimension()),r=e.size();Wt.copy(e,0,i,0,r);for(var o=r;o<n;o++)Wt.copy(e,0,i,o,1);return i};var Kt=function(t){function e(e,n){t.call(this,n),this._points=null,this.init(e)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this.isEmpty()?new j:this._points.expandEnvelope(new j)},e.prototype.isRing=function(){return this.isClosed()&&this.isSimple()},e.prototype.getSortIndex=function(){return t.SORTINDEX_LINESTRING},e.prototype.getCoordinates=function(){return this._points.toCoordinateArray()},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e;if(this._points.size()!==i._points.size())return!1;for(var r=0;r<this._points.size();r++)if(!this.equal(this._points.getCoordinate(r),i._points.getCoordinate(r),n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e)))return this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0&&Wt.reverse(this._points),null}},e.prototype.getCoordinate=function(){return this.isEmpty()?null:this._points.getCoordinate(0)},e.prototype.getBoundaryDimension=function(){return this.isClosed()?qt.FALSE:0},e.prototype.isClosed=function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))},e.prototype.getEndPoint=function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)},e.prototype.getDimension=function(){return 1},e.prototype.getLength=function(){return at.computeLength(this._points)},e.prototype.getNumPoints=function(){return this._points.size()},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLineString(t)},e.prototype.compareToSameClass=function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var i=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==i)return i;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var r=arguments[0];return arguments[1].compare(this._points,r._points)}},e.prototype.apply=function(){if(T(arguments[0],ft))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(T(arguments[0],Ut)){var n=arguments[0];if(0===this._points.size())return null;for(var i=0;i<this._points.size()&&(n.filter(this._points,i),!n.isDone());i++);n.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return new Yt(this).getBoundary()},e.prototype.isEquivalentClass=function(t){return t instanceof e},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._points=this._points.clone(),e},e.prototype.getCoordinateN=function(t){return this._points.getCoordinate(t)},e.prototype.getGeometryType=function(){return\"LineString\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._points},e.prototype.isEmpty=function(){return 0===this._points.size()},e.prototype.init=function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new m(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t},e.prototype.isCoordinate=function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1},e.prototype.getStartPoint=function(){return this.isEmpty()?null:this.getPointN(0)},e.prototype.getPointN=function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))},e.prototype.interfaces_=function(){return[At]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x2b2b51ba435c8e00},Object.defineProperties(e,n),e}(ct),Jt=function(){};Jt.prototype.interfaces_=function(){return[]},Jt.prototype.getClass=function(){return Jt};var Qt=function(t){function e(e,n){t.call(this,n),this._coordinates=e||null,this.init(this._coordinates)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){if(this.isEmpty())return new j;var t=new j;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t},e.prototype.getSortIndex=function(){return t.SORTINDEX_POINT},e.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.getCoordinate()]},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&(!(!this.isEmpty()||!e.isEmpty())||this.isEmpty()===e.isEmpty()&&this.equal(e.getCoordinate(),this.getCoordinate(),n))}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){},e.prototype.getCoordinate=function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getNumPoints=function(){return this.isEmpty()?0:1},e.prototype.reverse=function(){return this.copy()},e.prototype.getX=function(){if(null===this.getCoordinate())throw new Error(\"getX called on empty Point\");return this.getCoordinate().x},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}},e.prototype.apply=function(){if(T(arguments[0],ft)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(T(arguments[0],Ut)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else if(T(arguments[0],Vt)){arguments[0].filter(this)}else if(T(arguments[0],lt)){arguments[0].filter(this)}},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);return e._coordinates=this._coordinates.clone(),e},e.prototype.getGeometryType=function(){return\"Point\"},e.prototype.copy=function(){return new e(this._coordinates.copy(),this._factory)},e.prototype.getCoordinateSequence=function(){return this._coordinates},e.prototype.getY=function(){if(null===this.getCoordinate())throw new Error(\"getY called on empty Point\");return this.getCoordinate().y},e.prototype.isEmpty=function(){return 0===this._coordinates.size()},e.prototype.init=function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),et.isTrue(t.size()<=1),this._coordinates=t},e.prototype.isSimple=function(){return!0},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return 0x44077bad161cbc00},Object.defineProperties(e,n),e}(ct),Zt=function(){};Zt.prototype.interfaces_=function(){return[]},Zt.prototype.getClass=function(){return Zt};var $t=function(t){function e(e,n,i){if(t.call(this,i),this._shell=null,this._holes=null,null===e&&(e=this.getFactory().createLinearRing()),null===n&&(n=[]),t.hasNullElements(n))throw new m(\"holes must not contain null elements\");if(e.isEmpty()&&t.hasNonEmptyElements(n))throw new m(\"shell is empty but holes are not\");this._shell=e,this._holes=n}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.computeEnvelopeInternal=function(){return this._shell.getEnvelopeInternal()},e.prototype.getSortIndex=function(){return t.SORTINDEX_POLYGON},e.prototype.getCoordinates=function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),i=0;i<n.length;i++)t[++e]=n[i];for(var r=0;r<this._holes.length;r++)for(var o=this._holes[r].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t},e.prototype.getArea=function(){var t=0;t+=Math.abs(at.signedArea(this._shell.getCoordinateSequence()));for(var e=0;e<this._holes.length;e++)t-=Math.abs(at.signedArea(this._holes[e].getCoordinateSequence()));return t},e.prototype.isRectangle=function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var i=t.getX(n);if(i!==e.getMinX()&&i!==e.getMaxX())return!1;var r=t.getY(n);if(r!==e.getMinY()&&r!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o===(l!==s))return!1;o=u,s=l}return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];if(!this.isEquivalentClass(e))return!1;var i=e,r=this._shell,o=i._shell;if(!r.equalsExact(o,n))return!1;if(this._holes.length!==i._holes.length)return!1;for(var s=0;s<this._holes.length;s++)if(!this._holes[s].equalsExact(i._holes[s],n))return!1;return!0}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.normalize=function(){if(0===arguments.length){this.normalize(this._shell,!0);for(var t=0;t<this._holes.length;t++)this.normalize(this._holes[t],!1);Gt.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var i=new Array(e.getCoordinates().length-1).fill(null);Y.arraycopy(e.getCoordinates(),0,i,0,i.length);var r=Lt.minCoordinate(e.getCoordinates());Lt.scroll(i,r),Y.arraycopy(i,0,e.getCoordinates(),0,i.length),e.getCoordinates()[i.length]=i[0],at.isCCW(e.getCoordinates())===n&&Lt.reverse(e.getCoordinates())}},e.prototype.getCoordinate=function(){return this._shell.getCoordinate()},e.prototype.getNumInteriorRing=function(){return this._holes.length},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.getLength=function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t},e.prototype.getNumPoints=function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t},e.prototype.reverse=function(){var t=this.copy();t._shell=this._shell.copy().reverse(),t._holes=new Array(this._holes.length).fill(null);for(var e=0;e<this._holes.length;e++)t._holes[e]=this._holes[e].copy().reverse();return t},e.prototype.convexHull=function(){return this.getExteriorRing().convexHull()},e.prototype.compareToSameClass=function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var i=arguments[0],r=arguments[1],o=i,s=this._shell,a=o._shell,u=s.compareToSameClass(a,r);if(0!==u)return u;for(var l=this.getNumInteriorRing(),c=o.getNumInteriorRing(),p=0;p<l&&p<c;){var h=this.getInteriorRingN(p),f=o.getInteriorRingN(p),g=h.compareToSameClass(f,r);if(0!==g)return g;p++}return p<l?1:p<c?-1:0}},e.prototype.apply=function(t){if(T(t,ft)){this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(T(t,Ut)){if(this._shell.apply(t),!t.isDone())for(var n=0;n<this._holes.length&&(this._holes[n].apply(t),!t.isDone());n++);t.isGeometryChanged()&&this.geometryChanged()}else if(T(t,Vt))t.filter(this);else if(T(t,lt)){t.filter(this),this._shell.apply(t);for(var i=0;i<this._holes.length;i++)this._holes[i].apply(t)}},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)},e.prototype.clone=function(){var e=t.prototype.clone.call(this);e._shell=this._shell.clone(),e._holes=new Array(this._holes.length).fill(null);for(var n=0;n<this._holes.length;n++)e._holes[n]=this._holes[n].clone();return e},e.prototype.getGeometryType=function(){return\"Polygon\"},e.prototype.copy=function(){for(var t=this._shell.copy(),n=new Array(this._holes.length).fill(null),i=0;i<n.length;i++)n[i]=this._holes[i].copy();return new e(t,n,this._factory)},e.prototype.getExteriorRing=function(){return this._shell},e.prototype.isEmpty=function(){return this._shell.isEmpty()},e.prototype.getInteriorRingN=function(t){return this._holes[t]},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x307ffefd8dc97200},Object.defineProperties(e,n),e}(ct),te=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOINT},e.prototype.isValid=function(){return!0},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getCoordinate=function(){if(1===arguments.length){var e=arguments[0];return this._geometries[e].getCoordinate()}return t.prototype.getCoordinate.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.getDimension=function(){return 0},e.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null)},e.prototype.getGeometryType=function(){return\"MultiPoint\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Jt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x6fb1ed4162e0fc00},Object.defineProperties(e,n),e}(zt),ee=function(t){function e(e,n){e instanceof C&&n instanceof _e&&(e=n.getCoordinateSequenceFactory().create(e)),t.call(this,e,n),this.validateConstruction()}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={MINIMUM_VALID_SIZE:{configurable:!0},serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_LINEARRING},e.prototype.getBoundaryDimension=function(){return qt.FALSE},e.prototype.isClosed=function(){return!!this.isEmpty()||t.prototype.isClosed.call(this)},e.prototype.reverse=function(){var t=this._points.copy();Wt.reverse(t);return this.getFactory().createLinearRing(t)},e.prototype.validateConstruction=function(){if(!this.isEmpty()&&!t.prototype.isClosed.call(this))throw new m(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<e.MINIMUM_VALID_SIZE)throw new m(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")},e.prototype.getGeometryType=function(){return\"LinearRing\"},e.prototype.copy=function(){return new e(this._points.copy(),this._factory)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.MINIMUM_VALID_SIZE.get=function(){return 4},n.serialVersionUID.get=function(){return-0x3b229e262367a600},Object.defineProperties(e,n),e}(Kt),ne=function(t){function e(){t.apply(this,arguments)}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={serialVersionUID:{configurable:!0}};return e.prototype.getSortIndex=function(){return ct.SORTINDEX_MULTIPOLYGON},e.prototype.equalsExact=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!this.isEquivalentClass(e)&&t.prototype.equalsExact.call(this,e,n)}return t.prototype.equalsExact.apply(this,arguments)},e.prototype.getBoundaryDimension=function(){return 1},e.prototype.getDimension=function(){return 2},e.prototype.reverse=function(){for(var t=this._geometries.length,e=new Array(t).fill(null),n=0;n<this._geometries.length;n++)e[n]=this._geometries[n].reverse();return this.getFactory().createMultiPolygon(e)},e.prototype.getBoundary=function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new Nt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),i=0;i<n.getNumGeometries();i++)t.add(n.getGeometryN(i));var r=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(r))},e.prototype.getGeometryType=function(){return\"MultiPolygon\"},e.prototype.copy=function(){for(var t=new Array(this._geometries.length).fill(null),n=0;n<t.length;n++)t[n]=this._geometries[n].copy();return new e(t,this._factory)},e.prototype.interfaces_=function(){return[Zt]},e.prototype.getClass=function(){return e},n.serialVersionUID.get=function(){return-0x7a5aa1369171980},Object.defineProperties(e,n),e}(zt),ie=function(t){this._factory=t||null,this._isUserDataCopied=!1},re={NoOpGeometryOperation:{configurable:!0},CoordinateOperation:{configurable:!0},CoordinateSequenceOperation:{configurable:!0}};ie.prototype.setCopyUserData=function(t){this._isUserDataCopied=t},ie.prototype.edit=function(t,e){if(null===t)return null;var n=this.editInternal(t,e);return this._isUserDataCopied&&n.setUserData(t.getUserData()),n},ie.prototype.editInternal=function(t,e){return null===this._factory&&(this._factory=t.getFactory()),t instanceof zt?this.editGeometryCollection(t,e):t instanceof $t?this.editPolygon(t,e):t instanceof Qt?e.edit(t,this._factory):t instanceof Kt?e.edit(t,this._factory):(et.shouldNeverReachHere(\"Unsupported Geometry class: \"+t.getClass().getName()),null)},ie.prototype.editGeometryCollection=function(t,e){for(var n=e.edit(t,this._factory),i=new Nt,r=0;r<n.getNumGeometries();r++){var o=this.edit(n.getGeometryN(r),e);null===o||o.isEmpty()||i.add(o)}return n.getClass()===te?this._factory.createMultiPoint(i.toArray([])):n.getClass()===Xt?this._factory.createMultiLineString(i.toArray([])):n.getClass()===ne?this._factory.createMultiPolygon(i.toArray([])):this._factory.createGeometryCollection(i.toArray([]))},ie.prototype.editPolygon=function(t,e){var n=e.edit(t,this._factory);if(null===n&&(n=this._factory.createPolygon(null)),n.isEmpty())return n;var i=this.edit(n.getExteriorRing(),e);if(null===i||i.isEmpty())return this._factory.createPolygon();for(var r=new Nt,o=0;o<n.getNumInteriorRing();o++){var s=this.edit(n.getInteriorRingN(o),e);null===s||s.isEmpty()||r.add(s)}return this._factory.createPolygon(i,r.toArray([]))},ie.prototype.interfaces_=function(){return[]},ie.prototype.getClass=function(){return ie},ie.GeometryEditorOperation=function(){},re.NoOpGeometryOperation.get=function(){return oe},re.CoordinateOperation.get=function(){return se},re.CoordinateSequenceOperation.get=function(){return ae},Object.defineProperties(ie,re);var oe=function(){};oe.prototype.edit=function(t,e){return t},oe.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},oe.prototype.getClass=function(){return oe};var se=function(){};se.prototype.edit=function(t,e){var n=this.editCoordinates(t.getCoordinates(),t);return null===n?t:t instanceof ee?e.createLinearRing(n):t instanceof Kt?e.createLineString(n):t instanceof Qt?n.length>0?e.createPoint(n[0]):e.createPoint():t},se.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},se.prototype.getClass=function(){return se};var ae=function(){};ae.prototype.edit=function(t,e){return t instanceof ee?e.createLinearRing(this.edit(t.getCoordinateSequence(),t)):t instanceof Kt?e.createLineString(this.edit(t.getCoordinateSequence(),t)):t instanceof Qt?e.createPoint(this.edit(t.getCoordinateSequence(),t)):t},ae.prototype.interfaces_=function(){return[ie.GeometryEditorOperation]},ae.prototype.getClass=function(){return ae};var ue=function(){if(this._dimension=3,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array)this._coordinates=arguments[0],this._dimension=3;else if(Number.isInteger(arguments[0])){var t=arguments[0];this._coordinates=new Array(t).fill(null);for(var e=0;e<t;e++)this._coordinates[e]=new C}else if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this._coordinates=new Array(0).fill(null),null;this._dimension=n.getDimension(),this._coordinates=new Array(n.size()).fill(null);for(var i=0;i<this._coordinates.length;i++)this._coordinates[i]=n.getCoordinateCopy(i)}}else if(2===arguments.length)if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var r=arguments[0],o=arguments[1];this._coordinates=r,this._dimension=o,null===r&&(this._coordinates=new Array(0).fill(null))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];this._coordinates=new Array(s).fill(null),this._dimension=a;for(var u=0;u<s;u++)this._coordinates[u]=new C}},le={serialVersionUID:{configurable:!0}};ue.prototype.setOrdinate=function(t,e,n){switch(e){case V.X:this._coordinates[t].x=n;break;case V.Y:this._coordinates[t].y=n;break;case V.Z:this._coordinates[t].z=n;break;default:throw new m(\"invalid ordinateIndex\")}},ue.prototype.size=function(){return this._coordinates.length},ue.prototype.getOrdinate=function(t,e){switch(e){case V.X:return this._coordinates[t].x;case V.Y:return this._coordinates[t].y;case V.Z:return this._coordinates[t].z}return v.NaN},ue.prototype.getCoordinate=function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0],n=arguments[1];n.x=this._coordinates[e].x,n.y=this._coordinates[e].y,n.z=this._coordinates[e].z}},ue.prototype.getCoordinateCopy=function(t){return new C(this._coordinates[t])},ue.prototype.getDimension=function(){return this._dimension},ue.prototype.getX=function(t){return this._coordinates[t].x},ue.prototype.clone=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].clone();return new ue(t,this._dimension)},ue.prototype.expandEnvelope=function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t},ue.prototype.copy=function(){for(var t=new Array(this.size()).fill(null),e=0;e<this._coordinates.length;e++)t[e]=this._coordinates[e].copy();return new ue(t,this._dimension)},ue.prototype.toString=function(){if(this._coordinates.length>0){var t=new D(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"},ue.prototype.getY=function(t){return this._coordinates[t].y},ue.prototype.toCoordinateArray=function(){return this._coordinates},ue.prototype.interfaces_=function(){return[V,e]},ue.prototype.getClass=function(){return ue},le.serialVersionUID.get=function(){return-0xcb44a778db18e00},Object.defineProperties(ue,le);var ce=function(){},pe={serialVersionUID:{configurable:!0},instanceObject:{configurable:!0}};ce.prototype.readResolve=function(){return ce.instance()},ce.prototype.create=function(){if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new ue(t)}if(T(arguments[0],V)){var e=arguments[0];return new ue(e)}}else if(2===arguments.length){var n=arguments[0],i=arguments[1];return i>3&&(i=3),i<2?new ue(n):new ue(n,i)}},ce.prototype.interfaces_=function(){return[b,e]},ce.prototype.getClass=function(){return ce},ce.instance=function(){return ce.instanceObject},pe.serialVersionUID.get=function(){return-0x38e49fa6cf6f2e00},pe.instanceObject.get=function(){return new ce},Object.defineProperties(ce,pe);var he=function(t){function e(){t.call(this),this.map_=new Map}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){return this.map_.get(t)||null},e.prototype.put=function(t,e){return this.map_.set(t,e),e},e.prototype.values=function(){for(var t=new Nt,e=this.map_.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t},e.prototype.entrySet=function(){var t=new Pt;return this.map_.entries().forEach(function(e){return t.add(e)}),t},e.prototype.size=function(){return this.map_.size()},e}(Tt),fe=function t(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=t.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof de){var e=arguments[0];this._modelType=e,e===t.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=t.FIXED,this.setScale(n)}else if(arguments[0]instanceof t){var i=arguments[0];this._modelType=i._modelType,this._scale=i._scale}},ge={serialVersionUID:{configurable:!0},maximumPreciseValue:{configurable:!0}};fe.prototype.equals=function(t){if(!(t instanceof fe))return!1;var e=t;return this._modelType===e._modelType&&this._scale===e._scale},fe.prototype.compareTo=function(t){var e=t,n=this.getMaximumSignificantDigits(),i=e.getMaximumSignificantDigits();return new M(n).compareTo(new M(i))},fe.prototype.getScale=function(){return this._scale},fe.prototype.isFloating=function(){return this._modelType===fe.FLOATING||this._modelType===fe.FLOATING_SINGLE},fe.prototype.getType=function(){return this._modelType},fe.prototype.toString=function(){var t=\"UNKNOWN\";return this._modelType===fe.FLOATING?t=\"Floating\":this._modelType===fe.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===fe.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t},fe.prototype.makePrecise=function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];if(v.isNaN(t))return t;if(this._modelType===fe.FLOATING_SINGLE){return t}return this._modelType===fe.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof C){var e=arguments[0];if(this._modelType===fe.FLOATING)return null;e.x=this.makePrecise(e.x),e.y=this.makePrecise(e.y)}},fe.prototype.getMaximumSignificantDigits=function(){var t=16;return this._modelType===fe.FLOATING?t=16:this._modelType===fe.FLOATING_SINGLE?t=6:this._modelType===fe.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t},fe.prototype.setScale=function(t){this._scale=Math.abs(t)},fe.prototype.interfaces_=function(){return[e,E]},fe.prototype.getClass=function(){return fe},fe.mostPrecise=function(t,e){return t.compareTo(e)>=0?t:e},ge.serialVersionUID.get=function(){return 0x6bee6404e9a25c00},ge.maximumPreciseValue.get=function(){return 9007199254740992},Object.defineProperties(fe,ge);var de=function t(e){this._name=e||null,t.nameToTypeMap.put(e,this)},ye={serialVersionUID:{configurable:!0},nameToTypeMap:{configurable:!0}};de.prototype.readResolve=function(){return de.nameToTypeMap.get(this._name)},de.prototype.toString=function(){return this._name},de.prototype.interfaces_=function(){return[e]},de.prototype.getClass=function(){return de},ye.serialVersionUID.get=function(){return-552860263173159e4},ye.nameToTypeMap.get=function(){return new he},Object.defineProperties(de,ye),fe.Type=de,fe.FIXED=new de(\"FIXED\"),fe.FLOATING=new de(\"FLOATING\"),fe.FLOATING_SINGLE=new de(\"FLOATING SINGLE\");var _e=function t(){this._precisionModel=new fe,this._SRID=0,this._coordinateSequenceFactory=t.getDefaultCoordinateSequenceFactory(),0===arguments.length||(1===arguments.length?T(arguments[0],b)?this._coordinateSequenceFactory=arguments[0]:arguments[0]instanceof fe&&(this._precisionModel=arguments[0]):2===arguments.length?(this._precisionModel=arguments[0],this._SRID=arguments[1]):3===arguments.length&&(this._precisionModel=arguments[0],this._SRID=arguments[1],this._coordinateSequenceFactory=arguments[2]))},me={serialVersionUID:{configurable:!0}};_e.prototype.toGeometry=function(t){return t.isNull()?this.createPoint(null):t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new C(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new C(t.getMinX(),t.getMinY()),new C(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new C(t.getMinX(),t.getMinY()),new C(t.getMinX(),t.getMaxY()),new C(t.getMaxX(),t.getMaxY()),new C(t.getMaxX(),t.getMinY()),new C(t.getMinX(),t.getMinY())]),null)},_e.prototype.createLineString=function(t){return t?t instanceof Array?new Kt(this.getCoordinateSequenceFactory().create(t),this):T(t,V)?new Kt(t,this):void 0:new Kt(this.getCoordinateSequenceFactory().create([]),this)},_e.prototype.createMultiLineString=function(){if(0===arguments.length)return new Xt(null,this);if(1===arguments.length){var t=arguments[0];return new Xt(t,this)}},_e.prototype.buildGeometry=function(t){for(var e=null,n=!1,i=!1,r=t.iterator();r.hasNext();){var o=r.next(),s=o.getClass();null===e&&(e=s),s!==e&&(n=!0),o.isGeometryCollectionOrDerived()&&(i=!0)}if(null===e)return this.createGeometryCollection();if(n||i)return this.createGeometryCollection(_e.toGeometryArray(t));var a=t.iterator().next();if(t.size()>1){if(a instanceof $t)return this.createMultiPolygon(_e.toPolygonArray(t));if(a instanceof Kt)return this.createMultiLineString(_e.toLineStringArray(t));if(a instanceof Qt)return this.createMultiPoint(_e.toPointArray(t));et.shouldNeverReachHere(\"Unhandled class: \"+a.getClass().getName())}return a},_e.prototype.createMultiPointFromCoords=function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)},_e.prototype.createPoint=function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof C){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(T(arguments[0],V)){var e=arguments[0];return new Qt(e,this)}}},_e.prototype.getCoordinateSequenceFactory=function(){return this._coordinateSequenceFactory},_e.prototype.createPolygon=function(){if(0===arguments.length)return new $t(null,null,this);if(1===arguments.length){if(T(arguments[0],V)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof ee){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];return new $t(i,r,this)}},_e.prototype.getSRID=function(){return this._SRID},_e.prototype.createGeometryCollection=function(){if(0===arguments.length)return new zt(null,this);if(1===arguments.length){var t=arguments[0];return new zt(t,this)}},_e.prototype.createGeometry=function(t){return new ie(this).edit(t,{edit:function(){if(2===arguments.length){var t=arguments[0];return this._coordinateSequenceFactory.create(t)}}})},_e.prototype.getPrecisionModel=function(){return this._precisionModel},_e.prototype.createLinearRing=function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(T(arguments[0],V)){var e=arguments[0];return new ee(e,this)}}},_e.prototype.createMultiPolygon=function(){if(0===arguments.length)return new ne(null,this);if(1===arguments.length){var t=arguments[0];return new ne(t,this)}},_e.prototype.createMultiPoint=function(){if(0===arguments.length)return new te(null,this);if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return new te(t,this)}if(arguments[0]instanceof Array){var e=arguments[0];return this.createMultiPoint(null!==e?this.getCoordinateSequenceFactory().create(e):null)}if(T(arguments[0],V)){var n=arguments[0];if(null===n)return this.createMultiPoint(new Array(0).fill(null));for(var i=new Array(n.size()).fill(null),r=0;r<n.size();r++){var o=this.getCoordinateSequenceFactory().create(1,n.getDimension());Wt.copy(n,r,o,0,1),i[r]=this.createPoint(o)}return this.createMultiPoint(i)}}},_e.prototype.interfaces_=function(){return[e]},_e.prototype.getClass=function(){return _e},_e.toMultiPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toGeometryArray=function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.getDefaultCoordinateSequenceFactory=function(){return ce.instance()},_e.toMultiLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLineStringArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toMultiPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toLinearRingArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPointArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.toPolygonArray=function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)},_e.createPointFromInternalCoord=function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)},me.serialVersionUID.get=function(){return-0x5ea75f2051eeb400},Object.defineProperties(_e,me);var ve=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],Ie=function(t){this.geometryFactory=t||new _e};Ie.prototype.read=function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!Ee[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==ve.indexOf(n)?Ee[n].apply(this,[e.coordinates]):\"GeometryCollection\"===n?Ee[n].apply(this,[e.geometries]):Ee[n].apply(this,[e])},Ie.prototype.write=function(t){var e=t.getGeometryType();if(!xe[e])throw new Error(\"Geometry is not supported\");return xe[e].apply(this,[t])};var Ee={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var i=t.geometry.type;if(!Ee[i])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=Ee.bbox.apply(this,[t.bbox])),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.apply(this,[t.bbox])),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(new C(i[0],i[1]))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new C(t[0],t[1]),new C(t[2],t[1]),new C(t[2],t[3]),new C(t[0],t[3]),new C(t[0],t[1])])},Point:function(t){var e=new C(t[0],t[1]);return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.Point.apply(this,[t[n]]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=Ee.coordinates.apply(this,[t]);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(Ee.LineString.apply(this,[t[n]]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=Ee.coordinates.apply(this,[t[0]]),n=this.geometryFactory.createLinearRing(e),i=[],r=1;r<t.length;++r){var o=t[r],s=Ee.coordinates.apply(this,[o]),a=this.geometryFactory.createLinearRing(s);i.push(a)}return this.geometryFactory.createPolygon(n,i)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(Ee.Polygon.apply(this,[i]))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var i=t[n];e.push(this.read(i))}return this.geometryFactory.createGeometryCollection(e)}},xe={coordinate:function(t){return[t.x,t.y]},Point:function(t){return{type:\"Point\",coordinates:xe.coordinate.apply(this,[t.getCoordinate()])}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Point.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),i=0;i<n.length;++i){var r=n[i];e.push(xe.coordinate.apply(this,[r]))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.LineString.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=xe.LineString.apply(this,[t._shell]);e.push(n.coordinates);for(var i=0;i<t._holes.length;++i){var r=t._holes[i],o=xe.LineString.apply(this,[r]);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=xe.Polygon.apply(this,[i]);e.push(r.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var i=t._geometries[n],r=i.getGeometryType();e.push(xe[r].apply(this,[i]))}return{type:\"GeometryCollection\",geometries:e}}},Ne=function(t){this.geometryFactory=t||new _e,this.precisionModel=this.geometryFactory.getPrecisionModel(),this.parser=new Ie(this.geometryFactory)};Ne.prototype.read=function(t){var e=this.parser.read(t);return this.precisionModel.getType()===fe.FIXED&&this.reducePrecision(e),e},Ne.prototype.reducePrecision=function(t){var e,n;if(t.coordinate)this.precisionModel.makePrecise(t.coordinate);else if(t.points)for(e=0,n=t.points.length;e<n;e++)this.precisionModel.makePrecise(t.points[e]);else if(t.geometries)for(e=0,n=t.geometries.length;e<n;e++)this.reducePrecision(t.geometries[e])};var Ce=function(){this.parser=new Ie(this.geometryFactory)};Ce.prototype.write=function(t){return this.parser.write(t)};var Se=function(){},Le={ON:{configurable:!0},LEFT:{configurable:!0},RIGHT:{configurable:!0}};Se.prototype.interfaces_=function(){return[]},Se.prototype.getClass=function(){return Se},Se.opposite=function(t){return t===Se.LEFT?Se.RIGHT:t===Se.RIGHT?Se.LEFT:t},Le.ON.get=function(){return 0},Le.LEFT.get=function(){return 1},Le.RIGHT.get=function(){return 2},Object.defineProperties(Se,Le),(d.prototype=new Error).name=\"EmptyStackException\",(y.prototype=new xt).add=function(t){return this.array_.push(t),!0},y.prototype.get=function(t){if(t<0||t>=this.size())throw new Error;return this.array_[t]},y.prototype.push=function(t){return this.array_.push(t),t},y.prototype.pop=function(t){if(0===this.array_.length)throw new d;return this.array_.pop()},y.prototype.peek=function(){if(0===this.array_.length)throw new d;return this.array_[this.array_.length-1]},y.prototype.empty=function(){return 0===this.array_.length},y.prototype.isEmpty=function(){return this.empty()},y.prototype.search=function(t){return this.array_.indexOf(t)},y.prototype.size=function(){return this.array_.length},y.prototype.toArray=function(){for(var t=[],e=0,n=this.array_.length;e<n;e++)t.push(this.array_[e]);return t};var be=function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null};be.prototype.getCoordinate=function(){return this._minCoord},be.prototype.getRightmostSide=function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n},be.prototype.findRightmostEdgeAtVertex=function(){var t=this._minDe.getEdge().getCoordinates();et.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],i=at.computeOrientation(this._minCoord,n,e),r=!1;e.y<this._minCoord.y&&n.y<this._minCoord.y&&i===at.COUNTERCLOCKWISE?r=!0:e.y>this._minCoord.y&&n.y>this._minCoord.y&&i===at.CLOCKWISE&&(r=!0),r&&(this._minIndex=this._minIndex-1)},be.prototype.getRightmostSideOfSegment=function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var i=Se.LEFT;return n[e].y<n[e+1].y&&(i=Se.RIGHT),i},be.prototype.getEdge=function(){return this._orientedDe},be.prototype.checkForRightmostCoordinate=function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])},be.prototype.findRightmostEdgeAtNode=function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)},be.prototype.findEdge=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}et.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe;this.getRightmostSide(this._minDe,this._minIndex)===Se.LEFT&&(this._orientedDe=this._minDe.getSym())},be.prototype.interfaces_=function(){return[]},be.prototype.getClass=function(){return be};var we=function(t){function e(n,i){t.call(this,e.msgWithCoord(n,i)),this.pt=i?new C(i):null,this.name=\"TopologyException\"}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getCoordinate=function(){return this.pt},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.msgWithCoord=function(t,e){return e?t:t+\" [ \"+e+\" ]\"},e}($),Oe=function(){this.array_=[]};Oe.prototype.addLast=function(t){this.array_.push(t)},Oe.prototype.removeFirst=function(){return this.array_.shift()},Oe.prototype.isEmpty=function(){return 0===this.array_.length};var Te=function(){this._finder=null,this._dirEdgeList=new Nt,this._nodes=new Nt,this._rightMostCoord=null,this._env=null,this._finder=new be};Te.prototype.clearVisitedEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){t.next().setVisited(!1)}},Te.prototype.getRightmostCoordinate=function(){return this._rightMostCoord},Te.prototype.computeNodeDepth=function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var i=n.next();if(i.isVisited()||i.getSym().isVisited()){e=i;break}}if(null===e)throw new we(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var r=t.getEdges().iterator();r.hasNext();){var o=r.next();o.setVisited(!0),this.copySymDepths(o)}},Te.prototype.computeDepth=function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.setEdgeDepths(Se.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)},Te.prototype.create=function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()},Te.prototype.findResultEdges=function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(Se.RIGHT)>=1&&e.getDepth(Se.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}},Te.prototype.computeDepths=function(t){var e=new Pt,n=new Oe,i=t.getNode();for(n.addLast(i),e.add(i),t.setVisited(!0);!n.isEmpty();){var r=n.removeFirst();e.add(r),this.computeNodeDepth(r);for(var o=r.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}},Te.prototype.compareTo=function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0},Te.prototype.getEnvelope=function(){if(null===this._env){for(var t=new j,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),i=0;i<n.length-1;i++)t.expandToInclude(n[i]);this._env=t}return this._env},Te.prototype.addReachable=function(t){var e=new y;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}},Te.prototype.copySymDepths=function(t){var e=t.getSym();e.setDepth(Se.LEFT,t.getDepth(Se.RIGHT)),e.setDepth(Se.RIGHT,t.getDepth(Se.LEFT))},Te.prototype.add=function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var i=n.next();this._dirEdgeList.add(i);var r=i.getSym().getNode();r.isVisited()||e.push(r)}},Te.prototype.getNodes=function(){return this._nodes},Te.prototype.getDirectedEdges=function(){return this._dirEdgeList},Te.prototype.interfaces_=function(){return[E]},Te.prototype.getClass=function(){return Te};var Re=function t(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var e=arguments[0];this.init(e.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[Se.ON]=n}else if(arguments[0]instanceof t){var i=arguments[0];if(this.init(i.location.length),null!==i)for(var r=0;r<this.location.length;r++)this.location[r]=i.location[r]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[Se.ON]=o,this.location[Se.LEFT]=s,this.location[Se.RIGHT]=a}};Re.prototype.setAllLocations=function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t},Re.prototype.isNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==w.NONE)return!1;return!0},Re.prototype.setAllLocationsIfNull=function(t){for(var e=0;e<this.location.length;e++)this.location[e]===w.NONE&&(this.location[e]=t)},Re.prototype.isLine=function(){return 1===this.location.length},Re.prototype.merge=function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[Se.ON]=this.location[Se.ON],e[Se.LEFT]=w.NONE,e[Se.RIGHT]=w.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===w.NONE&&n<t.location.length&&(this.location[n]=t.location[n])},Re.prototype.getLocations=function(){return this.location},Re.prototype.flip=function(){if(this.location.length<=1)return null;var t=this.location[Se.LEFT];this.location[Se.LEFT]=this.location[Se.RIGHT],this.location[Se.RIGHT]=t},Re.prototype.toString=function(){var t=new D;return this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.LEFT])),t.append(w.toLocationSymbol(this.location[Se.ON])),this.location.length>1&&t.append(w.toLocationSymbol(this.location[Se.RIGHT])),t.toString()},Re.prototype.setLocations=function(t,e,n){this.location[Se.ON]=t,this.location[Se.LEFT]=e,this.location[Se.RIGHT]=n},Re.prototype.get=function(t){return t<this.location.length?this.location[t]:w.NONE},Re.prototype.isArea=function(){return this.location.length>1},Re.prototype.isAnyNull=function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===w.NONE)return!0;return!1},Re.prototype.setLocation=function(){if(1===arguments.length){var t=arguments[0];this.setLocation(Se.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}},Re.prototype.init=function(t){this.location=new Array(t).fill(null),this.setAllLocations(w.NONE)},Re.prototype.isEqualOnSide=function(t,e){return this.location[e]===t.location[e]},Re.prototype.allPositionsEqual=function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0},Re.prototype.interfaces_=function(){return[]},Re.prototype.getClass=function(){return Re};var Pe=function t(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var e=arguments[0];this.elt[0]=new Re(e),this.elt[1]=new Re(e)}else if(arguments[0]instanceof t){var n=arguments[0];this.elt[0]=new Re(n.elt[0]),this.elt[1]=new Re(n.elt[1])}}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.elt[0]=new Re(w.NONE),this.elt[1]=new Re(w.NONE),this.elt[i].setLocation(r)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Re(o,s,a),this.elt[1]=new Re(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],c=arguments[2],p=arguments[3];this.elt[0]=new Re(w.NONE,w.NONE,w.NONE),this.elt[1]=new Re(w.NONE,w.NONE,w.NONE),this.elt[u].setLocations(l,c,p)}};Pe.prototype.getGeometryCount=function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t},Pe.prototype.setAllLocations=function(t,e){this.elt[t].setAllLocations(e)},Pe.prototype.isNull=function(t){return this.elt[t].isNull()},Pe.prototype.setAllLocationsIfNull=function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}},Pe.prototype.isLine=function(t){return this.elt[t].isLine()},Pe.prototype.merge=function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e])},Pe.prototype.flip=function(){this.elt[0].flip(),this.elt[1].flip()},Pe.prototype.getLocation=function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(Se.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}},Pe.prototype.toString=function(){var t=new D;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()},Pe.prototype.isArea=function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}},Pe.prototype.isAnyNull=function(t){return this.elt[t].isAnyNull()},Pe.prototype.setLocation=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(Se.ON,e)}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this.elt[n].setLocation(i,r)}},Pe.prototype.isEqualOnSide=function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)},Pe.prototype.allPositionsEqual=function(t,e){return this.elt[t].allPositionsEqual(e)},Pe.prototype.toLine=function(t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]))},Pe.prototype.interfaces_=function(){return[]},Pe.prototype.getClass=function(){return Pe},Pe.toLineLabel=function(t){for(var e=new Pe(w.NONE),n=0;n<2;n++)e.setLocation(n,t.getLocation(n));return e};var De=function(){this._startDe=null,this._maxNodeDegree=-1,this._edges=new Nt,this._pts=new Nt,this._label=new Pe(w.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new Nt,this._geometryFactory=null;var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()};De.prototype.computeRing=function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=at.isCCW(this._ring.getCoordinates())},De.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},De.prototype.computePoints=function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new we(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new we(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var i=e.getLabel();et.isTrue(i.isArea()),this.mergeLabel(i),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)},De.prototype.getLinearRing=function(){return this._ring},De.prototype.getCoordinate=function(t){return this._pts.get(t)},De.prototype.computeMaxNodeDegree=function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2},De.prototype.addPoints=function(t,e,n){var i=t.getCoordinates();if(e){var r=1;n&&(r=0);for(var o=r;o<i.length;o++)this._pts.add(i[o])}else{var s=i.length-2;n&&(s=i.length-1);for(var a=s;a>=0;a--)this._pts.add(i[a])}},De.prototype.isHole=function(){return this._isHole},De.prototype.setInResult=function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)},De.prototype.containsPoint=function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!at.isPointInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();){if(n.next().containsPoint(t))return!1}return!0},De.prototype.addHole=function(t){this._holes.add(t)},De.prototype.isShell=function(){return null===this._shell},De.prototype.getLabel=function(){return this._label},De.prototype.getEdges=function(){return this._edges},De.prototype.getMaxNodeDegree=function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree},De.prototype.getShell=function(){return this._shell},De.prototype.mergeLabel=function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=e.getLocation(n,Se.RIGHT);if(i===w.NONE)return null;if(this._label.getLocation(n)===w.NONE)return this._label.setLocation(n,i),null}},De.prototype.setShell=function(t){this._shell=t,null!==t&&t.addHole(this)},De.prototype.toPolygon=function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)},De.prototype.interfaces_=function(){return[]},De.prototype.getClass=function(){return De};var Me=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.setEdgeRing=function(t,e){t.setMinEdgeRing(e)},e.prototype.getNext=function(t){return t.getNextMin()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Ae=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildMinimalRings=function(){var t=new Nt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Me(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t},e.prototype.setEdgeRing=function(t,e){t.setEdgeRing(e)},e.prototype.linkDirectedEdgesForMinimalEdgeRings=function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)},e.prototype.getNext=function(t){return t.getNext()},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(De),Fe=function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}};Fe.prototype.setVisited=function(t){this._isVisited=t},Fe.prototype.setInResult=function(t){this._isInResult=t},Fe.prototype.isCovered=function(){return this._isCovered},Fe.prototype.isCoveredSet=function(){return this._isCoveredSet},Fe.prototype.setLabel=function(t){this._label=t},Fe.prototype.getLabel=function(){return this._label},Fe.prototype.setCovered=function(t){this._isCovered=t,this._isCoveredSet=!0},Fe.prototype.updateIM=function(t){et.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)},Fe.prototype.isInResult=function(){return this._isInResult},Fe.prototype.isVisited=function(){return this._isVisited},Fe.prototype.interfaces_=function(){return[]},Fe.prototype.getClass=function(){return Fe};var Ge=function(t){function e(){t.call(this),this._coord=null,this._edges=null;var e=arguments[0],n=arguments[1];this._coord=e,this._edges=n,this._label=new Pe(0,w.NONE)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isIncidentEdgeInResult=function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();){if(t.next().getEdge().isInResult())return!0}return!1},e.prototype.isIsolated=function(){return 1===this._label.getGeometryCount()},e.prototype.getCoordinate=function(){return this._coord},e.prototype.print=function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)},e.prototype.computeIM=function(t){},e.prototype.computeMergedLocation=function(t,e){var n=w.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var i=t.getLocation(e);n!==w.BOUNDARY&&(n=i)}return n},e.prototype.setLabel=function(){if(2!==arguments.length)return t.prototype.setLabel.apply(this,arguments);var e=arguments[0],n=arguments[1];null===this._label?this._label=new Pe(e,n):this._label.setLocation(e,n)},e.prototype.getEdges=function(){return this._edges},e.prototype.mergeLabel=function(){if(arguments[0]instanceof e){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Pe)for(var n=arguments[0],i=0;i<2;i++){var r=this.computeMergedLocation(n,i);this._label.getLocation(i)===w.NONE&&this._label.setLocation(i,r)}},e.prototype.add=function(t){this._edges.insert(t),t.setNode(this)},e.prototype.setLabelBoundary=function(t){if(null===this._label)return null;var e=w.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case w.BOUNDARY:n=w.INTERIOR;break;case w.INTERIOR:default:n=w.BOUNDARY}this._label.setLocation(t,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Fe),qe=function(){this.nodeMap=new p,this.nodeFact=null;var t=arguments[0];this.nodeFact=t};qe.prototype.find=function(t){return this.nodeMap.get(t)},qe.prototype.addNode=function(){if(arguments[0]instanceof C){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ge){var n=arguments[0],i=this.nodeMap.get(n.getCoordinate());return null===i?(this.nodeMap.put(n.getCoordinate(),n),n):(i.mergeLabel(n),i)}},qe.prototype.print=function(t){for(var e=this.iterator();e.hasNext();){e.next().print(t)}},qe.prototype.iterator=function(){return this.nodeMap.values().iterator()},qe.prototype.values=function(){return this.nodeMap.values()},qe.prototype.getBoundaryNodes=function(t){for(var e=new Nt,n=this.iterator();n.hasNext();){var i=n.next();i.getLabel().getLocation(t)===w.BOUNDARY&&e.add(i)}return e},qe.prototype.add=function(t){var e=t.getCoordinate();this.addNode(e).add(t)},qe.prototype.interfaces_=function(){return[]},qe.prototype.getClass=function(){return qe};var Be=function(){},Ve={NE:{configurable:!0},NW:{configurable:!0},SW:{configurable:!0},SE:{configurable:!0}};Be.prototype.interfaces_=function(){return[]},Be.prototype.getClass=function(){return Be},Be.isNorthern=function(t){return t===Be.NE||t===Be.NW},Be.isOpposite=function(t,e){if(t===e)return!1;return 2===(t-e+4)%4},Be.commonHalfPlane=function(t,e){if(t===e)return t;if(2===(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n},Be.isInHalfPlane=function(t,e){return e===Be.SE?t===Be.SE||t===Be.SW:t===e||t===e+1},Be.quadrant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the quadrant for point ( \"+t+\", \"+e+\" )\");return t>=0?e>=0?Be.NE:Be.SE:e>=0?Be.NW:Be.SW}if(arguments[0]instanceof C&&arguments[1]instanceof C){var n=arguments[0],i=arguments[1];if(i.x===n.x&&i.y===n.y)throw new m(\"Cannot compute the quadrant for two identical points \"+n);return i.x>=n.x?i.y>=n.y?Be.NE:Be.SE:i.y>=n.y?Be.NW:Be.SW}},Ve.NE.get=function(){return 0},Ve.NW.get=function(){return 1},Ve.SW.get=function(){return 2},Ve.SE.get=function(){return 3},Object.defineProperties(Be,Ve);var Ue=function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];this._edge=e,this.init(n,i),this._label=null}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this._edge=r,this.init(o,s),this._label=a}};Ue.prototype.compareDirection=function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:at.computeOrientation(t._p0,t._p1,this._p1)},Ue.prototype.getDy=function(){return this._dy},Ue.prototype.getCoordinate=function(){return this._p0},Ue.prototype.setNode=function(t){this._node=t},Ue.prototype.print=function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),i=n.lastIndexOf(\".\"),r=n.substring(i+1);t.print(\"  \"+r+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)},Ue.prototype.compareTo=function(t){var e=t;return this.compareDirection(e)},Ue.prototype.getDirectedCoordinate=function(){return this._p1},Ue.prototype.getDx=function(){return this._dx},Ue.prototype.getLabel=function(){return this._label},Ue.prototype.getEdge=function(){return this._edge},Ue.prototype.getQuadrant=function(){return this._quadrant},Ue.prototype.getNode=function(){return this._node},Ue.prototype.toString=function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label},Ue.prototype.computeLabel=function(t){},Ue.prototype.init=function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=Be.quadrant(this._dx,this._dy),et.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")},Ue.prototype.interfaces_=function(){return[E]},Ue.prototype.getClass=function(){return Ue};var ze=function(t){function e(){var e=arguments[0],n=arguments[1];if(t.call(this,e),this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999],this._isForward=n,n)this.init(e.getCoordinate(0),e.getCoordinate(1));else{var i=e.getNumPoints()-1;this.init(e.getCoordinate(i),e.getCoordinate(i-1))}this.computeDirectedLabel()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getNextMin=function(){return this._nextMin},e.prototype.getDepth=function(t){return this._depth[t]},e.prototype.setVisited=function(t){this._isVisited=t},e.prototype.computeDirectedLabel=function(){this._label=new Pe(this._edge.getLabel()),this._isForward||this._label.flip()},e.prototype.getNext=function(){return this._next},e.prototype.setDepth=function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new we(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e},e.prototype.isInteriorAreaEdge=function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,Se.LEFT)===w.INTERIOR&&this._label.getLocation(e,Se.RIGHT)===w.INTERIOR||(t=!1);return t},e.prototype.setNextMin=function(t){this._nextMin=t},e.prototype.print=function(e){t.prototype.print.call(this,e),e.print(\" \"+this._depth[Se.LEFT]+\"/\"+this._depth[Se.RIGHT]),e.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&e.print(\" inResult\")},e.prototype.setMinEdgeRing=function(t){this._minEdgeRing=t},e.prototype.isLineEdge=function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,w.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,w.EXTERIOR);return t&&e&&n},e.prototype.setEdgeRing=function(t){this._edgeRing=t},e.prototype.getMinEdgeRing=function(){return this._minEdgeRing},e.prototype.getDepthDelta=function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t},e.prototype.setInResult=function(t){this._isInResult=t},e.prototype.getSym=function(){return this._sym},e.prototype.isForward=function(){return this._isForward},e.prototype.getEdge=function(){return this._edge},e.prototype.printEdge=function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)},e.prototype.setSym=function(t){this._sym=t},e.prototype.setVisitedEdge=function(t){this.setVisited(t),this._sym.setVisited(t)},e.prototype.setEdgeDepths=function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var i=1;t===Se.LEFT&&(i=-1);var r=Se.opposite(t),o=e+n*i;this.setDepth(t,e),this.setDepth(r,o)},e.prototype.getEdgeRing=function(){return this._edgeRing},e.prototype.isInResult=function(){return this._isInResult},e.prototype.setNext=function(t){this._next=t},e.prototype.isVisited=function(){return this._isVisited},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.depthFactor=function(t,e){return t===w.EXTERIOR&&e===w.INTERIOR?1:t===w.INTERIOR&&e===w.EXTERIOR?-1:0},e}(Ue),Xe=function(){};Xe.prototype.createNode=function(t){return new Ge(t,null)},Xe.prototype.interfaces_=function(){return[]},Xe.prototype.getClass=function(){return Xe};var Ye=function(){if(this._edges=new Nt,this._nodes=null,this._edgeEndList=new Nt,0===arguments.length)this._nodes=new qe(new Xe);else if(1===arguments.length){var t=arguments[0];this._nodes=new qe(t)}};Ye.prototype.printEdges=function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}},Ye.prototype.find=function(t){return this._nodes.find(t)},Ye.prototype.addNode=function(){if(arguments[0]instanceof Ge){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof C){var e=arguments[0];return this._nodes.addNode(e)}},Ye.prototype.getNodeIterator=function(){return this._nodes.iterator()},Ye.prototype.linkResultDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkResultDirectedEdges()}},Ye.prototype.debugPrintln=function(t){Y.out.println(t)},Ye.prototype.isBoundaryNode=function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var i=n.getLabel();return null!==i&&i.getLocation(t)===w.BOUNDARY},Ye.prototype.linkAllDirectedEdges=function(){for(var t=this._nodes.iterator();t.hasNext();){t.next().getEdges().linkAllDirectedEdges()}},Ye.prototype.matchInSameDirection=function(t,e,n,i){return!!t.equals(n)&&(at.computeOrientation(t,e,i)===at.COLLINEAR&&Be.quadrant(t,e)===Be.quadrant(n,i))},Ye.prototype.getEdgeEnds=function(){return this._edgeEndList},Ye.prototype.debugPrint=function(t){Y.out.print(t)},Ye.prototype.getEdgeIterator=function(){return this._edges.iterator()},Ye.prototype.findEdgeInSameDirection=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(this.matchInSameDirection(t,e,r[0],r[1]))return i;if(this.matchInSameDirection(t,e,r[r.length-1],r[r.length-2]))return i}return null},Ye.prototype.insertEdge=function(t){this._edges.add(t)},Ye.prototype.findEdgeEnd=function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null},Ye.prototype.addEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var i=new ze(n,!0),r=new ze(n,!1);i.setSym(r),r.setSym(i),this.add(i),this.add(r)}},Ye.prototype.add=function(t){this._nodes.add(t),this._edgeEndList.add(t)},Ye.prototype.getNodes=function(){return this._nodes.values()},Ye.prototype.findEdge=function(t,e){for(var n=0;n<this._edges.size();n++){var i=this._edges.get(n),r=i.getCoordinates();if(t.equals(r[0])&&e.equals(r[1]))return i}return null},Ye.prototype.interfaces_=function(){return[]},Ye.prototype.getClass=function(){return Ye},Ye.linkResultDirectedEdges=function(t){for(var e=t.iterator();e.hasNext();){e.next().getEdges().linkResultDirectedEdges()}};var ke=function(){this._geometryFactory=null,this._shellList=new Nt;var t=arguments[0];this._geometryFactory=t};ke.prototype.sortShellsAndHoles=function(t,e,n){for(var i=t.iterator();i.hasNext();){var r=i.next();r.isHole()?n.add(r):e.add(r)}},ke.prototype.computePolygons=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next().toPolygon(this._geometryFactory);e.add(i)}return e},ke.prototype.placeFreeHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(null===i.getShell()){var r=this.findEdgeRingContaining(i,t);if(null===r)throw new we(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(r)}}},ke.prototype.buildMinimalEdgeRings=function(t,e,n){for(var i=new Nt,r=t.iterator();r.hasNext();){var o=r.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else i.add(o)}return i},ke.prototype.containsPoint=function(t){for(var e=this._shellList.iterator();e.hasNext();){if(e.next().containsPoint(t))return!0}return!1},ke.prototype.buildMaximalEdgeRings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();if(i.isInResult()&&i.getLabel().isArea()&&null===i.getEdgeRing()){var r=new Ae(i,this._geometryFactory);e.add(r),r.setInResult()}}return e},ke.prototype.placePolygonHoles=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();i.isHole()&&i.setShell(t)}},ke.prototype.getPolygons=function(){return this.computePolygons(this._shellList)},ke.prototype.findEdgeRingContaining=function(t,e){for(var n=t.getLinearRing(),i=n.getEnvelopeInternal(),r=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),c=l.getEnvelopeInternal();null!==o&&(s=o.getLinearRing().getEnvelopeInternal());var p=!1;c.contains(i)&&at.isPointInRing(r,l.getCoordinates())&&(p=!0),p&&(null===o||s.contains(c))&&(o=u)}return o},ke.prototype.findShell=function(t){for(var e=0,n=null,i=t.iterator();i.hasNext();){var r=i.next();r.isHole()||(n=r,e++)}return et.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n},ke.prototype.add=function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];Ye.linkResultDirectedEdges(n);var i=this.buildMaximalEdgeRings(e),r=new Nt,o=this.buildMinimalEdgeRings(i,this._shellList,r);this.sortShellsAndHoles(o,this._shellList,r),this.placeFreeHoles(this._shellList,r)}},ke.prototype.interfaces_=function(){return[]},ke.prototype.getClass=function(){return ke};var je=function(){};je.prototype.getBounds=function(){},je.prototype.interfaces_=function(){return[]},je.prototype.getClass=function(){return je};var He=function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e};He.prototype.getItem=function(){return this._item},He.prototype.getBounds=function(){return this._bounds},He.prototype.interfaces_=function(){return[je,e]},He.prototype.getClass=function(){return He};var We=function(){this._size=null,this._items=null,this._size=0,this._items=new Nt,this._items.add(null)};We.prototype.poll=function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t},We.prototype.size=function(){return this._size},We.prototype.reorder=function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)},We.prototype.clear=function(){this._size=0,this._items.clear()},We.prototype.isEmpty=function(){return 0===this._size},We.prototype.add=function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)},We.prototype.interfaces_=function(){return[]},We.prototype.getClass=function(){return We};var Ke=function(){};Ke.prototype.visitItem=function(t){},Ke.prototype.interfaces_=function(){return[]},Ke.prototype.getClass=function(){return Ke};var Je=function(){};Je.prototype.insert=function(t,e){},Je.prototype.remove=function(t,e){},Je.prototype.query=function(){},Je.prototype.interfaces_=function(){return[]},Je.prototype.getClass=function(){return Je};var Qe=function(){if(this._childBoundables=new Nt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}},Ze={serialVersionUID:{configurable:!0}};Qe.prototype.getLevel=function(){return this._level},Qe.prototype.size=function(){return this._childBoundables.size()},Qe.prototype.getChildBoundables=function(){return this._childBoundables},Qe.prototype.addChildBoundable=function(t){et.isTrue(null===this._bounds),this._childBoundables.add(t)},Qe.prototype.isEmpty=function(){return this._childBoundables.isEmpty()},Qe.prototype.getBounds=function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds},Qe.prototype.interfaces_=function(){return[je,e]},Qe.prototype.getClass=function(){return Qe},Ze.serialVersionUID.get=function(){return 0x5a1e55ec41369800},Object.defineProperties(Qe,Ze);var $e=function(){};$e.reverseOrder=function(){return{compare:function(t,e){return e.compareTo(t)}}},$e.min=function(t){return $e.sort(t),t.get(0)},$e.sort=function(t,e){var n=t.toArray();e?Gt.sort(n,e):Gt.sort(n);for(var i=t.iterator(),r=0,o=n.length;r<o;r++)i.next(),i.set(n[r])},$e.singletonList=function(t){var e=new Nt;return e.add(t),e};var tn=function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()};tn.prototype.expandToQueue=function(t,e){var n=tn.isComposite(this._boundable1),i=tn.isComposite(this._boundable2);if(n&&i)return tn.area(this._boundable1)>tn.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,t,e),null):(this.expand(this._boundable2,this._boundable1,t,e),null);if(n)return this.expand(this._boundable1,this._boundable2,t,e),null;if(i)return this.expand(this._boundable2,this._boundable1,t,e),null;throw new m(\"neither boundable is composite\")},tn.prototype.isLeaves=function(){return!(tn.isComposite(this._boundable1)||tn.isComposite(this._boundable2))},tn.prototype.compareTo=function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0},tn.prototype.expand=function(t,e,n,i){for(var r=t.getChildBoundables().iterator();r.hasNext();){var o=r.next(),s=new tn(o,e,this._itemDistance);s.getDistance()<i&&n.add(s)}},tn.prototype.getBoundable=function(t){return 0===t?this._boundable1:this._boundable2},tn.prototype.getDistance=function(){return this._distance},tn.prototype.distance=function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())},tn.prototype.interfaces_=function(){return[E]},tn.prototype.getClass=function(){return tn},tn.area=function(t){return t.getBounds().getArea()},tn.isComposite=function(t){return t instanceof Qe};var en=function t(){if(this._root=null,this._built=!1,this._itemBoundables=new Nt,this._nodeCapacity=null,0===arguments.length){var e=t.DEFAULT_NODE_CAPACITY;this._nodeCapacity=e}else if(1===arguments.length){var n=arguments[0];et.isTrue(n>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=n}},nn={IntersectsOp:{configurable:!0},serialVersionUID:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};en.prototype.getNodeCapacity=function(){return this._nodeCapacity},en.prototype.lastNode=function(t){return t.get(t.size()-1)},en.prototype.size=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof Qe?t+=this.size(n):n instanceof He&&(t+=1)}return t}},en.prototype.removeItem=function(t,e){for(var n=null,i=t.getChildBoundables().iterator();i.hasNext();){var r=i.next();r instanceof He&&r.getItem()===e&&(n=r)}return null!==n&&(t.getChildBoundables().remove(n),!0)},en.prototype.itemsTree=function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new Nt:t}if(1===arguments.length){for(var e=arguments[0],n=new Nt,i=e.getChildBoundables().iterator();i.hasNext();){var r=i.next();if(r instanceof Qe){var o=this.itemsTree(r);null!==o&&n.add(o)}else r instanceof He?n.add(r.getItem()):et.shouldNeverReachHere()}return n.size()<=0?null:n}},en.prototype.insert=function(t,e){et.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new He(t,e))},en.prototype.boundablesAtLevel=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];if(et.isTrue(n>-2),i.getLevel()===n)return r.add(i),null;for(var o=i.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof Qe?this.boundablesAtLevel(n,s,r):(et.isTrue(s instanceof He),-1===n&&r.add(s))}return null}},en.prototype.query=function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new Nt;return this.isEmpty()?e:(this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.query(t,this._root,e),e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.query(n,this._root,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var r=arguments[0],o=arguments[1],s=arguments[2],a=o.getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),r)&&(l instanceof Qe?this.query(r,l,s):l instanceof He?s.visitItem(l.getItem()):et.shouldNeverReachHere())}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe)for(var c=arguments[0],p=arguments[1],h=arguments[2],f=p.getChildBoundables(),g=0;g<f.size();g++){var d=f.get(g);this.getIntersectsOp().intersects(d.getBounds(),c)&&(d instanceof Qe?this.query(c,d,h):d instanceof He?h.add(d.getItem()):et.shouldNeverReachHere())}},en.prototype.build=function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0},en.prototype.getRoot=function(){return this.build(),this._root},en.prototype.remove=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=this.removeItem(i,r);if(o)return!0;for(var s=null,a=i.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&(u instanceof Qe&&(o=this.remove(n,u,r)))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&i.getChildBoundables().remove(s),o}},en.prototype.createHigherLevels=function(t,e){et.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)},en.prototype.depth=function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof Qe){var i=this.depth(n);i>t&&(t=i)}}return t+1}},en.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var n=new Nt;n.add(this.createNode(e));var i=new Nt(t);$e.sort(i,this.getComparator());for(var r=i.iterator();r.hasNext();){var o=r.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n},en.prototype.isEmpty=function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()},en.prototype.interfaces_=function(){return[e]},en.prototype.getClass=function(){return en},en.compareDoubles=function(t,e){return t>e?1:t<e?-1:0},nn.IntersectsOp.get=function(){return rn},nn.serialVersionUID.get=function(){return-0x35ef64c82d4c5400},nn.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(en,nn);var rn=function(){},on=function(){};on.prototype.distance=function(t,e){},on.prototype.interfaces_=function(){return[]},on.prototype.getClass=function(){return on};var sn=function(t){function n(e){e=e||n.DEFAULT_NODE_CAPACITY,t.call(this,e)}t&&(n.__proto__=t),(n.prototype=Object.create(t&&t.prototype)).constructor=n;var i={STRtreeNode:{configurable:!0},serialVersionUID:{configurable:!0},xComparator:{configurable:!0},yComparator:{configurable:!0},intersectsOp:{configurable:!0},DEFAULT_NODE_CAPACITY:{configurable:!0}};return n.prototype.createParentBoundablesFromVerticalSlices=function(t,e){et.isTrue(t.length>0);for(var n=new Nt,i=0;i<t.length;i++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[i],e));return n},n.prototype.createNode=function(t){return new an(t)},n.prototype.size=function(){return 0===arguments.length?t.prototype.size.call(this):t.prototype.size.apply(this,arguments)},n.prototype.insert=function(){if(2!==arguments.length)return t.prototype.insert.apply(this,arguments);var e=arguments[0],n=arguments[1];if(e.isNull())return null;t.prototype.insert.call(this,e,n)},n.prototype.getIntersectsOp=function(){return n.intersectsOp},n.prototype.verticalSlices=function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),i=new Array(e).fill(null),r=t.iterator(),o=0;o<e;o++){i[o]=new Nt;for(var s=0;r.hasNext()&&s<n;){var a=r.next();i[o].add(a),s++}}return i},n.prototype.query=function(){if(1===arguments.length){var e=arguments[0];return t.prototype.query.call(this,e)}if(2===arguments.length){var n=arguments[0],i=arguments[1];t.prototype.query.call(this,n,i)}else if(3===arguments.length)if(T(arguments[2],Ke)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var r=arguments[0],o=arguments[1],s=arguments[2];t.prototype.query.call(this,r,o,s)}else if(T(arguments[2],xt)&&arguments[0]instanceof Object&&arguments[1]instanceof Qe){var a=arguments[0],u=arguments[1],l=arguments[2];t.prototype.query.call(this,a,u,l)}},n.prototype.getComparator=function(){return n.yComparator},n.prototype.createParentBoundablesFromVerticalSlice=function(e,n){return t.prototype.createParentBoundables.call(this,e,n)},n.prototype.remove=function(){if(2===arguments.length){var e=arguments[0],n=arguments[1];return t.prototype.remove.call(this,e,n)}return t.prototype.remove.apply(this,arguments)},n.prototype.depth=function(){return 0===arguments.length?t.prototype.depth.call(this):t.prototype.depth.apply(this,arguments)},n.prototype.createParentBoundables=function(t,e){et.isTrue(!t.isEmpty());var i=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),r=new Nt(t);$e.sort(r,n.xComparator);var o=this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(i))));return this.createParentBoundablesFromVerticalSlices(o,e)},n.prototype.nearestNeighbour=function(){if(1===arguments.length){if(T(arguments[0],on)){var t=arguments[0],e=new tn(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof tn){var i=arguments[0];return this.nearestNeighbour(i,v.POSITIVE_INFINITY)}}else if(2===arguments.length){if(arguments[0]instanceof n&&T(arguments[1],on)){var r=arguments[0],o=arguments[1],s=new tn(this.getRoot(),r.getRoot(),o);return this.nearestNeighbour(s)}if(arguments[0]instanceof tn&&\"number\"==typeof arguments[1]){var a=arguments[0],u=arguments[1],l=null,c=new We;for(c.add(a);!c.isEmpty()&&u>0;){var p=c.poll(),h=p.getDistance();if(h>=u)break;p.isLeaves()?(u=h,l=p):p.expandToQueue(c,u)}return[l.getBoundable(0).getItem(),l.getBoundable(1).getItem()]}}else if(3===arguments.length){var f=arguments[0],g=arguments[1],d=arguments[2],y=new He(f,g),_=new tn(this.getRoot(),y,d);return this.nearestNeighbour(_)[0]}},n.prototype.interfaces_=function(){return[Je,e]},n.prototype.getClass=function(){return n},n.centreX=function(t){return n.avg(t.getMinX(),t.getMaxX())},n.avg=function(t,e){return(t+e)/2},n.centreY=function(t){return n.avg(t.getMinY(),t.getMaxY())},i.STRtreeNode.get=function(){return an},i.serialVersionUID.get=function(){return 0x39920f7d5f261e0},i.xComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreX(e.getBounds()),n.centreX(i.getBounds()))}}},i.yComparator.get=function(){return{interfaces_:function(){return[N]},compare:function(e,i){return t.compareDoubles(n.centreY(e.getBounds()),n.centreY(i.getBounds()))}}},i.intersectsOp.get=function(){return{interfaces_:function(){return[t.IntersectsOp]},intersects:function(t,e){return t.intersects(e)}}},i.DEFAULT_NODE_CAPACITY.get=function(){return 10},Object.defineProperties(n,i),n}(en),an=function(t){function e(){var e=arguments[0];t.call(this,e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeBounds=function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new j(n.getBounds()):t.expandToInclude(n.getBounds())}return t},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Qe),un=function(){};un.prototype.interfaces_=function(){return[]},un.prototype.getClass=function(){return un},un.relativeSign=function(t,e){return t<e?-1:t>e?1:0},un.compare=function(t,e,n){if(e.equals2D(n))return 0;var i=un.relativeSign(e.x,n.x),r=un.relativeSign(e.y,n.y);switch(t){case 0:return un.compareValue(i,r);case 1:return un.compareValue(r,i);case 2:return un.compareValue(r,-i);case 3:return un.compareValue(-i,r);case 4:return un.compareValue(-i,-r);case 5:return un.compareValue(-r,-i);case 6:return un.compareValue(-r,i);case 7:return un.compareValue(i,-r)}return et.shouldNeverReachHere(\"invalid octant value\"),0},un.compareValue=function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0};var ln=function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._segString=t,this.coord=new C(e),this.segmentIndex=n,this._segmentOctant=i,this._isInterior=!e.equals2D(t.getCoordinate(n))};ln.prototype.getCoordinate=function(){return this.coord},ln.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)},ln.prototype.compareTo=function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:un.compare(this._segmentOctant,this.coord,e.coord)},ln.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t},ln.prototype.isInterior=function(){return this._isInterior},ln.prototype.interfaces_=function(){return[E]},ln.prototype.getClass=function(){return ln};var cn=function(){this._nodeMap=new p,this._edge=null;var t=arguments[0];this._edge=t};cn.prototype.getSplitCoordinates=function(){var t=new St;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next();this.addEdgeCoordinates(n,i,t),n=i}return t.toCoordinateArray()},cn.prototype.addCollapsedNodes=function(){var t=new Nt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}},cn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},cn.prototype.findCollapsesFromExistingVertices=function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e),i=this._edge.getCoordinate(e+2);n.equals2D(i)&&t.add(new M(e+1))}},cn.prototype.addEdgeCoordinates=function(t,e,n){var i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);n.add(new C(t.coord),!1);for(var o=t.segmentIndex+1;o<=e.segmentIndex;o++)n.add(this._edge.getCoordinate(o));r&&n.add(new C(e.coord))},cn.prototype.iterator=function(){return this._nodeMap.values().iterator()},cn.prototype.addSplitEdges=function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},cn.prototype.findCollapseIndex=function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var i=e.segmentIndex-t.segmentIndex;return e.isInterior()||i--,1===i&&(n[0]=t.segmentIndex+1,!0)},cn.prototype.findCollapsesFromInsertedNodes=function(t){for(var e=new Array(1).fill(null),n=this.iterator(),i=n.next();n.hasNext();){var r=n.next();this.findCollapseIndex(i,r,e)&&t.add(new M(e[0])),i=r}},cn.prototype.getEdge=function(){return this._edge},cn.prototype.addEndpoints=function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)},cn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this._edge.getCoordinate(e.segmentIndex),r=e.isInterior()||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return r&&(o[s]=new C(e.coord)),new gn(o,this._edge.getData())},cn.prototype.add=function(t,e){var n=new ln(this._edge,t,e,this._edge.getSegmentOctant(e)),i=this._nodeMap.get(n);return null!==i?(et.isTrue(i.coord.equals2D(t),\"Found equal nodes with different coordinates\"),i):(this._nodeMap.put(n,n),n)},cn.prototype.checkSplitEdgesCorrectness=function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new $(\"bad split edge start point at \"+n);var i=t.get(t.size()-1).getCoordinates(),r=i[i.length-1];if(!r.equals2D(e[e.length-1]))throw new $(\"bad split edge end point at \"+r)},cn.prototype.interfaces_=function(){return[]},cn.prototype.getClass=function(){return cn};var pn=function(){};pn.prototype.interfaces_=function(){return[]},pn.prototype.getClass=function(){return pn},pn.octant=function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1];if(0===t&&0===e)throw new m(\"Cannot compute the octant for point ( \"+t+\", \"+e+\" )\");var n=Math.abs(t),i=Math.abs(e);return t>=0?e>=0?n>=i?0:1:n>=i?7:6:e>=0?n>=i?3:2:n>=i?4:5}if(arguments[0]instanceof C&&arguments[1]instanceof C){var r=arguments[0],o=arguments[1],s=o.x-r.x,a=o.y-r.y;if(0===s&&0===a)throw new m(\"Cannot compute the octant for two identical points \"+r);return pn.octant(s,a)}};var hn=function(){};hn.prototype.getCoordinates=function(){},hn.prototype.size=function(){},hn.prototype.getCoordinate=function(t){},hn.prototype.isClosed=function(){},hn.prototype.setData=function(t){},hn.prototype.getData=function(){},hn.prototype.interfaces_=function(){return[]},hn.prototype.getClass=function(){return hn};var fn=function(){};fn.prototype.addIntersection=function(t,e){},fn.prototype.interfaces_=function(){return[hn]},fn.prototype.getClass=function(){return fn};var gn=function(){this._nodeList=new cn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};gn.prototype.getCoordinates=function(){return this._pts},gn.prototype.size=function(){return this._pts.length},gn.prototype.getCoordinate=function(t){return this._pts[t]},gn.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},gn.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))},gn.prototype.setData=function(t){this._data=t},gn.prototype.safeOctant=function(t,e){return t.equals2D(e)?0:pn.octant(t,e)},gn.prototype.getData=function(){return this._data},gn.prototype.addIntersection=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[3],o=new C(n.getIntersection(r));this.addIntersection(o,i)}},gn.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},gn.prototype.getNodeList=function(){return this._nodeList},gn.prototype.addIntersectionNode=function(t,e){var n=e,i=n+1;if(i<this._pts.length){var r=this._pts[i];t.equals2D(r)&&(n=i)}return this._nodeList.add(t,n)},gn.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},gn.prototype.interfaces_=function(){return[fn]},gn.prototype.getClass=function(){return gn},gn.getNodedSubstrings=function(){if(1===arguments.length){var t=arguments[0],e=new Nt;return gn.getNodedSubstrings(t,e),e}if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){r.next().getNodeList().addSplitEdges(i)}};var dn=function(){if(this.p0=null,this.p1=null,0===arguments.length)this.p0=new C,this.p1=new C;else if(1===arguments.length){var t=arguments[0];this.p0=new C(t.p0),this.p1=new C(t.p1)}else if(2===arguments.length)this.p0=arguments[0],this.p1=arguments[1];else if(4===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3];this.p0=new C(e,n),this.p1=new C(i,r)}},yn={serialVersionUID:{configurable:!0}};dn.prototype.minX=function(){return Math.min(this.p0.x,this.p1.x)},dn.prototype.orientationIndex=function(){if(arguments[0]instanceof dn){var t=arguments[0],e=at.orientationIndex(this.p0,this.p1,t.p0),n=at.orientationIndex(this.p0,this.p1,t.p1);return e>=0&&n>=0?Math.max(e,n):e<=0&&n<=0?Math.max(e,n):0}if(arguments[0]instanceof C){var i=arguments[0];return at.orientationIndex(this.p0,this.p1,i)}},dn.prototype.toGeometry=function(t){return t.createLineString([this.p0,this.p1])},dn.prototype.isVertical=function(){return this.p0.x===this.p1.x},dn.prototype.equals=function(t){if(!(t instanceof dn))return!1;var e=t;return this.p0.equals(e.p0)&&this.p1.equals(e.p1)},dn.prototype.intersection=function(t){var e=new rt;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null},dn.prototype.project=function(){if(arguments[0]instanceof C){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new C(t);var e=this.projectionFactor(t),n=new C;return n.x=this.p0.x+e*(this.p1.x-this.p0.x),n.y=this.p0.y+e*(this.p1.y-this.p0.y),n}if(arguments[0]instanceof dn){var i=arguments[0],r=this.projectionFactor(i.p0),o=this.projectionFactor(i.p1);if(r>=1&&o>=1)return null;if(r<=0&&o<=0)return null;var s=this.project(i.p0);r<0&&(s=this.p0),r>1&&(s=this.p1);var a=this.project(i.p1);return o<0&&(a=this.p0),o>1&&(a=this.p1),new dn(s,a)}},dn.prototype.normalize=function(){this.p1.compareTo(this.p0)<0&&this.reverse()},dn.prototype.angle=function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)},dn.prototype.getCoordinate=function(t){return 0===t?this.p0:this.p1},dn.prototype.distancePerpendicular=function(t){return at.distancePointLinePerpendicular(t,this.p0,this.p1)},dn.prototype.minY=function(){return Math.min(this.p0.y,this.p1.y)},dn.prototype.midPoint=function(){return dn.midPoint(this.p0,this.p1)},dn.prototype.projectionFactor=function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,i=e*e+n*n;if(i<=0)return v.NaN;return((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/i},dn.prototype.closestPoints=function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),i=v.MAX_VALUE,r=null,o=this.closestPoint(t.p0);i=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(r=s.distance(t.p1))<i&&(i=r,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(r=a.distance(this.p0))<i&&(i=r,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(r=u.distance(this.p1))<i&&(i=r,n[0]=this.p1,n[1]=u),n},dn.prototype.closestPoint=function(t){var e=this.projectionFactor(t);if(e>0&&e<1)return this.project(t);return this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1},dn.prototype.maxX=function(){return Math.max(this.p0.x,this.p1.x)},dn.prototype.getLength=function(){return this.p0.distance(this.p1)},dn.prototype.compareTo=function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)},dn.prototype.reverse=function(){var t=this.p0;this.p0=this.p1,this.p1=t},dn.prototype.equalsTopo=function(t){return this.p0.equals(t.p0)&&(this.p1.equals(t.p1)||this.p0.equals(t.p1))&&this.p1.equals(t.p0)},dn.prototype.lineIntersection=function(t){try{return k.intersection(this.p0,this.p1,t.p0,t.p1)}catch(t){if(!(t instanceof X))throw t}return null},dn.prototype.maxY=function(){return Math.max(this.p0.y,this.p1.y)},dn.prototype.pointAlongOffset=function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),i=this.p0.y+t*(this.p1.y-this.p0.y),r=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(r*r+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new Error(\"Cannot compute offset from zero-length line segment\");a=e*r/s,u=e*o/s}return new C(n-u,i+a)},dn.prototype.setCoordinates=function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}},dn.prototype.segmentFraction=function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||v.isNaN(e))&&(e=1),e},dn.prototype.toString=function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"},dn.prototype.isHorizontal=function(){return this.p0.y===this.p1.y},dn.prototype.distance=function(){if(arguments[0]instanceof dn){var t=arguments[0];return at.distanceLineLine(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof C){var e=arguments[0];return at.distancePointLine(e,this.p0,this.p1)}},dn.prototype.pointAlong=function(t){var e=new C;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e},dn.prototype.hashCode=function(){var t=v.doubleToLongBits(this.p0.x);t^=31*v.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=v.doubleToLongBits(this.p1.x);n^=31*v.doubleToLongBits(this.p1.y);return e^(Math.trunc(n)^Math.trunc(n>>32))},dn.prototype.interfaces_=function(){return[E,e]},dn.prototype.getClass=function(){return dn},dn.midPoint=function(t,e){return new C((t.x+e.x)/2,(t.y+e.y)/2)},yn.serialVersionUID.get=function(){return 0x2d2172135f411c00},Object.defineProperties(dn,yn);var _n=function(){this.tempEnv1=new j,this.tempEnv2=new j,this._overlapSeg1=new dn,this._overlapSeg2=new dn};_n.prototype.overlap=function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];t.getLineSegment(e,this._overlapSeg1),n.getLineSegment(i,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}},_n.prototype.interfaces_=function(){return[]},_n.prototype.getClass=function(){return _n};var mn=function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=i};mn.prototype.getLineSegment=function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]},mn.prototype.computeSelect=function(t,e,n,i){var r=this._pts[e],o=this._pts[n];if(i.tempEnv1.init(r,o),n-e==1)return i.select(this,e),null;if(!t.intersects(i.tempEnv1))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,i),s<n&&this.computeSelect(t,s,n,i)},mn.prototype.getCoordinates=function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t},mn.prototype.computeOverlaps=function(t,e){this.computeOverlapsInternal(this._start,this._end,t,t._start,t._end,e)},mn.prototype.setId=function(t){this._id=t},mn.prototype.select=function(t,e){this.computeSelect(t,this._start,this._end,e)},mn.prototype.getEnvelope=function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new j(t,e)}return this._env},mn.prototype.getEndIndex=function(){return this._end},mn.prototype.getStartIndex=function(){return this._start},mn.prototype.getContext=function(){return this._context},mn.prototype.getId=function(){return this._id},mn.prototype.computeOverlapsInternal=function(t,e,n,i,r,o){var s=this._pts[t],a=this._pts[e],u=n._pts[i],l=n._pts[r];if(e-t==1&&r-i==1)return o.overlap(this,t,n,i),null;if(o.tempEnv1.init(s,a),o.tempEnv2.init(u,l),!o.tempEnv1.intersects(o.tempEnv2))return null;var c=Math.trunc((t+e)/2),p=Math.trunc((i+r)/2);t<c&&(i<p&&this.computeOverlapsInternal(t,c,n,i,p,o),p<r&&this.computeOverlapsInternal(t,c,n,p,r,o)),c<e&&(i<p&&this.computeOverlapsInternal(c,e,n,i,p,o),p<r&&this.computeOverlapsInternal(c,e,n,p,r,o))},mn.prototype.interfaces_=function(){return[]},mn.prototype.getClass=function(){return mn};var vn=function(){};vn.prototype.interfaces_=function(){return[]},vn.prototype.getClass=function(){return vn},vn.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=vn.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return vn.toIntArray(n)},vn.findChainEnd=function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var i=Be.quadrant(t[n],t[n+1]),r=e+1;r<t.length;){if(!t[r-1].equals2D(t[r])){if(Be.quadrant(t[r-1],t[r])!==i)break}r++}return r-1},vn.getChains=function(){if(1===arguments.length){var t=arguments[0];return vn.getChains(t,null)}if(2===arguments.length){for(var e=arguments[0],n=arguments[1],i=new Nt,r=vn.getChainStartIndices(e),o=0;o<r.length-1;o++){var s=new mn(e,r[o],r[o+1],n);i.add(s)}return i}},vn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var In=function(){};In.prototype.computeNodes=function(t){},In.prototype.getNodedSubstrings=function(){},In.prototype.interfaces_=function(){return[]},In.prototype.getClass=function(){return In};var En=function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}};En.prototype.setSegmentIntersector=function(t){this._segInt=t},En.prototype.interfaces_=function(){return[In]},En.prototype.getClass=function(){return En};var xn=function(t){function e(e){e?t.call(this,e):t.call(this),this._monoChains=new Nt,this._index=new sn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0}t&&(e.__proto__=t),(e.prototype=Object.create(t&&t.prototype)).constructor=e;var n={SegmentOverlapAction:{configurable:!0}};return e.prototype.getMonotoneChains=function(){return this._monoChains},e.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},e.prototype.getIndex=function(){return this._index},e.prototype.add=function(t){for(var e=vn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}},e.prototype.computeNodes=function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()},e.prototype.intersectChains=function(){for(var t=new Nn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),i=this._index.query(n.getEnvelope()).iterator();i.hasNext();){var r=i.next();if(r.getId()>n.getId()&&(n.computeOverlaps(r,t),this._nOverlaps++),this._segInt.isDone())return null}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},n.SegmentOverlapAction.get=function(){return Nn},Object.defineProperties(e,n),e}(En),Nn=function(t){function e(){t.call(this),this._si=null;var e=arguments[0];this._si=e}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.overlap=function(){if(4!==arguments.length)return t.prototype.overlap.apply(this,arguments);var e=arguments[0],n=arguments[1],i=arguments[2],r=arguments[3],o=e.getContext(),s=i.getContext();this._si.processIntersections(o,n,s,r)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(_n),Cn=function t(){if(this._quadrantSegments=t.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=t.CAP_ROUND,this._joinStyle=t.JOIN_ROUND,this._mitreLimit=t.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=t.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var e=arguments[0];this.setQuadrantSegments(e)}else if(2===arguments.length){var n=arguments[0],i=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(i)}else if(4===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(r),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}},Sn={CAP_ROUND:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},JOIN_ROUND:{configurable:!0},JOIN_MITRE:{configurable:!0},JOIN_BEVEL:{configurable:!0},DEFAULT_QUADRANT_SEGMENTS:{configurable:!0},DEFAULT_MITRE_LIMIT:{configurable:!0},DEFAULT_SIMPLIFY_FACTOR:{configurable:!0}};Cn.prototype.getEndCapStyle=function(){return this._endCapStyle},Cn.prototype.isSingleSided=function(){return this._isSingleSided},Cn.prototype.setQuadrantSegments=function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=Cn.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=Cn.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==Cn.JOIN_ROUND&&(this._quadrantSegments=Cn.DEFAULT_QUADRANT_SEGMENTS)},Cn.prototype.getJoinStyle=function(){return this._joinStyle},Cn.prototype.setJoinStyle=function(t){this._joinStyle=t},Cn.prototype.setSimplifyFactor=function(t){this._simplifyFactor=t<0?0:t},Cn.prototype.getSimplifyFactor=function(){return this._simplifyFactor},Cn.prototype.getQuadrantSegments=function(){return this._quadrantSegments},Cn.prototype.setEndCapStyle=function(t){this._endCapStyle=t},Cn.prototype.getMitreLimit=function(){return this._mitreLimit},Cn.prototype.setMitreLimit=function(t){this._mitreLimit=t},Cn.prototype.setSingleSided=function(t){this._isSingleSided=t},Cn.prototype.interfaces_=function(){return[]},Cn.prototype.getClass=function(){return Cn},Cn.bufferDistanceError=function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)},Sn.CAP_ROUND.get=function(){return 1},Sn.CAP_FLAT.get=function(){return 2},Sn.CAP_SQUARE.get=function(){return 3},Sn.JOIN_ROUND.get=function(){return 1},Sn.JOIN_MITRE.get=function(){return 2},Sn.JOIN_BEVEL.get=function(){return 3},Sn.DEFAULT_QUADRANT_SEGMENTS.get=function(){return 8},Sn.DEFAULT_MITRE_LIMIT.get=function(){return 5},Sn.DEFAULT_SIMPLIFY_FACTOR.get=function(){return.01},Object.defineProperties(Cn,Sn);var Ln=function(t){this._distanceTol=null,this._isDeleted=null,this._angleOrientation=at.COUNTERCLOCKWISE,this._inputLine=t||null},bn={INIT:{configurable:!0},DELETE:{configurable:!0},KEEP:{configurable:!0},NUM_PTS_TO_CHECK:{configurable:!0}};Ln.prototype.isDeletable=function(t,e,n,i){var r=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(r,o,s)&&(!!this.isShallow(r,o,s,i)&&this.isShallowSampled(r,o,t,n,i))},Ln.prototype.deleteShallowConcavities=function(){for(var t=1,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e),i=!1;n<this._inputLine.length;){var r=!1;this.isDeletable(t,e,n,this._distanceTol)&&(this._isDeleted[e]=Ln.DELETE,r=!0,i=!0),t=r?n:e,e=this.findNextNonDeletedIndex(t),n=this.findNextNonDeletedIndex(e)}return i},Ln.prototype.isShallowConcavity=function(t,e,n,i){if(!(at.computeOrientation(t,e,n)===this._angleOrientation))return!1;return at.distancePointLine(e,t,n)<i},Ln.prototype.isShallowSampled=function(t,e,n,i,r){var o=Math.trunc((i-n)/Ln.NUM_PTS_TO_CHECK);o<=0&&(o=1);for(var s=n;s<i;s+=o)if(!this.isShallow(t,e,this._inputLine[s],r))return!1;return!0},Ln.prototype.isConcave=function(t,e,n){var i=at.computeOrientation(t,e,n)===this._angleOrientation;return i},Ln.prototype.simplify=function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=at.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()},Ln.prototype.findNextNonDeletedIndex=function(t){for(var e=t+1;e<this._inputLine.length&&this._isDeleted[e]===Ln.DELETE;)e++;return e},Ln.prototype.isShallow=function(t,e,n,i){return at.distancePointLine(e,t,n)<i},Ln.prototype.collapseLine=function(){for(var t=new St,e=0;e<this._inputLine.length;e++)this._isDeleted[e]!==Ln.DELETE&&t.add(this._inputLine[e]);return t.toCoordinateArray()},Ln.prototype.interfaces_=function(){return[]},Ln.prototype.getClass=function(){return Ln},Ln.simplify=function(t,e){return new Ln(t).simplify(e)},bn.INIT.get=function(){return 0},bn.DELETE.get=function(){return 1},bn.KEEP.get=function(){return 1},bn.NUM_PTS_TO_CHECK.get=function(){return 10},Object.defineProperties(Ln,bn);var wn=function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new Nt},On={COORDINATE_ARRAY_TYPE:{configurable:!0}};wn.prototype.getCoordinates=function(){return this._ptList.toArray(wn.COORDINATE_ARRAY_TYPE)},wn.prototype.setPrecisionModel=function(t){this._precisionModel=t},wn.prototype.addPt=function(t){var e=new C(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)},wn.prototype.revere=function(){},wn.prototype.addPts=function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var i=t.length-1;i>=0;i--)this.addPt(t[i])},wn.prototype.isRedundant=function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance},wn.prototype.toString=function(){return(new _e).createLineString(this.getCoordinates()).toString()},wn.prototype.closeRing=function(){if(this._ptList.size()<1)return null;var t=new C(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)},wn.prototype.setMinimumVertexDistance=function(t){this._minimimVertexDistance=t},wn.prototype.interfaces_=function(){return[]},wn.prototype.getClass=function(){return wn},On.COORDINATE_ARRAY_TYPE.get=function(){return new Array(0).fill(null)},Object.defineProperties(wn,On);var Tn=function(){},Rn={PI_TIMES_2:{configurable:!0},PI_OVER_2:{configurable:!0},PI_OVER_4:{configurable:!0},COUNTERCLOCKWISE:{configurable:!0},CLOCKWISE:{configurable:!0},NONE:{configurable:!0}};Tn.prototype.interfaces_=function(){return[]},Tn.prototype.getClass=function(){return Tn},Tn.toDegrees=function(t){return 180*t/Math.PI},Tn.normalize=function(t){for(;t>Math.PI;)t-=Tn.PI_TIMES_2;for(;t<=-Math.PI;)t+=Tn.PI_TIMES_2;return t},Tn.angle=function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],i=n.x-e.x,r=n.y-e.y;return Math.atan2(r,i)}},Tn.isAcute=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)>0},Tn.isObtuse=function(t,e,n){var i=t.x-e.x,r=t.y-e.y;return i*(n.x-e.x)+r*(n.y-e.y)<0},Tn.interiorAngle=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Math.abs(r-i)},Tn.normalizePositive=function(t){if(t<0){for(;t<0;)t+=Tn.PI_TIMES_2;t>=Tn.PI_TIMES_2&&(t=0)}else{for(;t>=Tn.PI_TIMES_2;)t-=Tn.PI_TIMES_2;t<0&&(t=0)}return t},Tn.angleBetween=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n);return Tn.diff(i,r)},Tn.diff=function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n},Tn.toRadians=function(t){return t*Math.PI/180},Tn.getTurn=function(t,e){var n=Math.sin(e-t);return n>0?Tn.COUNTERCLOCKWISE:n<0?Tn.CLOCKWISE:Tn.NONE},Tn.angleBetweenOriented=function(t,e,n){var i=Tn.angle(e,t),r=Tn.angle(e,n)-i;return r<=-Math.PI?r+Tn.PI_TIMES_2:r>Math.PI?r-Tn.PI_TIMES_2:r},Rn.PI_TIMES_2.get=function(){return 2*Math.PI},Rn.PI_OVER_2.get=function(){return Math.PI/2},Rn.PI_OVER_4.get=function(){return Math.PI/4},Rn.COUNTERCLOCKWISE.get=function(){return at.COUNTERCLOCKWISE},Rn.CLOCKWISE.get=function(){return at.CLOCKWISE},Rn.NONE.get=function(){return at.COLLINEAR},Object.defineProperties(Tn,Rn);var Pn=function t(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new dn,this._seg1=new dn,this._offset0=new dn,this._offset1=new dn,this._side=0,this._hasNarrowConcaveAngle=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._precisionModel=e,this._bufParams=n,this._li=new rt,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===Cn.JOIN_ROUND&&(this._closingSegLengthFactor=t.MAX_CLOSING_SEG_LEN_FACTOR),this.init(i)},Dn={OFFSET_SEGMENT_SEPARATION_FACTOR:{configurable:!0},INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},CURVE_VERTEX_SNAP_DISTANCE_FACTOR:{configurable:!0},MAX_CLOSING_SEG_LEN_FACTOR:{configurable:!0}};Pn.prototype.addNextSegment=function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=at.computeOrientation(this._s0,this._s1,this._s2),i=n===at.CLOCKWISE&&this._side===Se.LEFT||n===at.COUNTERCLOCKWISE&&this._side===Se.RIGHT;0===n?this.addCollinear(e):i?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)},Pn.prototype.addLineEndCap=function(t,e){var n=new dn(t,e),i=new dn;this.computeOffsetSegment(n,Se.LEFT,this._distance,i);var r=new dn;this.computeOffsetSegment(n,Se.RIGHT,this._distance,r);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:this._segList.addPt(i.p1),this.addFilletArc(e,a+Math.PI/2,a-Math.PI/2,at.CLOCKWISE,this._distance),this._segList.addPt(r.p1);break;case Cn.CAP_FLAT:this._segList.addPt(i.p1),this._segList.addPt(r.p1);break;case Cn.CAP_SQUARE:var u=new C;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new C(i.p1.x+u.x,i.p1.y+u.y),c=new C(r.p1.x+u.x,r.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(c)}},Pn.prototype.getCoordinates=function(){return this._segList.getCoordinates()},Pn.prototype.addMitreJoin=function(t,e,n,i){var r=!0,o=null;try{o=k.intersection(e.p0,e.p1,n.p0,n.p1);(i<=0?1:o.distance(t)/Math.abs(i))>this._bufParams.getMitreLimit()&&(r=!1)}catch(t){if(!(t instanceof X))throw t;o=new C(0,0),r=!1}r?this._segList.addPt(o):this.addLimitedMitreJoin(e,n,i,this._bufParams.getMitreLimit())},Pn.prototype.addFilletCorner=function(t,e,n,i,r){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,c=Math.atan2(l,u);i===at.CLOCKWISE?a<=c&&(a+=2*Math.PI):a>=c&&(a-=2*Math.PI),this._segList.addPt(e),this.addFilletArc(t,a,c,i,r),this._segList.addPt(n)},Pn.prototype.addOutsideTurn=function(t,e){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(e&&this._segList.addPt(this._offset0.p1),this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))},Pn.prototype.createSquare=function(t){this._segList.addPt(new C(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new C(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new C(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()},Pn.prototype.addSegments=function(t,e){this._segList.addPts(t,e)},Pn.prototype.addFirstSegment=function(){this._segList.addPt(this._offset1.p0)},Pn.prototype.addLastSegment=function(){this._segList.addPt(this._offset1.p1)},Pn.prototype.initSideSegments=function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)},Pn.prototype.addLimitedMitreJoin=function(t,e,n,i){var r=this._seg0.p1,o=Tn.angle(r,this._seg0.p0),s=Tn.angleBetweenOriented(this._seg0.p0,r,this._seg1.p1)/2,a=Tn.normalize(o+s),u=Tn.normalize(a+Math.PI),l=i*n,c=n-l*Math.abs(Math.sin(s)),p=r.x+l*Math.cos(u),h=r.y+l*Math.sin(u),f=new C(p,h),g=new dn(r,f),d=g.pointAlongOffset(1,c),y=g.pointAlongOffset(1,-c);this._side===Se.LEFT?(this._segList.addPt(d),this._segList.addPt(y)):(this._segList.addPt(y),this._segList.addPt(d))},Pn.prototype.computeOffsetSegment=function(t,e,n,i){var r=e===Se.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=r*n*o/a,l=r*n*s/a;i.p0.x=t.p0.x-l,i.p0.y=t.p0.y+u,i.p1.x=t.p1.x-l,i.p1.y=t.p1.y+u},Pn.prototype.addFilletArc=function(t,e,n,i,r){var o=i===at.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=0,c=new C;l<s;){var p=e+o*l;c.x=t.x+r*Math.cos(p),c.y=t.y+r*Math.sin(p),this._segList.addPt(c),l+=u}},Pn.prototype.addInsideTurn=function(t,e){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*Pn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var n=new C((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(n);var i=new C((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}},Pn.prototype.createCircle=function(t){var e=new C(t.x+this._distance,t.y);this._segList.addPt(e),this.addFilletArc(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()},Pn.prototype.addBevelJoin=function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)},Pn.prototype.init=function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new wn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*Pn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)},Pn.prototype.addCollinear=function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2);this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===Cn.JOIN_BEVEL||this._bufParams.getJoinStyle()===Cn.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addFilletCorner(this._s1,this._offset0.p1,this._offset1.p0,at.CLOCKWISE,this._distance))},Pn.prototype.closeRing=function(){this._segList.closeRing()},Pn.prototype.hasNarrowConcaveAngle=function(){return this._hasNarrowConcaveAngle},Pn.prototype.interfaces_=function(){return[]},Pn.prototype.getClass=function(){return Pn},Dn.OFFSET_SEGMENT_SEPARATION_FACTOR.get=function(){return.001},Dn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return.001},Dn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get=function(){return 1e-6},Dn.MAX_CLOSING_SEG_LEN_FACTOR.get=function(){return 80},Object.defineProperties(Pn,Dn);var Mn=function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e};Mn.prototype.getOffsetCurve=function(t,e){if(this._distance=e,0===e)return null;var n=e<0,i=Math.abs(e),r=this.getSegGen(i);t.length<=1?this.computePointCurve(t[0],r):this.computeOffsetCurve(t,n,r);var o=r.getCoordinates();return n&&Lt.reverse(o),o},Mn.prototype.computeSingleSidedBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{n.addSegments(t,!1);var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()},Mn.prototype.computeRingBufferCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);e===Se.RIGHT&&(i=-i);var r=Ln.simplify(t,i),o=r.length-1;n.initSideSegments(r[o-1],r[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(r[s],a)}n.closeRing()},Mn.prototype.computeLineBufferCurve=function(t,e){var n=this.simplifyTolerance(this._distance),i=Ln.simplify(t,n),r=i.length-1;e.initSideSegments(i[0],i[1],Se.LEFT);for(var o=2;o<=r;o++)e.addNextSegment(i[o],!0);e.addLastSegment(),e.addLineEndCap(i[r-1],i[r]);var s=Ln.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],Se.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()},Mn.prototype.computePointCurve=function(t,e){switch(this._bufParams.getEndCapStyle()){case Cn.CAP_ROUND:e.createCircle(t);break;case Cn.CAP_SQUARE:e.createSquare(t)}},Mn.prototype.getLineCurve=function(t,e){if(this._distance=e,e<0&&!this._bufParams.isSingleSided())return null;if(0===e)return null;var n=Math.abs(e),i=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],i);else if(this._bufParams.isSingleSided()){var r=e<0;this.computeSingleSidedBufferCurve(t,r,i)}else this.computeLineBufferCurve(t,i);return i.getCoordinates()},Mn.prototype.getBufferParameters=function(){return this._bufParams},Mn.prototype.simplifyTolerance=function(t){return t*this._bufParams.getSimplifyFactor()},Mn.prototype.getRingCurve=function(t,e,n){if(this._distance=n,t.length<=2)return this.getLineCurve(t,n);if(0===n)return Mn.copyCoordinates(t);var i=this.getSegGen(n);return this.computeRingBufferCurve(t,e,i),i.getCoordinates()},Mn.prototype.computeOffsetCurve=function(t,e,n){var i=this.simplifyTolerance(this._distance);if(e){var r=Ln.simplify(t,-i),o=r.length-1;n.initSideSegments(r[o],r[o-1],Se.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(r[s],!0)}else{var a=Ln.simplify(t,i),u=a.length-1;n.initSideSegments(a[0],a[1],Se.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()},Mn.prototype.getSegGen=function(t){return new Pn(this._precisionModel,this._bufParams,t)},Mn.prototype.interfaces_=function(){return[]},Mn.prototype.getClass=function(){return Mn},Mn.copyCoordinates=function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new C(t[n]);return e};var An=function(){this._subgraphs=null,this._seg=new dn,this._cga=new at;var t=arguments[0];this._subgraphs=t},Fn={DepthSegment:{configurable:!0}};An.prototype.findStabbedSegments=function(){if(1===arguments.length){for(var t=arguments[0],e=new Nt,n=this._subgraphs.iterator();n.hasNext();){var i=n.next(),r=i.getEnvelope();t.y<r.getMinY()||t.y>r.getMaxY()||this.findStabbedSegments(t,i.getDirectedEdges(),e)}return e}if(3===arguments.length)if(T(arguments[2],xt)&&arguments[0]instanceof C&&arguments[1]instanceof ze)for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),l=0;l<u.length-1;l++){this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse();if(!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x)&&!(this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||at.computeOrientation(this._seg.p0,this._seg.p1,o)===at.RIGHT)){var c=s.getDepth(Se.LEFT);this._seg.p0.equals(u[l])||(c=s.getDepth(Se.RIGHT));var p=new Gn(this._seg,c);a.add(p)}}else if(T(arguments[2],xt)&&arguments[0]instanceof C&&T(arguments[1],xt))for(var h=arguments[0],f=arguments[1],g=arguments[2],d=f.iterator();d.hasNext();){var y=d.next();y.isForward()&&this.findStabbedSegments(h,y,g)}},An.prototype.getDepth=function(t){var e=this.findStabbedSegments(t);if(0===e.size())return 0;return $e.min(e)._leftDepth},An.prototype.interfaces_=function(){return[]},An.prototype.getClass=function(){return An},Fn.DepthSegment.get=function(){return Gn},Object.defineProperties(An,Fn);var Gn=function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new dn(t),this._leftDepth=e};Gn.prototype.compareTo=function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n?n:0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)},Gn.prototype.compareX=function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)},Gn.prototype.toString=function(){return this._upwardSeg.toString()},Gn.prototype.interfaces_=function(){return[E]},Gn.prototype.getClass=function(){return Gn};var qn=function(t,e,n){this.p0=t||null,this.p1=e||null,this.p2=n||null};qn.prototype.area=function(){return qn.area(this.p0,this.p1,this.p2)},qn.prototype.signedArea=function(){return qn.signedArea(this.p0,this.p1,this.p2)},qn.prototype.interpolateZ=function(t){if(null===t)throw new m(\"Supplied point is null.\");return qn.interpolateZ(t,this.p0,this.p1,this.p2)},qn.prototype.longestSideLength=function(){return qn.longestSideLength(this.p0,this.p1,this.p2)},qn.prototype.isAcute=function(){return qn.isAcute(this.p0,this.p1,this.p2)},qn.prototype.circumcentre=function(){return qn.circumcentre(this.p0,this.p1,this.p2)},qn.prototype.area3D=function(){return qn.area3D(this.p0,this.p1,this.p2)},qn.prototype.centroid=function(){return qn.centroid(this.p0,this.p1,this.p2)},qn.prototype.inCentre=function(){return qn.inCentre(this.p0,this.p1,this.p2)},qn.prototype.interfaces_=function(){return[]},qn.prototype.getClass=function(){return qn},qn.area=function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)},qn.signedArea=function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2},qn.det=function(t,e,n,i){return t*i-e*n},qn.interpolateZ=function(t,e,n,i){var r=e.x,o=e.y,s=n.x-r,a=i.x-r,u=n.y-o,l=i.y-o,c=s*l-a*u,p=t.x-r,h=t.y-o,f=(l*p-a*h)/c,g=(-u*p+s*h)/c;return e.z+f*(n.z-e.z)+g*(i.z-e.z)},qn.longestSideLength=function(t,e,n){var i=t.distance(e),r=e.distance(n),o=n.distance(t),s=i;return r>s&&(s=r),o>s&&(s=o),s},qn.isAcute=function(t,e,n){return!!Tn.isAcute(t,e,n)&&(!!Tn.isAcute(e,n,t)&&!!Tn.isAcute(n,t,e))},qn.circumcentre=function(t,e,n){var i=n.x,r=n.y,o=t.x-i,s=t.y-r,a=e.x-i,u=e.y-r,l=2*qn.det(o,s,a,u),c=qn.det(s,o*o+s*s,u,a*a+u*u),p=qn.det(o,o*o+s*s,a,a*a+u*u);return new C(i-c/l,r+p/l)},qn.perpendicularBisector=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=new k(t.x+n/2,t.y+i/2,1),o=new k(t.x-i+n/2,t.y+n+i/2,1);return new k(r,o)},qn.angleBisector=function(t,e,n){var i=e.distance(t),r=i/(i+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new C(t.x+r*o,t.y+r*s)},qn.area3D=function(t,e,n){var i=e.x-t.x,r=e.y-t.y,o=e.z-t.z,s=n.x-t.x,a=n.y-t.y,u=n.z-t.z,l=r*u-o*a,c=o*s-i*u,p=i*a-r*s,h=l*l+c*c+p*p,f=Math.sqrt(h)/2;return f},qn.centroid=function(t,e,n){var i=(t.x+e.x+n.x)/3,r=(t.y+e.y+n.y)/3;return new C(i,r)},qn.inCentre=function(t,e,n){var i=e.distance(n),r=t.distance(n),o=t.distance(e),s=i+r+o,a=(i*t.x+r*e.x+o*n.x)/s,u=(i*t.y+r*e.y+o*n.y)/s;return new C(a,u)};var Bn=function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n};Bn.prototype.addPoint=function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addPolygon=function(t){var e=this._distance,n=Se.LEFT;this._distance<0&&(e=-this._distance,n=Se.RIGHT);var i=t.getExteriorRing(),r=Lt.removeRepeatedPoints(i.getCoordinates());if(this._distance<0&&this.isErodedCompletely(i,this._distance))return null;if(this._distance<=0&&r.length<3)return null;this.addPolygonRing(r,e,n,w.EXTERIOR,w.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Lt.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addPolygonRing(a,e,Se.opposite(n),w.INTERIOR,w.EXTERIOR)}},Bn.prototype.isTriangleErodedCompletely=function(t,e){var n=new qn(t[0],t[1],t[2]),i=n.inCentre();return at.distancePointLine(i,n.p0,n.p1)<Math.abs(e)},Bn.prototype.addLineString=function(t){if(this._distance<=0&&!this._curveBuilder.getBufferParameters().isSingleSided())return null;var e=Lt.removeRepeatedPoints(t.getCoordinates()),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,w.EXTERIOR,w.INTERIOR)},Bn.prototype.addCurve=function(t,e,n){if(null===t||t.length<2)return null;var i=new gn(t,new Pe(0,w.BOUNDARY,e,n));this._curveList.add(i)},Bn.prototype.getCurves=function(){return this.add(this._inputGeom),this._curveList},Bn.prototype.addPolygonRing=function(t,e,n,i,r){if(0===e&&t.length<ee.MINIMUM_VALID_SIZE)return null;var o=i,s=r;t.length>=ee.MINIMUM_VALID_SIZE&&at.isCCW(t)&&(o=r,s=i,n=Se.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)},Bn.prototype.add=function(t){if(t.isEmpty())return null;t instanceof $t?this.addPolygon(t):t instanceof Kt?this.addLineString(t):t instanceof Qt?this.addPoint(t):t instanceof te?this.addCollection(t):t instanceof Xt?this.addCollection(t):t instanceof ne?this.addCollection(t):t instanceof zt&&this.addCollection(t)},Bn.prototype.isErodedCompletely=function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var i=t.getEnvelopeInternal(),r=Math.min(i.getHeight(),i.getWidth());return e<0&&2*Math.abs(e)>r},Bn.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},Bn.prototype.interfaces_=function(){return[]},Bn.prototype.getClass=function(){return Bn};var Vn=function(){};Vn.prototype.locate=function(t){},Vn.prototype.interfaces_=function(){return[]},Vn.prototype.getClass=function(){return Vn};var Un=function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()};Un.prototype.next=function(){if(this._atStart)return this._atStart=!1,Un.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new i;var t=this._parent.getGeometryN(this._index++);return t instanceof zt?(this._subcollectionIterator=new Un(t),this._subcollectionIterator.next()):t},Un.prototype.remove=function(){throw new Error(this.getClass().getName())},Un.prototype.hasNext=function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)},Un.prototype.interfaces_=function(){return[Et]},Un.prototype.getClass=function(){return Un},Un.isAtomic=function(t){return!(t instanceof zt)};var zn=function(){this._geom=null;var t=arguments[0];this._geom=t};zn.prototype.locate=function(t){return zn.locate(t,this._geom)},zn.prototype.interfaces_=function(){return[Vn]},zn.prototype.getClass=function(){return zn},zn.isPointInRing=function(t,e){return!!e.getEnvelopeInternal().intersects(t)&&at.isPointInRing(t,e.getCoordinates())},zn.containsPointInPolygon=function(t,e){if(e.isEmpty())return!1;var n=e.getExteriorRing();if(!zn.isPointInRing(t,n))return!1;for(var i=0;i<e.getNumInteriorRing();i++){var r=e.getInteriorRingN(i);if(zn.isPointInRing(t,r))return!1}return!0},zn.containsPoint=function(t,e){if(e instanceof $t)return zn.containsPointInPolygon(t,e);if(e instanceof zt)for(var n=new Un(e);n.hasNext();){var i=n.next();if(i!==e&&zn.containsPoint(t,i))return!0}return!1},zn.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:zn.containsPoint(t,e)?w.INTERIOR:w.EXTERIOR};var Xn=function(){this._edgeMap=new p,this._edgeList=null,this._ptInAreaLocation=[w.NONE,w.NONE]};Xn.prototype.getNextCW=function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)},Xn.prototype.propagateSideLabels=function(t){for(var e=w.NONE,n=this.iterator();n.hasNext();){var i=n.next().getLabel();i.isArea(t)&&i.getLocation(t,Se.LEFT)!==w.NONE&&(e=i.getLocation(t,Se.LEFT))}if(e===w.NONE)return null;for(var r=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,Se.ON)===w.NONE&&a.setLocation(t,Se.ON,r),a.isArea(t)){var u=a.getLocation(t,Se.LEFT),l=a.getLocation(t,Se.RIGHT);if(l!==w.NONE){if(l!==r)throw new we(\"side location conflict\",s.getCoordinate());u===w.NONE&&et.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),r=u}else et.isTrue(a.getLocation(t,Se.LEFT)===w.NONE,\"found single null side\"),a.setLocation(t,Se.RIGHT,r),a.setLocation(t,Se.LEFT,r)}}},Xn.prototype.getCoordinate=function(){var t=this.iterator();if(!t.hasNext())return null;return t.next().getCoordinate()},Xn.prototype.print=function(t){Y.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Xn.prototype.isAreaLabelsConsistent=function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)},Xn.prototype.checkAreaLabelsConsistent=function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,i=e.get(n).getLabel().getLocation(t,Se.LEFT);et.isTrue(i!==w.NONE,\"Found unlabelled area edge\");for(var r=i,o=this.iterator();o.hasNext();){var s=o.next().getLabel();et.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,Se.LEFT),u=s.getLocation(t,Se.RIGHT);if(a===u)return!1;if(u!==r)return!1;r=a}return!0},Xn.prototype.findIndex=function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++){if(this._edgeList.get(e)===t)return e}return-1},Xn.prototype.iterator=function(){return this.getEdges().iterator()},Xn.prototype.getEdges=function(){return null===this._edgeList&&(this._edgeList=new Nt(this._edgeMap.values())),this._edgeList},Xn.prototype.getLocation=function(t,e,n){return this._ptInAreaLocation[t]===w.NONE&&(this._ptInAreaLocation[t]=zn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]},Xn.prototype.toString=function(){var t=new D;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()},Xn.prototype.computeEdgeEndLabels=function(t){for(var e=this.iterator();e.hasNext();){e.next().computeLabel(t)}},Xn.prototype.computeLabelling=function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var i=n.next().getLabel(),r=0;r<2;r++)i.isLine(r)&&i.getLocation(r)===w.BOUNDARY&&(e[r]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=w.NONE;if(e[u])l=w.EXTERIOR;else{var c=s.getCoordinate();l=this.getLocation(u,c,t)}a.setAllLocationsIfNull(u,l)}},Xn.prototype.getDegree=function(){return this._edgeMap.size()},Xn.prototype.insertEdgeEnd=function(t,e){this._edgeMap.put(t,e),this._edgeList=null},Xn.prototype.interfaces_=function(){return[]},Xn.prototype.getClass=function(){return Xn};var Yn=function(t){function e(){t.call(this),this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,i=0;i<this._resultAreaEdgeList.size();i++){var r=this._resultAreaEdgeList.get(i),o=r.getSym();if(r.getLabel().isArea())switch(null===t&&r.isInResult()&&(t=r),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!r.isInResult())continue;e.setNext(r),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new we(\"no outgoing dirEdge found\",this.getCoordinate());et.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}},e.prototype.insert=function(t){var e=t;this.insertEdgeEnd(e,e)},e.prototype.getRightmostEdge=function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var i=t.get(e-1),r=n.getQuadrant(),o=i.getQuadrant();return Be.isNorthern(r)&&Be.isNorthern(o)?n:Be.isNorthern(r)||Be.isNorthern(o)?0!==n.getDy()?n:0!==i.getDy()?i:(et.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):i},e.prototype.print=function(t){Y.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}},e.prototype.getResultAreaEdges=function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new Nt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList},e.prototype.updateLabelling=function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}},e.prototype.linkAllDirectedEdges=function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var i=this._edgeList.get(n),r=i.getSym();null===e&&(e=r),null!==t&&r.setNext(t),t=i}e.setNext(t)},e.prototype.computeDepths=function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(Se.LEFT),i=t.getDepth(Se.RIGHT),r=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,r)!==i)throw new we(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=o;u<s;u++){var l=this._edgeList.get(u);l.setEdgeDepths(Se.RIGHT,a),a=l.getDepth(Se.LEFT)}return a}},e.prototype.mergeSymLabels=function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}},e.prototype.linkMinimalDirectedEdges=function(t){for(var e=null,n=null,i=this._SCANNING_FOR_INCOMING,r=this._resultAreaEdgeList.size()-1;r>=0;r--){var o=this._resultAreaEdgeList.get(r),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),i){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,i=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),i=this._SCANNING_FOR_INCOMING}}i===this._LINKING_TO_OUTGOING&&(et.isTrue(null!==e,\"found null for first outgoing dirEdge\"),et.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))},e.prototype.getOutgoingDegree=function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();){e.next().isInResult()&&t++}return t}if(1===arguments.length){for(var n=arguments[0],i=0,r=this.iterator();r.hasNext();){r.next().getEdgeRing()===n&&i++}return i}},e.prototype.getLabel=function(){return this._label},e.prototype.findCoveredLineEdges=function(){for(var t=w.NONE,e=this.iterator();e.hasNext();){var n=e.next(),i=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=w.INTERIOR;break}if(i.isInResult()){t=w.EXTERIOR;break}}}if(t===w.NONE)return null;for(var r=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(r===w.INTERIOR):(s.isInResult()&&(r=w.EXTERIOR),a.isInResult()&&(r=w.INTERIOR))}},e.prototype.computeLabelling=function(e){t.prototype.computeLabelling.call(this,e),this._label=new Pe(w.NONE);for(var n=this.iterator();n.hasNext();)for(var i=n.next().getEdge().getLabel(),r=0;r<2;r++){var o=i.getLocation(r);o!==w.INTERIOR&&o!==w.BOUNDARY||this._label.setLocation(r,w.INTERIOR)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xn),kn=function(t){function e(){t.apply(this,arguments)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.createNode=function(t){return new Ge(t,new Yn)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Xe),jn=function t(){this._pts=null,this._orientation=null;var e=arguments[0];this._pts=e,this._orientation=t.orientation(e)};jn.prototype.compareTo=function(t){var e=t;return jn.compareOriented(this._pts,this._orientation,e._pts,e._orientation)},jn.prototype.interfaces_=function(){return[E]},jn.prototype.getClass=function(){return jn},jn.orientation=function(t){return 1===Lt.increasingDirection(t)},jn.compareOriented=function(t,e,n,i){for(var r=e?1:-1,o=i?1:-1,s=e?t.length:-1,a=i?n.length:-1,u=e?0:t.length-1,l=i?0:n.length-1;;){var c=t[u].compareTo(n[l]);if(0!==c)return c;var p=(u+=r)===s,h=(l+=o)===a;if(p&&!h)return-1;if(!p&&h)return 1;if(p&&h)return 0}};var Hn=function(){this._edges=new Nt,this._ocaMap=new p};Hn.prototype.print=function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var i=n.getCoordinates(),r=0;r<i.length;r++)r>0&&t.print(\",\"),t.print(i[r].x+\" \"+i[r].y);t.println(\")\")}t.print(\")  \")},Hn.prototype.addAll=function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())},Hn.prototype.findEdgeIndex=function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1},Hn.prototype.iterator=function(){return this._edges.iterator()},Hn.prototype.getEdges=function(){return this._edges},Hn.prototype.get=function(t){return this._edges.get(t)},Hn.prototype.findEqualEdge=function(t){var e=new jn(t.getCoordinates());return this._ocaMap.get(e)},Hn.prototype.add=function(t){this._edges.add(t);var e=new jn(t.getCoordinates());this._ocaMap.put(e,t)},Hn.prototype.interfaces_=function(){return[]},Hn.prototype.getClass=function(){return Hn};var Wn=function(){};Wn.prototype.processIntersections=function(t,e,n,i){},Wn.prototype.isDone=function(){},Wn.prototype.interfaces_=function(){return[]},Wn.prototype.getClass=function(){return Wn};var Kn=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t};Kn.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(Kn.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.size()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},Kn.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},Kn.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},Kn.prototype.getLineIntersector=function(){return this._li},Kn.prototype.hasProperIntersection=function(){return this._hasProper},Kn.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))},Kn.prototype.hasIntersection=function(){return this._hasIntersection},Kn.prototype.isDone=function(){return!1},Kn.prototype.hasInteriorIntersection=function(){return this._hasInterior},Kn.prototype.interfaces_=function(){return[Wn]},Kn.prototype.getClass=function(){return Kn},Kn.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var Jn=function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new C(t),this.segmentIndex=e,this.dist=n};Jn.prototype.getSegmentIndex=function(){return this.segmentIndex},Jn.prototype.getCoordinate=function(){return this.coord},Jn.prototype.print=function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)},Jn.prototype.compareTo=function(t){var e=t;return this.compare(e.segmentIndex,e.dist)},Jn.prototype.isEndPoint=function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t},Jn.prototype.toString=function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist},Jn.prototype.getDistance=function(){return this.dist},Jn.prototype.compare=function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0},Jn.prototype.interfaces_=function(){return[E]},Jn.prototype.getClass=function(){return Jn};var Qn=function(){this._nodeMap=new p,this.edge=null;var t=arguments[0];this.edge=t};Qn.prototype.print=function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();){e.next().print(t)}},Qn.prototype.iterator=function(){return this._nodeMap.values().iterator()},Qn.prototype.addSplitEdges=function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var i=e.next(),r=this.createSplitEdge(n,i);t.add(r),n=i}},Qn.prototype.addEndpoints=function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)},Qn.prototype.createSplitEdge=function(t,e){var n=e.segmentIndex-t.segmentIndex+2,i=this.edge.pts[e.segmentIndex],r=e.dist>0||!e.coord.equals2D(i);r||n--;var o=new Array(n).fill(null),s=0;o[s++]=new C(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return r&&(o[s]=e.coord),new ni(o,new Pe(this.edge._label))},Qn.prototype.add=function(t,e,n){var i=new Jn(t,e,n),r=this._nodeMap.get(i);return null!==r?r:(this._nodeMap.put(i,i),i)},Qn.prototype.isIntersection=function(t){for(var e=this.iterator();e.hasNext();){if(e.next().coord.equals(t))return!0}return!1},Qn.prototype.interfaces_=function(){return[]},Qn.prototype.getClass=function(){return Qn};var Zn=function(){};Zn.prototype.getChainStartIndices=function(t){var e=0,n=new Nt;n.add(new M(e));do{var i=this.findChainEnd(t,e);n.add(new M(i)),e=i}while(e<t.length-1);return Zn.toIntArray(n)},Zn.prototype.findChainEnd=function(t,e){for(var n=Be.quadrant(t[e],t[e+1]),i=e+1;i<t.length;){if(Be.quadrant(t[i-1],t[i])!==n)break;i++}return i-1},Zn.prototype.interfaces_=function(){return[]},Zn.prototype.getClass=function(){return Zn},Zn.toIntArray=function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e};var $n=function(){this.e=null,this.pts=null,this.startIndex=null,this.env1=new j,this.env2=new j;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new Zn;this.startIndex=e.getChainStartIndices(this.pts)};$n.prototype.getCoordinates=function(){return this.pts},$n.prototype.getMaxX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n},$n.prototype.getMinX=function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n},$n.prototype.computeIntersectsForChain=function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],i=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],i)}else if(6===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5],c=this.pts[r],p=this.pts[o],h=s.pts[a],f=s.pts[u];if(o-r==1&&u-a==1)return l.addIntersections(this.e,r,s.e,a),null;if(this.env1.init(c,p),this.env2.init(h,f),!this.env1.intersects(this.env2))return null;var g=Math.trunc((r+o)/2),d=Math.trunc((a+u)/2);r<g&&(a<d&&this.computeIntersectsForChain(r,g,s,a,d,l),d<u&&this.computeIntersectsForChain(r,g,s,d,u,l)),g<o&&(a<d&&this.computeIntersectsForChain(g,o,s,a,d,l),d<u&&this.computeIntersectsForChain(g,o,s,d,u,l))}},$n.prototype.getStartIndexes=function(){return this.startIndex},$n.prototype.computeIntersects=function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var i=0;i<t.startIndex.length-1;i++)this.computeIntersectsForChain(n,t,i,e)},$n.prototype.interfaces_=function(){return[]},$n.prototype.getClass=function(){return $n};var ti=function t(){this._depth=Array(2).fill().map(function(){return Array(3)});for(var e=0;e<2;e++)for(var n=0;n<3;n++)this._depth[e][n]=t.NULL_VALUE},ei={NULL_VALUE:{configurable:!0}};ti.prototype.getDepth=function(t,e){return this._depth[t][e]},ti.prototype.setDepth=function(t,e,n){this._depth[t][e]=n},ti.prototype.isNull=function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var e=0;e<3;e++)if(this._depth[t][e]!==ti.NULL_VALUE)return!1;return!0}if(1===arguments.length){var n=arguments[0];return this._depth[n][1]===ti.NULL_VALUE}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._depth[i][r]===ti.NULL_VALUE}},ti.prototype.normalize=function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var i=0;this._depth[t][n]>e&&(i=1),this._depth[t][n]=i}}},ti.prototype.getDelta=function(t){return this._depth[t][Se.RIGHT]-this._depth[t][Se.LEFT]},ti.prototype.getLocation=function(t,e){return this._depth[t][e]<=0?w.EXTERIOR:w.INTERIOR},ti.prototype.toString=function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]},ti.prototype.add=function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<2;e++)for(var n=1;n<3;n++){var i=t.getLocation(e,n);i!==w.EXTERIOR&&i!==w.INTERIOR||(this.isNull(e,n)?this._depth[e][n]=ti.depthAtLocation(i):this._depth[e][n]+=ti.depthAtLocation(i))}else if(3===arguments.length){var r=arguments[0],o=arguments[1];arguments[2]===w.INTERIOR&&this._depth[r][o]++}},ti.prototype.interfaces_=function(){return[]},ti.prototype.getClass=function(){return ti},ti.depthAtLocation=function(t){return t===w.EXTERIOR?0:t===w.INTERIOR?1:ti.NULL_VALUE},ei.NULL_VALUE.get=function(){return-1},Object.defineProperties(ti,ei);var ni=function(t){function e(){if(t.call(this),this.pts=null,this._env=null,this.eiList=new Qn(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ti,this._depthDelta=0,1===arguments.length){var n=arguments[0];e.call(this,n,null)}else if(2===arguments.length){var i=arguments[0],r=arguments[1];this.pts=i,this._label=r}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDepth=function(){return this._depth},e.prototype.getCollapsedEdge=function(){var t=new Array(2).fill(null);t[0]=this.pts[0],t[1]=this.pts[1];return new e(t,Pe.toLineLabel(this._label))},e.prototype.isIsolated=function(){return this._isIsolated},e.prototype.getCoordinates=function(){return this.pts},e.prototype.setIsolated=function(t){this._isIsolated=t},e.prototype.setName=function(t){this._name=t},e.prototype.equals=function(t){if(!(t instanceof e))return!1;var n=t;if(this.pts.length!==n.pts.length)return!1;for(var i=!0,r=!0,o=this.pts.length,s=0;s<this.pts.length;s++)if(this.pts[s].equals2D(n.pts[s])||(i=!1),this.pts[s].equals2D(n.pts[--o])||(r=!1),!i&&!r)return!1;return!0},e.prototype.getCoordinate=function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}},e.prototype.print=function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)},e.prototype.computeIM=function(t){e.updateIM(this._label,t)},e.prototype.isCollapsed=function(){return!!this._label.isArea()&&(3===this.pts.length&&!!this.pts[0].equals(this.pts[2]))},e.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1])},e.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1},e.prototype.getDepthDelta=function(){return this._depthDelta},e.prototype.getNumPoints=function(){return this.pts.length},e.prototype.printReverse=function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")},e.prototype.getMonotoneChainEdge=function(){return null===this._mce&&(this._mce=new $n(this)),this._mce},e.prototype.getEnvelope=function(){if(null===this._env){this._env=new j;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env},e.prototype.addIntersection=function(t,e,n,i){var r=new C(t.getIntersection(i)),o=e,s=t.getEdgeDistance(n,i),a=o+1;if(a<this.pts.length){var u=this.pts[a];r.equals2D(u)&&(o=a,s=0)}this.eiList.add(r,o,s)},e.prototype.toString=function(){var t=new D;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()},e.prototype.isPointwiseEqual=function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0},e.prototype.setDepthDelta=function(t){this._depthDelta=t},e.prototype.getEdgeIntersectionList=function(){return this.eiList},e.prototype.addIntersections=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++)this.addIntersection(t,e,n,i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.updateIM=function(){if(2!==arguments.length)return t.prototype.updateIM.apply(this,arguments);var e=arguments[0],n=arguments[1];n.setAtLeastIfValid(e.getLocation(0,Se.ON),e.getLocation(1,Se.ON),1),e.isArea()&&(n.setAtLeastIfValid(e.getLocation(0,Se.LEFT),e.getLocation(1,Se.LEFT),2),n.setAtLeastIfValid(e.getLocation(0,Se.RIGHT),e.getLocation(1,Se.RIGHT),2))},e}(Fe),ii=function(t){this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Hn,this._bufParams=t||null};ii.prototype.setWorkingPrecisionModel=function(t){this._workingPrecisionModel=t},ii.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip(),n.merge(i);var r=ii.depthDelta(i),o=e.getDepthDelta()+r;e.setDepthDelta(o)}else this._edgeList.add(t),t.setDepthDelta(ii.depthDelta(t.getLabel()))},ii.prototype.buildSubgraphs=function(t,e){for(var n=new Nt,i=t.iterator();i.hasNext();){var r=i.next(),o=r.getRightmostCoordinate(),s=new An(n).getDepth(o);r.computeDepth(s),r.findResultEdges(),n.add(r),e.add(r.getDirectedEdges(),r.getNodes())}},ii.prototype.createSubgraphs=function(t){for(var e=new Nt,n=t.getNodes().iterator();n.hasNext();){var i=n.next();if(!i.isVisited()){var r=new Te;r.create(i),e.add(r)}}return $e.sort(e,$e.reverseOrder()),e},ii.prototype.createEmptyResultGeometry=function(){return this._geomFact.createPolygon()},ii.prototype.getNoder=function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new xn,n=new rt;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kn(n)),e},ii.prototype.buffer=function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var i=new Mn(n,this._bufParams),r=new Bn(t,e,i).getCurves();if(r.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(r,n),this._graph=new Ye(new kn),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new ke(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();if(a.size()<=0)return this.createEmptyResultGeometry();return this._geomFact.buildGeometry(a)},ii.prototype.computeNodedEdges=function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var i=n.getNodedSubstrings().iterator();i.hasNext();){var r=i.next(),o=r.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=r.getData(),a=new ni(r.getCoordinates(),new Pe(s));this.insertUniqueEdge(a)}}},ii.prototype.setNoder=function(t){this._workingNoder=t},ii.prototype.interfaces_=function(){return[]},ii.prototype.getClass=function(){return ii},ii.depthDelta=function(t){var e=t.getLocation(0,Se.LEFT),n=t.getLocation(0,Se.RIGHT);return e===w.INTERIOR&&n===w.EXTERIOR?1:e===w.EXTERIOR&&n===w.INTERIOR?-1:0},ii.convertSegStrings=function(t){for(var e=new _e,n=new Nt;t.hasNext();){var i=t.next(),r=e.createLineString(i.getCoordinates());n.add(r)}return e.buildGeometry(n)};var ri=function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],e=arguments[1];this._noder=t,this._scaleFactor=e,this._offsetX=0,this._offsetY=0,this._isScaled=!this.isIntegerPrecision()}else if(4===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=arguments[3];this._noder=n,this._scaleFactor=i,this._offsetX=r,this._offsetY=o,this._isScaled=!this.isIntegerPrecision()}};ri.prototype.rescale=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],i=0;i<n.length;i++)n[i].x=n[i].x/this._scaleFactor+this._offsetX,n[i].y=n[i].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&Y.out.println(n)}},ri.prototype.scale=function(){if(T(arguments[0],It)){for(var t=arguments[0],e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new gn(this.scale(i.getCoordinates()),i.getData()))}return e}if(arguments[0]instanceof Array){for(var r=arguments[0],o=new Array(r.length).fill(null),s=0;s<r.length;s++)o[s]=new C(Math.round((r[s].x-this._offsetX)*this._scaleFactor),Math.round((r[s].y-this._offsetY)*this._scaleFactor),r[s].z);return Lt.removeRepeatedPoints(o)}},ri.prototype.isIntegerPrecision=function(){return 1===this._scaleFactor},ri.prototype.getNodedSubstrings=function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t},ri.prototype.computeNodes=function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)},ri.prototype.interfaces_=function(){return[In]},ri.prototype.getClass=function(){return ri};var oi=function(){this._li=new rt,this._segStrings=null;var t=arguments[0];this._segStrings=t},si={fact:{configurable:!0}};oi.prototype.checkEndPtVertexIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1].iterator();i.hasNext();)for(var r=i.next().getCoordinates(),o=1;o<r.length-1;o++)if(r[o].equals(n))throw new $(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)},oi.prototype.checkInteriorIntersections=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var i=n.next();this.checkInteriorIntersections(e,i)}else if(2===arguments.length)for(var r=arguments[0],o=arguments[1],s=r.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var l=0;l<a.length-1;l++)this.checkInteriorIntersections(r,u,o,l);else if(4===arguments.length){var c=arguments[0],p=arguments[1],h=arguments[2],f=arguments[3];if(c===h&&p===f)return null;var g=c.getCoordinates()[p],d=c.getCoordinates()[p+1],y=h.getCoordinates()[f],_=h.getCoordinates()[f+1];if(this._li.computeIntersection(g,d,y,_),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,g,d)||this.hasInteriorIntersection(this._li,y,_)))throw new $(\"found non-noded intersection at \"+g+\"-\"+d+\" and \"+y+\"-\"+_)}},oi.prototype.checkValid=function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()},oi.prototype.checkCollapses=function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),i=0;i<n.length-2;i++)this.checkCollapse(n[i],n[i+1],n[i+2])},oi.prototype.hasInteriorIntersection=function(t,e,n){for(var i=0;i<t.getIntersectionNum();i++){var r=t.getIntersection(i);if(!r.equals(e)&&!r.equals(n))return!0}return!1},oi.prototype.checkCollapse=function(t,e,n){if(t.equals(n))throw new $(\"found non-noded collapse at \"+oi.fact.createLineString([t,e,n]))},oi.prototype.interfaces_=function(){return[]},oi.prototype.getClass=function(){return oi},si.fact.get=function(){return new _e},Object.defineProperties(oi,si);var ai=function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new m(\"Scale factor must be non-zero\");1!==e&&(this._pt=new C(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new C,this._p1Scaled=new C),this.initCorners(this._pt)},ui={SAFE_ENV_EXPANSION_FACTOR:{configurable:!0}};ai.prototype.intersectsScaled=function(t,e){var n=Math.min(t.x,e.x),i=Math.max(t.x,e.x),r=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>i||this._maxy<r||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return et.isTrue(!(s&&a),\"Found bad envelope test\"),a},ai.prototype.initCorners=function(t){this._minx=t.x-.5,this._maxx=t.x+.5,this._miny=t.y-.5,this._maxy=t.y+.5,this._corner[0]=new C(this._maxx,this._maxy),this._corner[1]=new C(this._minx,this._maxy),this._corner[2]=new C(this._minx,this._miny),this._corner[3]=new C(this._maxx,this._miny)},ai.prototype.intersects=function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))},ai.prototype.scale=function(t){return Math.round(t*this._scaleFactor)},ai.prototype.getCoordinate=function(){return this._originalPt},ai.prototype.copyScaled=function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)},ai.prototype.getSafeEnvelope=function(){if(null===this._safeEnv){var t=ai.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new j(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv},ai.prototype.intersectsPixelClosure=function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.hasIntersection())))},ai.prototype.intersectsToleranceSquare=function(t,e){var n=!1,i=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),!!this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),!!this._li.isProper()||(this._li.hasIntersection()&&(i=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),!!this._li.isProper()||(!(!n||!i)||(!!t.equals(this._pt)||!!e.equals(this._pt))))))},ai.prototype.addSnappedNode=function(t,e){var n=t.getCoordinate(e),i=t.getCoordinate(e+1);return!!this.intersects(n,i)&&(t.addIntersection(this.getCoordinate(),e),!0)},ai.prototype.interfaces_=function(){return[]},ai.prototype.getClass=function(){return ai},ui.SAFE_ENV_EXPANSION_FACTOR.get=function(){return.75},Object.defineProperties(ai,ui);var li=function(){this.tempEnv1=new j,this.selectedSegment=new dn};li.prototype.select=function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];t.getLineSegment(e,this.selectedSegment),this.select(this.selectedSegment)}},li.prototype.interfaces_=function(){return[]},li.prototype.getClass=function(){return li};var ci=function(){this._index=null;var t=arguments[0];this._index=t},pi={HotPixelSnapAction:{configurable:!0}};ci.prototype.snap=function(){if(1===arguments.length){var t=arguments[0];return this.snap(t,null,-1)}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2],r=e.getSafeEnvelope(),o=new hi(e,n,i);return this._index.query(r,{interfaces_:function(){return[Ke]},visitItem:function(t){t.select(r,o)}}),o.isNodeAdded()}},ci.prototype.interfaces_=function(){return[]},ci.prototype.getClass=function(){return ci},pi.HotPixelSnapAction.get=function(){return hi},Object.defineProperties(ci,pi);var hi=function(t){function e(){t.call(this),this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var e=arguments[0],n=arguments[1],i=arguments[2];this._hotPixel=e,this._parentEdge=n,this._hotPixelVertexIndex=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.isNodeAdded=function(){return this._isNodeAdded},e.prototype.select=function(){if(2!==arguments.length)return t.prototype.select.apply(this,arguments);var e=arguments[0],n=arguments[1],i=e.getContext();if(null!==this._parentEdge&&i===this._parentEdge&&n===this._hotPixelVertexIndex)return null;this._isNodeAdded=this._hotPixel.addSnappedNode(i,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(li),fi=function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new Nt};fi.prototype.processIntersections=function(t,e,n,i){if(t===n&&e===i)return null;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];if(this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)}},fi.prototype.isDone=function(){return!1},fi.prototype.getInteriorIntersections=function(){return this._interiorIntersections},fi.prototype.interfaces_=function(){return[Wn]},fi.prototype.getClass=function(){return fi};var gi=function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new rt,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()};gi.prototype.checkCorrectness=function(t){var e=gn.getNodedSubstrings(t),n=new oi(e);try{n.checkValid()}catch(t){if(!(t instanceof z))throw t;t.printStackTrace()}},gi.prototype.getNodedSubstrings=function(){return gn.getNodedSubstrings(this._nodedSegStrings)},gi.prototype.snapRound=function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)},gi.prototype.findInteriorIntersections=function(t,e){var n=new fi(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()},gi.prototype.computeVertexSnaps=function(){if(T(arguments[0],It))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof gn)for(var n=arguments[0],i=n.getCoordinates(),r=0;r<i.length;r++){var o=new ai(i[r],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,r)&&n.addIntersection(i[r],r)}},gi.prototype.computeNodes=function(t){this._nodedSegStrings=t,this._noder=new xn,this._pointSnapper=new ci(this._noder.getIndex()),this.snapRound(t,this._li)},gi.prototype.computeIntersectionSnaps=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=new ai(n,this._scaleFactor,this._li);this._pointSnapper.snap(i)}},gi.prototype.interfaces_=function(){return[In]},gi.prototype.getClass=function(){return gi};var di=function(){if(this._argGeom=null,this._distance=null,this._bufParams=new Cn,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}},yi={CAP_ROUND:{configurable:!0},CAP_BUTT:{configurable:!0},CAP_FLAT:{configurable:!0},CAP_SQUARE:{configurable:!0},MAX_PRECISION_DIGITS:{configurable:!0}};di.prototype.bufferFixedPrecision=function(t){var e=new ri(new gi(new fe(1)),t.getScale()),n=new ii(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)},di.prototype.bufferReducedPrecision=function(){var t=this;if(0===arguments.length){for(var e=di.MAX_PRECISION_DIGITS;e>=0;e--){try{t.bufferReducedPrecision(e)}catch(e){if(!(e instanceof we))throw e;t._saveException=e}if(null!==t._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],i=di.precisionScaleFactor(this._argGeom,this._distance,n),r=new fe(i);this.bufferFixedPrecision(r)}},di.prototype.computeGeometry=function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===fe.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()},di.prototype.setQuadrantSegments=function(t){this._bufParams.setQuadrantSegments(t)},di.prototype.bufferOriginalPrecision=function(){try{var t=new ii(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof $))throw t;this._saveException=t}},di.prototype.getResultGeometry=function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry},di.prototype.setEndCapStyle=function(t){this._bufParams.setEndCapStyle(t)},di.prototype.interfaces_=function(){return[]},di.prototype.getClass=function(){return di},di.bufferOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new di(t).getResultGeometry(e)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var n=arguments[0],i=arguments[1],r=arguments[2],o=new di(n);o.setQuadrantSegments(r);return o.getResultGeometry(i)}if(arguments[2]instanceof Cn&&arguments[0]instanceof ct&&\"number\"==typeof arguments[1]){var s=arguments[0],a=arguments[1],u=arguments[2];return new di(s,u).getResultGeometry(a)}}else if(4===arguments.length){var l=arguments[0],c=arguments[1],p=arguments[2],h=arguments[3],f=new di(l);f.setQuadrantSegments(p),f.setEndCapStyle(h);return f.getResultGeometry(c)}},di.precisionScaleFactor=function(t,e,n){var i=t.getEnvelopeInternal(),r=R.max(Math.abs(i.getMaxX()),Math.abs(i.getMaxY()),Math.abs(i.getMinX()),Math.abs(i.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(r)/Math.log(10)+1);return Math.pow(10,o)},yi.CAP_ROUND.get=function(){return Cn.CAP_ROUND},yi.CAP_BUTT.get=function(){return Cn.CAP_FLAT},yi.CAP_FLAT.get=function(){return Cn.CAP_FLAT},yi.CAP_SQUARE.get=function(){return Cn.CAP_SQUARE},yi.MAX_PRECISION_DIGITS.get=function(){return 12},Object.defineProperties(di,yi);var _i=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};_i.prototype.getCoordinates=function(){return this._pt},_i.prototype.getCoordinate=function(t){return this._pt[t]},_i.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},_i.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},_i.prototype.getDistance=function(){return this._distance},_i.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},_i.prototype.interfaces_=function(){return[]},_i.prototype.getClass=function(){return _i};var mi=function(){};mi.prototype.interfaces_=function(){return[]},mi.prototype.getClass=function(){return mi},mi.computeDistance=function(){if(arguments[2]instanceof _i&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=t.getCoordinates(),r=new dn,o=0;o<i.length-1;o++){r.setCoordinates(i[o],i[o+1]);var s=r.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof _i&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];mi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)mi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof _i&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)mi.computeDistance(p,h,f);else if(p instanceof $t)mi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);mi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof _i&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var vi=function(t){this._maxPtDist=new _i,this._inputGeom=t||null},Ii={MaxPointDistanceFilter:{configurable:!0},MaxMidpointDistanceFilter:{configurable:!0}};vi.prototype.computeMaxMidpointDistance=function(t){var e=new xi(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.computeMaxVertexDistance=function(t){var e=new Ei(this._inputGeom);t.apply(e),this._maxPtDist.setMaximum(e.getMaxPointDistance())},vi.prototype.findDistance=function(t){return this.computeMaxVertexDistance(t),this.computeMaxMidpointDistance(t),this._maxPtDist.getDistance()},vi.prototype.getDistancePoints=function(){return this._maxPtDist},vi.prototype.interfaces_=function(){return[]},vi.prototype.getClass=function(){return vi},Ii.MaxPointDistanceFilter.get=function(){return Ei},Ii.MaxMidpointDistanceFilter.get=function(){return xi},Object.defineProperties(vi,Ii);var Ei=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};Ei.prototype.filter=function(t){this._minPtDist.initialize(),mi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ei.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ei.prototype.interfaces_=function(){return[ft]},Ei.prototype.getClass=function(){return Ei};var xi=function(t){this._maxPtDist=new _i,this._minPtDist=new _i,this._geom=t||null};xi.prototype.filter=function(t,e){if(0===e)return null;var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=new C((n.x+i.x)/2,(n.y+i.y)/2);this._minPtDist.initialize(),mi.computeDistance(this._geom,r,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},xi.prototype.isDone=function(){return!1},xi.prototype.isGeometryChanged=function(){return!1},xi.prototype.getMaxPointDistance=function(){return this._maxPtDist},xi.prototype.interfaces_=function(){return[Ut]},xi.prototype.getClass=function(){return xi};var Ni=function(t){this._comps=t||null};Ni.prototype.filter=function(t){t instanceof $t&&this._comps.add(t)},Ni.prototype.interfaces_=function(){return[Vt]},Ni.prototype.getClass=function(){return Ni},Ni.getPolygons=function(){if(1===arguments.length){var t=arguments[0];return Ni.getPolygons(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof $t?n.add(e):e instanceof zt&&e.apply(new Ni(n)),n}};var Ci=function(){if(this._lines=null,this._isForcedToLineString=!1,1===arguments.length){var t=arguments[0];this._lines=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._lines=e,this._isForcedToLineString=n}};Ci.prototype.filter=function(t){if(this._isForcedToLineString&&t instanceof ee){var e=t.getFactory().createLineString(t.getCoordinateSequence());return this._lines.add(e),null}t instanceof Kt&&this._lines.add(t)},Ci.prototype.setForceToLineString=function(t){this._isForcedToLineString=t},Ci.prototype.interfaces_=function(){return[lt]},Ci.prototype.getClass=function(){return Ci},Ci.getGeometry=function(){if(1===arguments.length){var t=arguments[0];return t.getFactory().buildGeometry(Ci.getLines(t))}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().buildGeometry(Ci.getLines(e,n))}},Ci.getLines=function(){if(1===arguments.length){var t=arguments[0];return Ci.getLines(t,!1)}if(2===arguments.length){if(T(arguments[0],It)&&T(arguments[1],It)){for(var e=arguments[0],n=arguments[1],i=e.iterator();i.hasNext();){var r=i.next();Ci.getLines(r,n)}return n}if(arguments[0]instanceof ct&&\"boolean\"==typeof arguments[1]){var o=arguments[0],s=arguments[1],a=new Nt;return o.apply(new Ci(a,s)),a}if(arguments[0]instanceof ct&&T(arguments[1],It)){var u=arguments[0],l=arguments[1];return u instanceof Kt?l.add(u):u.apply(new Ci(l)),l}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&T(arguments[0],It)&&T(arguments[1],It)){for(var c=arguments[0],p=arguments[1],h=arguments[2],f=c.iterator();f.hasNext();){var g=f.next();Ci.getLines(g,p,h)}return p}if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof ct&&T(arguments[1],It)){var d=arguments[0],y=arguments[1],_=arguments[2];return d.apply(new Ci(y,_)),y}}};var Si=function(){if(this._boundaryRule=gt.OGC_SFS_BOUNDARY_RULE,this._isIn=null,this._numBoundaries=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];if(null===t)throw new m(\"Rule must be non-null\");this._boundaryRule=t}};Si.prototype.locateInternal=function(){if(arguments[0]instanceof C&&arguments[1]instanceof $t){var t=arguments[0],e=arguments[1];if(e.isEmpty())return w.EXTERIOR;var n=e.getExteriorRing(),i=this.locateInPolygonRing(t,n);if(i===w.EXTERIOR)return w.EXTERIOR;if(i===w.BOUNDARY)return w.BOUNDARY;for(var r=0;r<e.getNumInteriorRing();r++){var o=e.getInteriorRingN(r),s=this.locateInPolygonRing(t,o);if(s===w.INTERIOR)return w.EXTERIOR;if(s===w.BOUNDARY)return w.BOUNDARY}return w.INTERIOR}if(arguments[0]instanceof C&&arguments[1]instanceof Kt){var a=arguments[0],u=arguments[1];if(!u.getEnvelopeInternal().intersects(a))return w.EXTERIOR;var l=u.getCoordinates();return u.isClosed()||!a.equals(l[0])&&!a.equals(l[l.length-1])?at.isOnLine(a,l)?w.INTERIOR:w.EXTERIOR:w.BOUNDARY}if(arguments[0]instanceof C&&arguments[1]instanceof Qt){var c=arguments[0];return arguments[1].getCoordinate().equals2D(c)?w.INTERIOR:w.EXTERIOR}},Si.prototype.locateInPolygonRing=function(t,e){return e.getEnvelopeInternal().intersects(t)?at.locatePointInRing(t,e.getCoordinates()):w.EXTERIOR},Si.prototype.intersects=function(t,e){return this.locate(t,e)!==w.EXTERIOR},Si.prototype.updateLocationInfo=function(t){t===w.INTERIOR&&(this._isIn=!0),t===w.BOUNDARY&&this._numBoundaries++},Si.prototype.computeLocation=function(t,e){if(e instanceof Qt&&this.updateLocationInfo(this.locateInternal(t,e)),e instanceof Kt)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof $t)this.updateLocationInfo(this.locateInternal(t,e));else if(e instanceof Xt)for(var n=e,i=0;i<n.getNumGeometries();i++){var r=n.getGeometryN(i);this.updateLocationInfo(this.locateInternal(t,r))}else if(e instanceof ne)for(var o=e,s=0;s<o.getNumGeometries();s++){var a=o.getGeometryN(s);this.updateLocationInfo(this.locateInternal(t,a))}else if(e instanceof zt)for(var u=new Un(e);u.hasNext();){var l=u.next();l!==e&&this.computeLocation(t,l)}},Si.prototype.locate=function(t,e){return e.isEmpty()?w.EXTERIOR:e instanceof Kt?this.locateInternal(t,e):e instanceof $t?this.locateInternal(t,e):(this._isIn=!1,this._numBoundaries=0,this.computeLocation(t,e),this._boundaryRule.isInBoundary(this._numBoundaries)?w.BOUNDARY:this._numBoundaries>0||this._isIn?w.INTERIOR:w.EXTERIOR)},Si.prototype.interfaces_=function(){return[]},Si.prototype.getClass=function(){return Si};var Li=function t(){if(this._component=null,this._segIndex=null,this._pt=null,2===arguments.length){var e=arguments[0],n=arguments[1];t.call(this,e,t.INSIDE_AREA,n)}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._component=i,this._segIndex=r,this._pt=o}},bi={INSIDE_AREA:{configurable:!0}};Li.prototype.isInsideArea=function(){return this._segIndex===Li.INSIDE_AREA},Li.prototype.getCoordinate=function(){return this._pt},Li.prototype.getGeometryComponent=function(){return this._component},Li.prototype.getSegmentIndex=function(){return this._segIndex},Li.prototype.interfaces_=function(){return[]},Li.prototype.getClass=function(){return Li},bi.INSIDE_AREA.get=function(){return-1},Object.defineProperties(Li,bi);var wi=function(t){this._pts=t||null};wi.prototype.filter=function(t){t instanceof Qt&&this._pts.add(t)},wi.prototype.interfaces_=function(){return[Vt]},wi.prototype.getClass=function(){return wi},wi.getPoints=function(){if(1===arguments.length){var t=arguments[0];return t instanceof Qt?$e.singletonList(t):wi.getPoints(t,new Nt)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e instanceof Qt?n.add(e):e instanceof zt&&e.apply(new wi(n)),n}};var Oi=function(){this._locations=null;var t=arguments[0];this._locations=t};Oi.prototype.filter=function(t){(t instanceof Qt||t instanceof Kt||t instanceof $t)&&this._locations.add(new Li(t,0,t.getCoordinate()))},Oi.prototype.interfaces_=function(){return[Vt]},Oi.prototype.getClass=function(){return Oi},Oi.getLocations=function(t){var e=new Nt;return t.apply(new Oi(e)),e};var Ti=function(){if(this._geom=null,this._terminateDistance=0,this._ptLocator=new Si,this._minDistanceLocation=null,this._minDistance=v.MAX_VALUE,2===arguments.length){var t=arguments[0],e=arguments[1];this._geom=[t,e],this._terminateDistance=0}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._geom=new Array(2).fill(null),this._geom[0]=n,this._geom[1]=i,this._terminateDistance=r}};Ti.prototype.computeContainmentDistance=function(){if(0===arguments.length){var t=new Array(2).fill(null);if(this.computeContainmentDistance(0,t),this._minDistance<=this._terminateDistance)return null;this.computeContainmentDistance(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=1-e,r=Ni.getPolygons(this._geom[e]);if(r.size()>0){var o=Oi.getLocations(this._geom[i]);if(this.computeContainmentDistance(o,r,n),this._minDistance<=this._terminateDistance)return this._minDistanceLocation[i]=n[0],this._minDistanceLocation[e]=n[1],null}}else if(3===arguments.length)if(arguments[2]instanceof Array&&T(arguments[0],xt)&&T(arguments[1],xt)){for(var s=arguments[0],a=arguments[1],u=arguments[2],l=0;l<s.size();l++)for(var c=s.get(l),p=0;p<a.size();p++)if(this.computeContainmentDistance(c,a.get(p),u),this._minDistance<=this._terminateDistance)return null}else if(arguments[2]instanceof Array&&arguments[0]instanceof Li&&arguments[1]instanceof $t){var h=arguments[0],f=arguments[1],g=arguments[2],d=h.getCoordinate();if(w.EXTERIOR!==this._ptLocator.locate(d,f))return this._minDistance=0,g[0]=h,g[1]=new Li(f,d),null}},Ti.prototype.computeMinDistanceLinesPoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.computeFacetDistance=function(){var t=new Array(2).fill(null),e=Ci.getLines(this._geom[0]),n=Ci.getLines(this._geom[1]),i=wi.getPoints(this._geom[0]),r=wi.getPoints(this._geom[1]);return this.computeMinDistanceLines(e,n,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(e,r,t),this.updateMinDistance(t,!1),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistanceLinesPoints(n,i,t),this.updateMinDistance(t,!0),this._minDistance<=this._terminateDistance?null:(t[0]=null,t[1]=null,this.computeMinDistancePoints(i,r,t),void this.updateMinDistance(t,!1))))},Ti.prototype.nearestLocations=function(){return this.computeMinDistance(),this._minDistanceLocation},Ti.prototype.updateMinDistance=function(t,e){if(null===t[0])return null;e?(this._minDistanceLocation[0]=t[1],this._minDistanceLocation[1]=t[0]):(this._minDistanceLocation[0]=t[0],this._minDistanceLocation[1]=t[1])},Ti.prototype.nearestPoints=function(){this.computeMinDistance();return[this._minDistanceLocation[0].getCoordinate(),this._minDistanceLocation[1].getCoordinate()]},Ti.prototype.computeMinDistance=function(){if(0===arguments.length){if(null!==this._minDistanceLocation)return null;if(this._minDistanceLocation=new Array(2).fill(null),this.computeContainmentDistance(),this._minDistance<=this._terminateDistance)return null;this.computeFacetDistance()}else if(3===arguments.length)if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Qt){var t=arguments[0],e=arguments[1],n=arguments[2];if(t.getEnvelopeInternal().distance(e.getEnvelopeInternal())>this._minDistance)return null;for(var i=t.getCoordinates(),r=e.getCoordinate(),o=0;o<i.length-1;o++){var s=at.distancePointLine(r,i[o],i[o+1]);if(s<this._minDistance){this._minDistance=s;var a=new dn(i[o],i[o+1]).closestPoint(r);n[0]=new Li(t,o,a),n[1]=new Li(e,0,r)}if(this._minDistance<=this._terminateDistance)return null}}else if(arguments[2]instanceof Array&&arguments[0]instanceof Kt&&arguments[1]instanceof Kt){var u=arguments[0],l=arguments[1],c=arguments[2];if(u.getEnvelopeInternal().distance(l.getEnvelopeInternal())>this._minDistance)return null;for(var p=u.getCoordinates(),h=l.getCoordinates(),f=0;f<p.length-1;f++)for(var g=0;g<h.length-1;g++){var d=at.distanceLineLine(p[f],p[f+1],h[g],h[g+1]);if(d<this._minDistance){this._minDistance=d;var y=new dn(p[f],p[f+1]),_=new dn(h[g],h[g+1]),m=y.closestPoints(_);c[0]=new Li(u,f,m[0]),c[1]=new Li(l,g,m[1])}if(this._minDistance<=this._terminateDistance)return null}}},Ti.prototype.computeMinDistancePoints=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o),a=r.getCoordinate().distance(s.getCoordinate());if(a<this._minDistance&&(this._minDistance=a,n[0]=new Li(r,0,r.getCoordinate()),n[1]=new Li(s,0,s.getCoordinate())),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.distance=function(){if(null===this._geom[0]||null===this._geom[1])throw new m(\"null geometries are not supported\");return this._geom[0].isEmpty()||this._geom[1].isEmpty()?0:(this.computeMinDistance(),this._minDistance)},Ti.prototype.computeMinDistanceLines=function(t,e,n){for(var i=0;i<t.size();i++)for(var r=t.get(i),o=0;o<e.size();o++){var s=e.get(o);if(this.computeMinDistance(r,s,n),this._minDistance<=this._terminateDistance)return null}},Ti.prototype.interfaces_=function(){return[]},Ti.prototype.getClass=function(){return Ti},Ti.distance=function(t,e){return new Ti(t,e).distance()},Ti.isWithinDistance=function(t,e,n){return new Ti(t,e,n).distance()<=n},Ti.nearestPoints=function(t,e){return new Ti(t,e).nearestPoints()};var Ri=function(){this._pt=[new C,new C],this._distance=v.NaN,this._isNull=!0};Ri.prototype.getCoordinates=function(){return this._pt},Ri.prototype.getCoordinate=function(t){return this._pt[t]},Ri.prototype.setMinimum=function(){if(1===arguments.length){var t=arguments[0];this.setMinimum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i<this._distance&&this.initialize(e,n,i)}},Ri.prototype.initialize=function(){if(0===arguments.length)this._isNull=!0;else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._pt[0].setCoordinate(t),this._pt[1].setCoordinate(e),this._distance=t.distance(e),this._isNull=!1}else if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2];this._pt[0].setCoordinate(n),this._pt[1].setCoordinate(i),this._distance=r,this._isNull=!1}},Ri.prototype.toString=function(){return Z.toLineString(this._pt[0],this._pt[1])},Ri.prototype.getDistance=function(){return this._distance},Ri.prototype.setMaximum=function(){if(1===arguments.length){var t=arguments[0];this.setMaximum(t._pt[0],t._pt[1])}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this._isNull)return this.initialize(e,n),null;var i=e.distance(n);i>this._distance&&this.initialize(e,n,i)}},Ri.prototype.interfaces_=function(){return[]},Ri.prototype.getClass=function(){return Ri};var Pi=function(){};Pi.prototype.interfaces_=function(){return[]},Pi.prototype.getClass=function(){return Pi},Pi.computeDistance=function(){if(arguments[2]instanceof Ri&&arguments[0]instanceof Kt&&arguments[1]instanceof C)for(var t=arguments[0],e=arguments[1],n=arguments[2],i=new dn,r=t.getCoordinates(),o=0;o<r.length-1;o++){i.setCoordinates(r[o],r[o+1]);var s=i.closestPoint(e);n.setMinimum(s,e)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof $t&&arguments[1]instanceof C){var a=arguments[0],u=arguments[1],l=arguments[2];Pi.computeDistance(a.getExteriorRing(),u,l);for(var c=0;c<a.getNumInteriorRing();c++)Pi.computeDistance(a.getInteriorRingN(c),u,l)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof ct&&arguments[1]instanceof C){var p=arguments[0],h=arguments[1],f=arguments[2];if(p instanceof Kt)Pi.computeDistance(p,h,f);else if(p instanceof $t)Pi.computeDistance(p,h,f);else if(p instanceof zt)for(var g=p,d=0;d<g.getNumGeometries();d++){var y=g.getGeometryN(d);Pi.computeDistance(y,h,f)}else f.setMinimum(p.getCoordinate(),h)}else if(arguments[2]instanceof Ri&&arguments[0]instanceof dn&&arguments[1]instanceof C){var _=arguments[0],m=arguments[1],v=arguments[2],I=_.closestPoint(m);v.setMinimum(I,m)}};var Di=function(){this._g0=null,this._g1=null,this._ptDist=new Ri,this._densifyFrac=0;var t=arguments[0],e=arguments[1];this._g0=t,this._g1=e},Mi={MaxPointDistanceFilter:{configurable:!0},MaxDensifiedByFractionDistanceFilter:{configurable:!0}};Di.prototype.getCoordinates=function(){return this._ptDist.getCoordinates()},Di.prototype.setDensifyFraction=function(t){if(t>1||t<=0)throw new m(\"Fraction is not in range (0.0 - 1.0]\");this._densifyFrac=t},Di.prototype.compute=function(t,e){this.computeOrientedDistance(t,e,this._ptDist),this.computeOrientedDistance(e,t,this._ptDist)},Di.prototype.distance=function(){return this.compute(this._g0,this._g1),this._ptDist.getDistance()},Di.prototype.computeOrientedDistance=function(t,e,n){var i=new Ai(e);if(t.apply(i),n.setMaximum(i.getMaxPointDistance()),this._densifyFrac>0){var r=new Fi(e,this._densifyFrac);t.apply(r),n.setMaximum(r.getMaxPointDistance())}},Di.prototype.orientedDistance=function(){return this.computeOrientedDistance(this._g0,this._g1,this._ptDist),this._ptDist.getDistance()},Di.prototype.interfaces_=function(){return[]},Di.prototype.getClass=function(){return Di},Di.distance=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return new Di(t,e).distance()}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new Di(n,i);return o.setDensifyFraction(r),o.distance()}},Mi.MaxPointDistanceFilter.get=function(){return Ai},Mi.MaxDensifiedByFractionDistanceFilter.get=function(){return Fi},Object.defineProperties(Di,Mi);var Ai=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._euclideanDist=new Pi,this._geom=null;var t=arguments[0];this._geom=t};Ai.prototype.filter=function(t){this._minPtDist.initialize(),Pi.computeDistance(this._geom,t,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)},Ai.prototype.getMaxPointDistance=function(){return this._maxPtDist},Ai.prototype.interfaces_=function(){return[ft]},Ai.prototype.getClass=function(){return Ai};var Fi=function(){this._maxPtDist=new Ri,this._minPtDist=new Ri,this._geom=null,this._numSubSegs=0;var t=arguments[0],e=arguments[1];this._geom=t,this._numSubSegs=Math.trunc(Math.round(1/e))};Fi.prototype.filter=function(t,e){if(0===e)return null;for(var n=t.getCoordinate(e-1),i=t.getCoordinate(e),r=(i.x-n.x)/this._numSubSegs,o=(i.y-n.y)/this._numSubSegs,s=0;s<this._numSubSegs;s++){var a=n.x+s*r,u=n.y+s*o,l=new C(a,u);this._minPtDist.initialize(),Pi.computeDistance(this._geom,l,this._minPtDist),this._maxPtDist.setMaximum(this._minPtDist)}},Fi.prototype.isDone=function(){return!1},Fi.prototype.isGeometryChanged=function(){return!1},Fi.prototype.getMaxPointDistance=function(){return this._maxPtDist},Fi.prototype.interfaces_=function(){return[Ut]},Fi.prototype.getClass=function(){return Fi};var Gi=function(t,e,n){this._minValidDistance=null,this._maxValidDistance=null,this._minDistanceFound=null,this._maxDistanceFound=null,this._isValid=!0,this._errMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._bufDistance=e||null,this._result=n||null},qi={VERBOSE:{configurable:!0},MAX_DISTANCE_DIFF_FRAC:{configurable:!0}};Gi.prototype.checkMaximumDistance=function(t,e,n){var i=new Di(e,t);if(i.setDensifyFraction(.25),this._maxDistanceFound=i.orientedDistance(),this._maxDistanceFound>n){this._isValid=!1;var r=i.getCoordinates();this._errorLocation=r[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too large (\"+this._maxDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\")\"}},Gi.prototype.isValid=function(){var t=Math.abs(this._bufDistance),e=Gi.MAX_DISTANCE_DIFF_FRAC*t;return this._minValidDistance=t-e,this._maxValidDistance=t+e,!(!this._input.isEmpty()&&!this._result.isEmpty())||(this._bufDistance>0?this.checkPositiveValid():this.checkNegativeValid(),Gi.VERBOSE&&Y.out.println(\"Min Dist= \"+this._minDistanceFound+\"  err= \"+(1-this._minDistanceFound/this._bufDistance)+\"  Max Dist= \"+this._maxDistanceFound+\"  err= \"+(this._maxDistanceFound/this._bufDistance-1)),this._isValid)},Gi.prototype.checkNegativeValid=function(){if(!(this._input instanceof $t||this._input instanceof ne||this._input instanceof zt))return null;var t=this.getPolygonLines(this._input);if(this.checkMinimumDistance(t,this._result,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(t,this._result,this._maxValidDistance)},Gi.prototype.getErrorIndicator=function(){return this._errorIndicator},Gi.prototype.checkMinimumDistance=function(t,e,n){var i=new Ti(t,e,n);if(this._minDistanceFound=i.distance(),this._minDistanceFound<n){this._isValid=!1;var r=i.nearestPoints();this._errorLocation=i.nearestPoints()[1],this._errorIndicator=t.getFactory().createLineString(r),this._errMsg=\"Distance between buffer curve and input is too small (\"+this._minDistanceFound+\" at \"+Z.toLineString(r[0],r[1])+\" )\"}},Gi.prototype.checkPositiveValid=function(){var t=this._result.getBoundary();if(this.checkMinimumDistance(this._input,t,this._minValidDistance),!this._isValid)return null;this.checkMaximumDistance(this._input,t,this._maxValidDistance)},Gi.prototype.getErrorLocation=function(){return this._errorLocation},Gi.prototype.getPolygonLines=function(t){for(var e=new Nt,n=new Ci(e),i=Ni.getPolygons(t).iterator();i.hasNext();){i.next().apply(n)}return t.getFactory().buildGeometry(e)},Gi.prototype.getErrorMessage=function(){return this._errMsg},Gi.prototype.interfaces_=function(){return[]},Gi.prototype.getClass=function(){return Gi},qi.VERBOSE.get=function(){return!1},qi.MAX_DISTANCE_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Gi,qi);var Bi=function(t,e,n){this._isValid=!0,this._errorMsg=null,this._errorLocation=null,this._errorIndicator=null,this._input=t||null,this._distance=e||null,this._result=n||null},Vi={VERBOSE:{configurable:!0},MAX_ENV_DIFF_FRAC:{configurable:!0}};Bi.prototype.isValid=function(){return this.checkPolygonal(),this._isValid?(this.checkExpectedEmpty(),this._isValid?(this.checkEnvelope(),this._isValid?(this.checkArea(),this._isValid?(this.checkDistance(),this._isValid):this._isValid):this._isValid):this._isValid):this._isValid},Bi.prototype.checkEnvelope=function(){if(this._distance<0)return null;var t=this._distance*Bi.MAX_ENV_DIFF_FRAC;0===t&&(t=.001);var e=new j(this._input.getEnvelopeInternal());e.expandBy(this._distance);var n=new j(this._result.getEnvelopeInternal());n.expandBy(t),n.contains(e)||(this._isValid=!1,this._errorMsg=\"Buffer envelope is incorrect\",this._errorIndicator=this._input.getFactory().toGeometry(n)),this.report(\"Envelope\")},Bi.prototype.checkDistance=function(){var t=new Gi(this._input,this._distance,this._result);t.isValid()||(this._isValid=!1,this._errorMsg=t.getErrorMessage(),this._errorLocation=t.getErrorLocation(),this._errorIndicator=t.getErrorIndicator()),this.report(\"Distance\")},Bi.prototype.checkArea=function(){var t=this._input.getArea(),e=this._result.getArea();this._distance>0&&t>e&&(this._isValid=!1,this._errorMsg=\"Area of positive buffer is smaller than input\",this._errorIndicator=this._result),this._distance<0&&t<e&&(this._isValid=!1,this._errorMsg=\"Area of negative buffer is larger than input\",this._errorIndicator=this._result),this.report(\"Area\")},Bi.prototype.checkPolygonal=function(){this._result instanceof $t||this._result instanceof ne||(this._isValid=!1),this._errorMsg=\"Result is not polygonal\",this._errorIndicator=this._result,this.report(\"Polygonal\")},Bi.prototype.getErrorIndicator=function(){return this._errorIndicator},Bi.prototype.getErrorLocation=function(){return this._errorLocation},Bi.prototype.checkExpectedEmpty=function(){return this._input.getDimension()>=2?null:this._distance>0?null:(this._result.isEmpty()||(this._isValid=!1,this._errorMsg=\"Result is non-empty\",this._errorIndicator=this._result),void this.report(\"ExpectedEmpty\"))},Bi.prototype.report=function(t){if(!Bi.VERBOSE)return null;Y.out.println(\"Check \"+t+\": \"+(this._isValid?\"passed\":\"FAILED\"))},Bi.prototype.getErrorMessage=function(){return this._errorMsg},Bi.prototype.interfaces_=function(){return[]},Bi.prototype.getClass=function(){return Bi},Bi.isValidMsg=function(t,e,n){var i=new Bi(t,e,n);return i.isValid()?null:i.getErrorMessage()},Bi.isValid=function(t,e,n){return!!new Bi(t,e,n).isValid()},Vi.VERBOSE.get=function(){return!1},Vi.MAX_ENV_DIFF_FRAC.get=function(){return.012},Object.defineProperties(Bi,Vi);var Ui=function(){this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e};Ui.prototype.getCoordinates=function(){return this._pts},Ui.prototype.size=function(){return this._pts.length},Ui.prototype.getCoordinate=function(t){return this._pts[t]},Ui.prototype.isClosed=function(){return this._pts[0].equals(this._pts[this._pts.length-1])},Ui.prototype.getSegmentOctant=function(t){return t===this._pts.length-1?-1:pn.octant(this.getCoordinate(t),this.getCoordinate(t+1))},Ui.prototype.setData=function(t){this._data=t},Ui.prototype.getData=function(){return this._data},Ui.prototype.toString=function(){return Z.toLineString(new ue(this._pts))},Ui.prototype.interfaces_=function(){return[hn]},Ui.prototype.getClass=function(){return Ui};var zi=function(){this._findAllIntersections=!1,this._isCheckEndSegmentsOnly=!1,this._li=null,this._interiorIntersection=null,this._intSegments=null,this._intersections=new Nt,this._intersectionCount=0,this._keepIntersections=!0;var t=arguments[0];this._li=t,this._interiorIntersection=null};zi.prototype.getInteriorIntersection=function(){return this._interiorIntersection},zi.prototype.setCheckEndSegmentsOnly=function(t){this._isCheckEndSegmentsOnly=t},zi.prototype.getIntersectionSegments=function(){return this._intSegments},zi.prototype.count=function(){return this._intersectionCount},zi.prototype.getIntersections=function(){return this._intersections},zi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},zi.prototype.setKeepIntersections=function(t){this._keepIntersections=t},zi.prototype.processIntersections=function(t,e,n,i){if(!this._findAllIntersections&&this.hasIntersection())return null;if(t===n&&e===i)return null;if(this._isCheckEndSegmentsOnly){if(!(this.isEndSegment(t,e)||this.isEndSegment(n,i)))return null}var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()&&(this._intSegments=new Array(4).fill(null),this._intSegments[0]=r,this._intSegments[1]=o,this._intSegments[2]=s,this._intSegments[3]=a,this._interiorIntersection=this._li.getIntersection(0),this._keepIntersections&&this._intersections.add(this._interiorIntersection),this._intersectionCount++)},zi.prototype.isEndSegment=function(t,e){return 0===e||e>=t.size()-2},zi.prototype.hasIntersection=function(){return null!==this._interiorIntersection},zi.prototype.isDone=function(){return!this._findAllIntersections&&null!==this._interiorIntersection},zi.prototype.interfaces_=function(){return[Wn]},zi.prototype.getClass=function(){return zi},zi.createAllIntersectionsFinder=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e},zi.createAnyIntersectionFinder=function(t){return new zi(t)},zi.createIntersectionCounter=function(t){var e=new zi(t);return e.setFindAllIntersections(!0),e.setKeepIntersections(!1),e};var Xi=function(){this._li=new rt,this._segStrings=null,this._findAllIntersections=!1,this._segInt=null,this._isValid=!0;var t=arguments[0];this._segStrings=t};Xi.prototype.execute=function(){if(null!==this._segInt)return null;this.checkInteriorIntersections()},Xi.prototype.getIntersections=function(){return this._segInt.getIntersections()},Xi.prototype.isValid=function(){return this.execute(),this._isValid},Xi.prototype.setFindAllIntersections=function(t){this._findAllIntersections=t},Xi.prototype.checkInteriorIntersections=function(){this._isValid=!0,this._segInt=new zi(this._li),this._segInt.setFindAllIntersections(this._findAllIntersections);var t=new xn;if(t.setSegmentIntersector(this._segInt),t.computeNodes(this._segStrings),this._segInt.hasIntersection())return this._isValid=!1,null},Xi.prototype.checkValid=function(){if(this.execute(),!this._isValid)throw new we(this.getErrorMessage(),this._segInt.getInteriorIntersection())},Xi.prototype.getErrorMessage=function(){if(this._isValid)return\"no intersections found\";var t=this._segInt.getIntersectionSegments();return\"found non-noded intersection between \"+Z.toLineString(t[0],t[1])+\" and \"+Z.toLineString(t[2],t[3])},Xi.prototype.interfaces_=function(){return[]},Xi.prototype.getClass=function(){return Xi},Xi.computeIntersections=function(t){var e=new Xi(t);return e.setFindAllIntersections(!0),e.isValid(),e.getIntersections()};var Yi=function t(){this._nv=null;var e=arguments[0];this._nv=new Xi(t.toSegmentStrings(e))};Yi.prototype.checkValid=function(){this._nv.checkValid()},Yi.prototype.interfaces_=function(){return[]},Yi.prototype.getClass=function(){return Yi},Yi.toSegmentStrings=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next();e.add(new Ui(i.getCoordinates(),i))}return e},Yi.checkValid=function(t){new Yi(t).checkValid()};var ki=function(t){this._mapOp=t};ki.prototype.map=function(t){for(var e=new Nt,n=0;n<t.getNumGeometries();n++){var i=this._mapOp.map(t.getGeometryN(n));i.isEmpty()||e.add(i)}return t.getFactory().createGeometryCollection(_e.toGeometryArray(e))},ki.prototype.interfaces_=function(){return[]},ki.prototype.getClass=function(){return ki},ki.map=function(t,e){return new ki(e).map(t)};var ji=function(){this._op=null,this._geometryFactory=null,this._ptLocator=null,this._lineEdgesList=new Nt,this._resultLineList=new Nt;var t=arguments[0],e=arguments[1],n=arguments[2];this._op=t,this._geometryFactory=e,this._ptLocator=n};ji.prototype.collectLines=function(t){for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next();this.collectLineEdge(n,t,this._lineEdgesList),this.collectBoundaryTouchEdge(n,t,this._lineEdgesList)}},ji.prototype.labelIsolatedLine=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._op.getArgGeometry(e));t.getLabel().setLocation(e,n)},ji.prototype.build=function(t){return this.findCoveredLineEdges(),this.collectLines(t),this.buildLines(t),this._resultLineList},ji.prototype.collectLineEdge=function(t,e,n){var i=t.getLabel(),r=t.getEdge();t.isLineEdge()&&(t.isVisited()||!Lr.isResultOfOp(i,e)||r.isCovered()||(n.add(r),t.setVisitedEdge(!0)))},ji.prototype.findCoveredLineEdges=function(){for(var t=this._op.getGraph().getNodes().iterator();t.hasNext();){t.next().getEdges().findCoveredLineEdges()}for(var e=this._op.getGraph().getEdgeEnds().iterator();e.hasNext();){var n=e.next(),i=n.getEdge();if(n.isLineEdge()&&!i.isCoveredSet()){var r=this._op.isCoveredByA(n.getCoordinate());i.setCovered(r)}}},ji.prototype.labelIsolatedLines=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),i=n.getLabel();n.isIsolated()&&(i.isNull(0)?this.labelIsolatedLine(n,0):this.labelIsolatedLine(n,1))}},ji.prototype.buildLines=function(t){for(var e=this._lineEdgesList.iterator();e.hasNext();){var n=e.next(),i=this._geometryFactory.createLineString(n.getCoordinates());this._resultLineList.add(i),n.setInResult(!0)}},ji.prototype.collectBoundaryTouchEdge=function(t,e,n){var i=t.getLabel();return t.isLineEdge()?null:t.isVisited()?null:t.isInteriorAreaEdge()?null:t.getEdge().isInResult()?null:(et.isTrue(!(t.isInResult()||t.getSym().isInResult())||!t.getEdge().isInResult()),void(Lr.isResultOfOp(i,e)&&e===Lr.INTERSECTION&&(n.add(t.getEdge()),t.setVisitedEdge(!0))))},ji.prototype.interfaces_=function(){return[]},ji.prototype.getClass=function(){return ji};var Hi=function(){this._op=null,this._geometryFactory=null,this._resultPointList=new Nt;var t=arguments[0],e=arguments[1];this._op=t,this._geometryFactory=e};Hi.prototype.filterCoveredNodeToPoint=function(t){var e=t.getCoordinate();if(!this._op.isCoveredByLA(e)){var n=this._geometryFactory.createPoint(e);this._resultPointList.add(n)}},Hi.prototype.extractNonCoveredResultNodes=function(t){for(var e=this._op.getGraph().getNodes().iterator();e.hasNext();){var n=e.next();if(!n.isInResult()&&(!n.isIncidentEdgeInResult()&&(0===n.getEdges().getDegree()||t===Lr.INTERSECTION))){var i=n.getLabel();Lr.isResultOfOp(i,t)&&this.filterCoveredNodeToPoint(n)}}},Hi.prototype.build=function(t){return this.extractNonCoveredResultNodes(t),this._resultPointList},Hi.prototype.interfaces_=function(){return[]},Hi.prototype.getClass=function(){return Hi};var Wi=function(){this._inputGeom=null,this._factory=null,this._pruneEmptyGeometry=!0,this._preserveGeometryCollectionType=!0,this._preserveCollections=!1,this._preserveType=!1};Wi.prototype.transformPoint=function(t,e){return this._factory.createPoint(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformPolygon=function(t,e){var n=!0,i=this.transformLinearRing(t.getExteriorRing(),t);null!==i&&i instanceof ee&&!i.isEmpty()||(n=!1);for(var r=new Nt,o=0;o<t.getNumInteriorRing();o++){var s=this.transformLinearRing(t.getInteriorRingN(o),t);null===s||s.isEmpty()||(s instanceof ee||(n=!1),r.add(s))}if(n)return this._factory.createPolygon(i,r.toArray([]));var a=new Nt;return null!==i&&a.add(i),a.addAll(r),this._factory.buildGeometry(a)},Wi.prototype.createCoordinateSequence=function(t){return this._factory.getCoordinateSequenceFactory().create(t)},Wi.prototype.getInputGeometry=function(){return this._inputGeom},Wi.prototype.transformMultiLineString=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformLineString(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformCoordinates=function(t,e){return this.copy(t)},Wi.prototype.transformLineString=function(t,e){return this._factory.createLineString(this.transformCoordinates(t.getCoordinateSequence(),t))},Wi.prototype.transformMultiPoint=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPoint(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.transformMultiPolygon=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transformPolygon(t.getGeometryN(i),t);null!==r&&(r.isEmpty()||n.add(r))}return this._factory.buildGeometry(n)},Wi.prototype.copy=function(t){return t.copy()},Wi.prototype.transformGeometryCollection=function(t,e){for(var n=new Nt,i=0;i<t.getNumGeometries();i++){var r=this.transform(t.getGeometryN(i));null!==r&&(this._pruneEmptyGeometry&&r.isEmpty()||n.add(r))}return this._preserveGeometryCollectionType?this._factory.createGeometryCollection(_e.toGeometryArray(n)):this._factory.buildGeometry(n)},Wi.prototype.transform=function(t){if(this._inputGeom=t,this._factory=t.getFactory(),t instanceof Qt)return this.transformPoint(t,null);if(t instanceof te)return this.transformMultiPoint(t,null);if(t instanceof ee)return this.transformLinearRing(t,null);if(t instanceof Kt)return this.transformLineString(t,null);if(t instanceof Xt)return this.transformMultiLineString(t,null);if(t instanceof $t)return this.transformPolygon(t,null);if(t instanceof ne)return this.transformMultiPolygon(t,null);if(t instanceof zt)return this.transformGeometryCollection(t,null);throw new m(\"Unknown Geometry subtype: \"+t.getClass().getName())},Wi.prototype.transformLinearRing=function(t,e){var n=this.transformCoordinates(t.getCoordinateSequence(),t);if(null===n)return this._factory.createLinearRing(null);var i=n.size();return i>0&&i<4&&!this._preserveType?this._factory.createLineString(n):this._factory.createLinearRing(n)},Wi.prototype.interfaces_=function(){return[]},Wi.prototype.getClass=function(){return Wi};var Ki=function t(){if(this._snapTolerance=0,this._srcPts=null,this._seg=new dn,this._allowSnappingToSourceVertices=!1,this._isClosed=!1,arguments[0]instanceof Kt&&\"number\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];t.call(this,e.getCoordinates(),n)}else if(arguments[0]instanceof Array&&\"number\"==typeof arguments[1]){var i=arguments[0],r=arguments[1];this._srcPts=i,this._isClosed=t.isClosed(i),this._snapTolerance=r}};Ki.prototype.snapVertices=function(t,e){for(var n=this._isClosed?t.size()-1:t.size(),i=0;i<n;i++){var r=t.get(i),o=this.findSnapForVertex(r,e);null!==o&&(t.set(i,new C(o)),0===i&&this._isClosed&&t.set(t.size()-1,new C(o)))}},Ki.prototype.findSnapForVertex=function(t,e){for(var n=0;n<e.length;n++){if(t.equals2D(e[n]))return null;if(t.distance(e[n])<this._snapTolerance)return e[n]}return null},Ki.prototype.snapTo=function(t){var e=new St(this._srcPts);this.snapVertices(e,t),this.snapSegments(e,t);return e.toCoordinateArray()},Ki.prototype.snapSegments=function(t,e){if(0===e.length)return null;var n=e.length;e[0].equals2D(e[e.length-1])&&(n=e.length-1);for(var i=0;i<n;i++){var r=e[i],o=this.findSegmentIndexToSnap(r,t);o>=0&&t.add(o+1,new C(r),!1)}},Ki.prototype.findSegmentIndexToSnap=function(t,e){for(var n=v.MAX_VALUE,i=-1,r=0;r<e.size()-1;r++){if(this._seg.p0=e.get(r),this._seg.p1=e.get(r+1),this._seg.p0.equals2D(t)||this._seg.p1.equals2D(t)){if(this._allowSnappingToSourceVertices)continue;return-1}var o=this._seg.distance(t);o<this._snapTolerance&&o<n&&(n=o,i=r)}return i},Ki.prototype.setAllowSnappingToSourceVertices=function(t){this._allowSnappingToSourceVertices=t},Ki.prototype.interfaces_=function(){return[]},Ki.prototype.getClass=function(){return Ki},Ki.isClosed=function(t){return!(t.length<=1)&&t[0].equals2D(t[t.length-1])};var Ji=function(t){this._srcGeom=t||null},Qi={SNAP_PRECISION_FACTOR:{configurable:!0}};Ji.prototype.snapTo=function(t,e){var n=this.extractTargetCoordinates(t);return new Zi(e,n).transform(this._srcGeom)},Ji.prototype.snapToSelf=function(t,e){var n=this.extractTargetCoordinates(this._srcGeom),i=new Zi(t,n,!0).transform(this._srcGeom),r=i;return e&&T(r,Zt)&&(r=i.buffer(0)),r},Ji.prototype.computeSnapTolerance=function(t){return this.computeMinimumSegmentLength(t)/10},Ji.prototype.extractTargetCoordinates=function(t){for(var e=new f,n=t.getCoordinates(),i=0;i<n.length;i++)e.add(n[i]);return e.toArray(new Array(0).fill(null))},Ji.prototype.computeMinimumSegmentLength=function(t){for(var e=v.MAX_VALUE,n=0;n<t.length-1;n++){var i=t[n].distance(t[n+1]);i<e&&(e=i)}return e},Ji.prototype.interfaces_=function(){return[]},Ji.prototype.getClass=function(){return Ji},Ji.snap=function(t,e,n){var i=new Array(2).fill(null),r=new Ji(t);i[0]=r.snapTo(e,n);var o=new Ji(e);return i[1]=o.snapTo(i[0],n),i},Ji.computeOverlaySnapTolerance=function(){if(1===arguments.length){var t=arguments[0],e=Ji.computeSizeBasedSnapTolerance(t),n=t.getPrecisionModel();if(n.getType()===fe.FIXED){var i=1/n.getScale()*2/1.415;i>e&&(e=i)}return e}if(2===arguments.length){var r=arguments[0],o=arguments[1];return Math.min(Ji.computeOverlaySnapTolerance(r),Ji.computeOverlaySnapTolerance(o))}},Ji.computeSizeBasedSnapTolerance=function(t){var e=t.getEnvelopeInternal();return Math.min(e.getHeight(),e.getWidth())*Ji.SNAP_PRECISION_FACTOR},Ji.snapToSelf=function(t,e,n){return new Ji(t).snapToSelf(e,n)},Qi.SNAP_PRECISION_FACTOR.get=function(){return 1e-9},Object.defineProperties(Ji,Qi);var Zi=function(t){function e(e,n,i){t.call(this),this._snapTolerance=e||null,this._snapPts=n||null,this._isSelfSnap=void 0!==i&&i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.snapLine=function(t,e){var n=new Ki(t,this._snapTolerance);return n.setAllowSnappingToSourceVertices(this._isSelfSnap),n.snapTo(e)},e.prototype.transformCoordinates=function(t,e){var n=t.toCoordinateArray(),i=this.snapLine(n,this._snapPts);return this._factory.getCoordinateSequenceFactory().create(i)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Wi),$i=function(){this._isFirst=!0,this._commonMantissaBitsCount=53,this._commonBits=0,this._commonSignExp=null};$i.prototype.getCommon=function(){return v.longBitsToDouble(this._commonBits)},$i.prototype.add=function(t){var e=v.doubleToLongBits(t);if(this._isFirst)return this._commonBits=e,this._commonSignExp=$i.signExpBits(this._commonBits),this._isFirst=!1,null;if($i.signExpBits(e)!==this._commonSignExp)return this._commonBits=0,null;this._commonMantissaBitsCount=$i.numCommonMostSigMantissaBits(this._commonBits,e),this._commonBits=$i.zeroLowerBits(this._commonBits,64-(12+this._commonMantissaBitsCount))},$i.prototype.toString=function(){if(1===arguments.length){var t=arguments[0],e=v.longBitsToDouble(t),n=\"0000000000000000000000000000000000000000000000000000000000000000\"+v.toBinaryString(t),i=n.substring(n.length-64);return i.substring(0,1)+\"  \"+i.substring(1,12)+\"(exp) \"+i.substring(12)+\" [ \"+e+\" ]\"}},$i.prototype.interfaces_=function(){return[]},$i.prototype.getClass=function(){return $i},$i.getBit=function(t,e){return 0!=(t&1<<e)?1:0},$i.signExpBits=function(t){return t>>52},$i.zeroLowerBits=function(t,e){return t&~((1<<e)-1)},$i.numCommonMostSigMantissaBits=function(t,e){for(var n=0,i=52;i>=0;i--){if($i.getBit(t,i)!==$i.getBit(e,i))return n;n++}return 52};var tr=function(){this._commonCoord=null,this._ccFilter=new nr},er={CommonCoordinateFilter:{configurable:!0},Translater:{configurable:!0}};tr.prototype.addCommonBits=function(t){var e=new ir(this._commonCoord);t.apply(e),t.geometryChanged()},tr.prototype.removeCommonBits=function(t){if(0===this._commonCoord.x&&0===this._commonCoord.y)return t;var e=new C(this._commonCoord);e.x=-e.x,e.y=-e.y;var n=new ir(e);return t.apply(n),t.geometryChanged(),t},tr.prototype.getCommonCoordinate=function(){return this._commonCoord},tr.prototype.add=function(t){t.apply(this._ccFilter),this._commonCoord=this._ccFilter.getCommonCoordinate()},tr.prototype.interfaces_=function(){return[]},tr.prototype.getClass=function(){return tr},er.CommonCoordinateFilter.get=function(){return nr},er.Translater.get=function(){return ir},Object.defineProperties(tr,er);var nr=function(){this._commonBitsX=new $i,this._commonBitsY=new $i};nr.prototype.filter=function(t){this._commonBitsX.add(t.x),this._commonBitsY.add(t.y)},nr.prototype.getCommonCoordinate=function(){return new C(this._commonBitsX.getCommon(),this._commonBitsY.getCommon())},nr.prototype.interfaces_=function(){return[ft]},nr.prototype.getClass=function(){return nr};var ir=function(){this.trans=null;var t=arguments[0];this.trans=t};ir.prototype.filter=function(t,e){var n=t.getOrdinate(e,0)+this.trans.x,i=t.getOrdinate(e,1)+this.trans.y;t.setOrdinate(e,0,n),t.setOrdinate(e,1,i)},ir.prototype.isDone=function(){return!1},ir.prototype.isGeometryChanged=function(){return!0},ir.prototype.interfaces_=function(){return[Ut]},ir.prototype.getClass=function(){return ir};var rr=function(t,e){this._geom=new Array(2).fill(null),this._snapTolerance=null,this._cbr=null,this._geom[0]=t,this._geom[1]=e,this.computeSnapTolerance()};rr.prototype.selfSnap=function(t){return new Ji(t).snapTo(t,this._snapTolerance)},rr.prototype.removeCommonBits=function(t){this._cbr=new tr,this._cbr.add(t[0]),this._cbr.add(t[1]);var e=new Array(2).fill(null);return e[0]=this._cbr.removeCommonBits(t[0].copy()),e[1]=this._cbr.removeCommonBits(t[1].copy()),e},rr.prototype.prepareResult=function(t){return this._cbr.addCommonBits(t),t},rr.prototype.getResultGeometry=function(t){var e=this.snap(this._geom),n=Lr.overlayOp(e[0],e[1],t);return this.prepareResult(n)},rr.prototype.checkValid=function(t){t.isValid()||Y.out.println(\"Snapped geometry is invalid\")},rr.prototype.computeSnapTolerance=function(){this._snapTolerance=Ji.computeOverlaySnapTolerance(this._geom[0],this._geom[1])},rr.prototype.snap=function(t){var e=this.removeCommonBits(t);return Ji.snap(e[0],e[1],this._snapTolerance)},rr.prototype.interfaces_=function(){return[]},rr.prototype.getClass=function(){return rr},rr.overlayOp=function(t,e,n){return new rr(t,e).getResultGeometry(n)},rr.union=function(t,e){return rr.overlayOp(t,e,Lr.UNION)},rr.intersection=function(t,e){return rr.overlayOp(t,e,Lr.INTERSECTION)},rr.symDifference=function(t,e){return rr.overlayOp(t,e,Lr.SYMDIFFERENCE)},rr.difference=function(t,e){return rr.overlayOp(t,e,Lr.DIFFERENCE)};var or=function(t,e){this._geom=new Array(2).fill(null),this._geom[0]=t,this._geom[1]=e};or.prototype.getResultGeometry=function(t){var e=null,n=!1,i=null;try{e=Lr.overlayOp(this._geom[0],this._geom[1],t);n=!0}catch(t){if(!(t instanceof $))throw t;i=t}if(!n)try{e=rr.overlayOp(this._geom[0],this._geom[1],t)}catch(t){throw t instanceof $?i:t}return e},or.prototype.interfaces_=function(){return[]},or.prototype.getClass=function(){return or},or.overlayOp=function(t,e,n){return new or(t,e).getResultGeometry(n)},or.union=function(t,e){return or.overlayOp(t,e,Lr.UNION)},or.intersection=function(t,e){return or.overlayOp(t,e,Lr.INTERSECTION)},or.symDifference=function(t,e){return or.overlayOp(t,e,Lr.SYMDIFFERENCE)},or.difference=function(t,e){return or.overlayOp(t,e,Lr.DIFFERENCE)};var sr=function(){this.mce=null,this.chainIndex=null;var t=arguments[0],e=arguments[1];this.mce=t,this.chainIndex=e};sr.prototype.computeIntersections=function(t,e){this.mce.computeIntersectsForChain(this.chainIndex,t.mce,t.chainIndex,e)},sr.prototype.interfaces_=function(){return[]},sr.prototype.getClass=function(){return sr};var ar=function t(){if(this._label=null,this._xValue=null,this._eventType=null,this._insertEvent=null,this._deleteEventIndex=null,this._obj=null,2===arguments.length){var e=arguments[0],n=arguments[1];this._eventType=t.DELETE,this._xValue=e,this._insertEvent=n}else if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._eventType=t.INSERT,this._label=i,this._xValue=r,this._obj=o}},ur={INSERT:{configurable:!0},DELETE:{configurable:!0}};ar.prototype.isDelete=function(){return this._eventType===ar.DELETE},ar.prototype.setDeleteEventIndex=function(t){this._deleteEventIndex=t},ar.prototype.getObject=function(){return this._obj},ar.prototype.compareTo=function(t){var e=t;return this._xValue<e._xValue?-1:this._xValue>e._xValue?1:this._eventType<e._eventType?-1:this._eventType>e._eventType?1:0},ar.prototype.getInsertEvent=function(){return this._insertEvent},ar.prototype.isInsert=function(){return this._eventType===ar.INSERT},ar.prototype.isSameLabel=function(t){return null!==this._label&&this._label===t._label},ar.prototype.getDeleteEventIndex=function(){return this._deleteEventIndex},ar.prototype.interfaces_=function(){return[E]},ar.prototype.getClass=function(){return ar},ur.INSERT.get=function(){return 1},ur.DELETE.get=function(){return 2},Object.defineProperties(ar,ur);var lr=function(){};lr.prototype.interfaces_=function(){return[]},lr.prototype.getClass=function(){return lr};var cr=function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._properIntersectionPoint=null,this._li=null,this._includeProper=null,this._recordIsolated=null,this._isSelfIntersection=null,this._numIntersections=0,this.numTests=0,this._bdyNodes=null,this._isDone=!1,this._isDoneWhenProperInt=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._li=t,this._includeProper=e,this._recordIsolated=n};cr.prototype.isTrivialIntersection=function(t,e,n,i){if(t===n&&1===this._li.getIntersectionNum()){if(cr.isAdjacentSegments(e,i))return!0;if(t.isClosed()){var r=t.getNumPoints()-1;if(0===e&&i===r||0===i&&e===r)return!0}}return!1},cr.prototype.getProperIntersectionPoint=function(){return this._properIntersectionPoint},cr.prototype.setIsDoneIfProperInt=function(t){this._isDoneWhenProperInt=t},cr.prototype.hasProperInteriorIntersection=function(){return this._hasProperInterior},cr.prototype.isBoundaryPointInternal=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next().getCoordinate();if(t.isIntersection(i))return!0}return!1},cr.prototype.hasProperIntersection=function(){return this._hasProper},cr.prototype.hasIntersection=function(){return this._hasIntersection},cr.prototype.isDone=function(){return this._isDone},cr.prototype.isBoundaryPoint=function(t,e){return null!==e&&(!!this.isBoundaryPointInternal(t,e[0])||!!this.isBoundaryPointInternal(t,e[1]))},cr.prototype.setBoundaryNodes=function(t,e){this._bdyNodes=new Array(2).fill(null),this._bdyNodes[0]=t,this._bdyNodes[1]=e},cr.prototype.addIntersections=function(t,e,n,i){if(t===n&&e===i)return null;this.numTests++;var r=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[i],a=n.getCoordinates()[i+1];this._li.computeIntersection(r,o,s,a),this._li.hasIntersection()&&(this._recordIsolated&&(t.setIsolated(!1),n.setIsolated(!1)),this._numIntersections++,this.isTrivialIntersection(t,e,n,i)||(this._hasIntersection=!0,!this._includeProper&&this._li.isProper()||(t.addIntersections(this._li,e,0),n.addIntersections(this._li,i,1)),this._li.isProper()&&(this._properIntersectionPoint=this._li.getIntersection(0).copy(),this._hasProper=!0,this._isDoneWhenProperInt&&(this._isDone=!0),this.isBoundaryPoint(this._li,this._bdyNodes)||(this._hasProperInterior=!0))))},cr.prototype.interfaces_=function(){return[]},cr.prototype.getClass=function(){return cr},cr.isAdjacentSegments=function(t,e){return 1===Math.abs(t-e)};var pr=function(t){function e(){t.call(this),this.events=new Nt,this.nOverlaps=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.prepareEvents=function(){$e.sort(this.events);for(var t=0;t<this.events.size();t++){var e=this.events.get(t);e.isDelete()&&e.getInsertEvent().setDeleteEventIndex(t)}},e.prototype.computeIntersections=function(){if(1===arguments.length){var t=arguments[0];this.nOverlaps=0,this.prepareEvents();for(var e=0;e<this.events.size();e++){var n=this.events.get(e);if(n.isInsert()&&this.processOverlaps(e,n.getDeleteEventIndex(),n,t),t.isDone())break}}else if(3===arguments.length)if(arguments[2]instanceof cr&&T(arguments[0],xt)&&T(arguments[1],xt)){var i=arguments[0],r=arguments[1],o=arguments[2];this.addEdges(i,i),this.addEdges(r,r),this.computeIntersections(o)}else if(\"boolean\"==typeof arguments[2]&&T(arguments[0],xt)&&arguments[1]instanceof cr){var s=arguments[0],a=arguments[1];arguments[2]?this.addEdges(s,null):this.addEdges(s),this.computeIntersections(a)}},e.prototype.addEdge=function(t,e){for(var n=t.getMonotoneChainEdge(),i=n.getStartIndexes(),r=0;r<i.length-1;r++){var o=new sr(n,r),s=new ar(e,n.getMinX(r),o);this.events.add(s),this.events.add(new ar(n.getMaxX(r),s))}},e.prototype.processOverlaps=function(t,e,n,i){for(var r=n.getObject(),o=t;o<e;o++){var s=this.events.get(o);if(s.isInsert()){var a=s.getObject();n.isSameLabel(s)||(r.computeIntersections(a,i),this.nOverlaps++)}}},e.prototype.addEdges=function(){if(1===arguments.length)for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.addEdge(e,e)}else if(2===arguments.length)for(var n=arguments[0],i=arguments[1],r=n.iterator();r.hasNext();){var o=r.next();this.addEdge(o,i)}},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(lr),hr=function(){this._min=v.POSITIVE_INFINITY,this._max=v.NEGATIVE_INFINITY},fr={NodeComparator:{configurable:!0}};hr.prototype.getMin=function(){return this._min},hr.prototype.intersects=function(t,e){return!(this._min>e||this._max<t)},hr.prototype.getMax=function(){return this._max},hr.prototype.toString=function(){return Z.toLineString(new C(this._min,0),new C(this._max,0))},hr.prototype.interfaces_=function(){return[]},hr.prototype.getClass=function(){return hr},fr.NodeComparator.get=function(){return gr},Object.defineProperties(hr,fr);var gr=function(){};gr.prototype.compare=function(t,e){var n=t,i=e,r=(n._min+n._max)/2,o=(i._min+i._max)/2;return r<o?-1:r>o?1:0},gr.prototype.interfaces_=function(){return[N]},gr.prototype.getClass=function(){return gr};var dr=function(t){function e(){t.call(this),this._item=null;var e=arguments[0],n=arguments[1],i=arguments[2];this._min=e,this._max=n,this._item=i}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;n.visitItem(this._item)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),yr=function(t){function e(){t.call(this),this._node1=null,this._node2=null;var e=arguments[0],n=arguments[1];this._node1=e,this._node2=n,this.buildExtent(this._node1,this._node2)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.buildExtent=function(t,e){this._min=Math.min(t._min,e._min),this._max=Math.max(t._max,e._max)},e.prototype.query=function(t,e,n){if(!this.intersects(t,e))return null;null!==this._node1&&this._node1.query(t,e,n),null!==this._node2&&this._node2.query(t,e,n)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(hr),_r=function(){this._leaves=new Nt,this._root=null,this._level=0};_r.prototype.buildTree=function(){$e.sort(this._leaves,new hr.NodeComparator);for(var t=this._leaves,e=null,n=new Nt;;){if(this.buildLevel(t,n),1===n.size())return n.get(0);e=t,t=n,n=e}},_r.prototype.insert=function(t,e,n){if(null!==this._root)throw new Error(\"Index cannot be added to once it has been queried\");this._leaves.add(new dr(t,e,n))},_r.prototype.query=function(t,e,n){this.init(),this._root.query(t,e,n)},_r.prototype.buildRoot=function(){if(null!==this._root)return null;this._root=this.buildTree()},_r.prototype.printNode=function(t){Y.out.println(Z.toLineString(new C(t._min,this._level),new C(t._max,this._level)))},_r.prototype.init=function(){if(null!==this._root)return null;this.buildRoot()},_r.prototype.buildLevel=function(t,e){this._level++,e.clear();for(var n=0;n<t.size();n+=2){var i=t.get(n);if(null===(n+1<t.size()?t.get(n):null))e.add(i);else{var r=new yr(t.get(n),t.get(n+1));e.add(r)}}},_r.prototype.interfaces_=function(){return[]},_r.prototype.getClass=function(){return _r};var mr=function(){this._items=new Nt};mr.prototype.visitItem=function(t){this._items.add(t)},mr.prototype.getItems=function(){return this._items},mr.prototype.interfaces_=function(){return[Ke]},mr.prototype.getClass=function(){return mr};var vr=function(){this._index=null;var t=arguments[0];if(!T(t,Zt))throw new m(\"Argument must be Polygonal\");this._index=new xr(t)},Ir={SegmentVisitor:{configurable:!0},IntervalIndexedGeometry:{configurable:!0}};vr.prototype.locate=function(t){var e=new st(t),n=new Er(e);return this._index.query(t.y,t.y,n),e.getLocation()},vr.prototype.interfaces_=function(){return[Vn]},vr.prototype.getClass=function(){return vr},Ir.SegmentVisitor.get=function(){return Er},Ir.IntervalIndexedGeometry.get=function(){return xr},Object.defineProperties(vr,Ir);var Er=function(){this._counter=null;var t=arguments[0];this._counter=t};Er.prototype.visitItem=function(t){var e=t;this._counter.countSegment(e.getCoordinate(0),e.getCoordinate(1))},Er.prototype.interfaces_=function(){return[Ke]},Er.prototype.getClass=function(){return Er};var xr=function(){this._index=new _r;var t=arguments[0];this.init(t)};xr.prototype.init=function(t){for(var e=Ci.getLines(t).iterator();e.hasNext();){var n=e.next().getCoordinates();this.addLine(n)}},xr.prototype.addLine=function(t){for(var e=1;e<t.length;e++){var n=new dn(t[e-1],t[e]),i=Math.min(n.p0.y,n.p1.y),r=Math.max(n.p0.y,n.p1.y);this._index.insert(i,r,n)}},xr.prototype.query=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new mr;return this._index.query(t,e,n),n.getItems()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];this._index.query(i,r,o)}},xr.prototype.interfaces_=function(){return[]},xr.prototype.getClass=function(){return xr};var Nr=function(t){function e(){if(t.call(this),this._parentGeom=null,this._lineEdgeMap=new he,this._boundaryNodeRule=null,this._useBoundaryDeterminationRule=!0,this._argIndex=null,this._boundaryNodes=null,this._hasTooFewPoints=!1,this._invalidPoint=null,this._areaPtLocator=null,this._ptLocator=new Si,2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;this._argIndex=e,this._parentGeom=n,this._boundaryNodeRule=i,null!==n&&this.add(n)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];this._argIndex=r,this._parentGeom=o,this._boundaryNodeRule=s,null!==o&&this.add(o)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertBoundaryPoint=function(t,n){var i=this._nodes.addNode(n).getLabel(),r=1;w.NONE;i.getLocation(t,Se.ON)===w.BOUNDARY&&r++;var o=e.determineBoundary(this._boundaryNodeRule,r);i.setLocation(t,o)},e.prototype.computeSelfNodes=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.computeSelfNodes(t,e,!1)}if(3===arguments.length){var n=arguments[0],i=arguments[1],r=arguments[2],o=new cr(n,!0,!1);o.setIsDoneIfProperInt(r);var s=this.createEdgeSetIntersector(),a=this._parentGeom instanceof ee||this._parentGeom instanceof $t||this._parentGeom instanceof ne,u=i||!a;return s.computeIntersections(this._edges,o,u),this.addSelfIntersectionNodes(this._argIndex),o}},e.prototype.computeSplitEdges=function(t){for(var e=this._edges.iterator();e.hasNext();){e.next().eiList.addSplitEdges(t)}},e.prototype.computeEdgeIntersections=function(t,e,n){var i=new cr(e,n,!0);i.setBoundaryNodes(this.getBoundaryNodes(),t.getBoundaryNodes());return this.createEdgeSetIntersector().computeIntersections(this._edges,t._edges,i),i},e.prototype.getGeometry=function(){return this._parentGeom},e.prototype.getBoundaryNodeRule=function(){return this._boundaryNodeRule},e.prototype.hasTooFewPoints=function(){return this._hasTooFewPoints},e.prototype.addPoint=function(){if(arguments[0]instanceof Qt){var t=arguments[0].getCoordinate();this.insertPoint(this._argIndex,t,w.INTERIOR)}else if(arguments[0]instanceof C){var e=arguments[0];this.insertPoint(this._argIndex,e,w.INTERIOR)}},e.prototype.addPolygon=function(t){this.addPolygonRing(t.getExteriorRing(),w.EXTERIOR,w.INTERIOR);for(var e=0;e<t.getNumInteriorRing();e++){var n=t.getInteriorRingN(e);this.addPolygonRing(n,w.INTERIOR,w.EXTERIOR)}},e.prototype.addEdge=function(t){this.insertEdge(t);var e=t.getCoordinates();this.insertPoint(this._argIndex,e[0],w.BOUNDARY),this.insertPoint(this._argIndex,e[e.length-1],w.BOUNDARY)},e.prototype.addLineString=function(t){var e=Lt.removeRepeatedPoints(t.getCoordinates());if(e.length<2)return this._hasTooFewPoints=!0,this._invalidPoint=e[0],null;var n=new ni(e,new Pe(this._argIndex,w.INTERIOR));this._lineEdgeMap.put(t,n),this.insertEdge(n),et.isTrue(e.length>=2,\"found LineString with single point\"),this.insertBoundaryPoint(this._argIndex,e[0]),this.insertBoundaryPoint(this._argIndex,e[e.length-1])},e.prototype.getInvalidPoint=function(){return this._invalidPoint},e.prototype.getBoundaryPoints=function(){for(var t=this.getBoundaryNodes(),e=new Array(t.size()).fill(null),n=0,i=t.iterator();i.hasNext();){var r=i.next();e[n++]=r.getCoordinate().copy()}return e},e.prototype.getBoundaryNodes=function(){return null===this._boundaryNodes&&(this._boundaryNodes=this._nodes.getBoundaryNodes(this._argIndex)),this._boundaryNodes},e.prototype.addSelfIntersectionNode=function(t,e,n){if(this.isBoundaryNode(t,e))return null;n===w.BOUNDARY&&this._useBoundaryDeterminationRule?this.insertBoundaryPoint(t,e):this.insertPoint(t,e,n)},e.prototype.addPolygonRing=function(t,e,n){if(t.isEmpty())return null;var i=Lt.removeRepeatedPoints(t.getCoordinates());if(i.length<4)return this._hasTooFewPoints=!0,this._invalidPoint=i[0],null;var r=e,o=n;at.isCCW(i)&&(r=n,o=e);var s=new ni(i,new Pe(this._argIndex,w.BOUNDARY,r,o));this._lineEdgeMap.put(t,s),this.insertEdge(s),this.insertPoint(this._argIndex,i[0],w.BOUNDARY)},e.prototype.insertPoint=function(t,e,n){var i=this._nodes.addNode(e),r=i.getLabel();null===r?i._label=new Pe(t,n):r.setLocation(t,n)},e.prototype.createEdgeSetIntersector=function(){return new pr},e.prototype.addSelfIntersectionNodes=function(t){for(var e=this._edges.iterator();e.hasNext();)for(var n=e.next(),i=n.getLabel().getLocation(t),r=n.eiList.iterator();r.hasNext();){var o=r.next();this.addSelfIntersectionNode(t,o.coord,i)}},e.prototype.add=function(){if(1!==arguments.length)return t.prototype.add.apply(this,arguments);var e=arguments[0];if(e.isEmpty())return null;if(e instanceof ne&&(this._useBoundaryDeterminationRule=!1),e instanceof $t)this.addPolygon(e);else if(e instanceof Kt)this.addLineString(e);else if(e instanceof Qt)this.addPoint(e);else if(e instanceof te)this.addCollection(e);else if(e instanceof Xt)this.addCollection(e);else if(e instanceof ne)this.addCollection(e);else{if(!(e instanceof zt))throw new Error(e.getClass().getName());this.addCollection(e)}},e.prototype.addCollection=function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}},e.prototype.locate=function(t){return T(this._parentGeom,Zt)&&this._parentGeom.getNumGeometries()>50?(null===this._areaPtLocator&&(this._areaPtLocator=new vr(this._parentGeom)),this._areaPtLocator.locate(t)):this._ptLocator.locate(t,this._parentGeom)},e.prototype.findEdge=function(){if(1===arguments.length){var e=arguments[0];return this._lineEdgeMap.get(e)}return t.prototype.findEdge.apply(this,arguments)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e.determineBoundary=function(t,e){return t.isInBoundary(e)?w.BOUNDARY:w.INTERIOR},e}(Ye),Cr=function(){if(this._li=new rt,this._resultPrecisionModel=null,this._arg=null,1===arguments.length){var t=arguments[0];this.setComputationPrecision(t.getPrecisionModel()),this._arg=new Array(1).fill(null),this._arg[0]=new Nr(0,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1],i=gt.OGC_SFS_BOUNDARY_RULE;e.getPrecisionModel().compareTo(n.getPrecisionModel())>=0?this.setComputationPrecision(e.getPrecisionModel()):this.setComputationPrecision(n.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,e,i),this._arg[1]=new Nr(1,n,i)}else if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];r.getPrecisionModel().compareTo(o.getPrecisionModel())>=0?this.setComputationPrecision(r.getPrecisionModel()):this.setComputationPrecision(o.getPrecisionModel()),this._arg=new Array(2).fill(null),this._arg[0]=new Nr(0,r,s),this._arg[1]=new Nr(1,o,s)}};Cr.prototype.getArgGeometry=function(t){return this._arg[t].getGeometry()},Cr.prototype.setComputationPrecision=function(t){this._resultPrecisionModel=t,this._li.setPrecisionModel(this._resultPrecisionModel)},Cr.prototype.interfaces_=function(){return[]},Cr.prototype.getClass=function(){return Cr};var Sr=function(){};Sr.prototype.interfaces_=function(){return[]},Sr.prototype.getClass=function(){return Sr},Sr.map=function(){if(arguments[0]instanceof ct&&T(arguments[1],Sr.MapOp)){for(var t=arguments[0],e=arguments[1],n=new Nt,i=0;i<t.getNumGeometries();i++){var r=e.map(t.getGeometryN(i));null!==r&&n.add(r)}return t.getFactory().buildGeometry(n)}if(T(arguments[0],It)&&T(arguments[1],Sr.MapOp)){for(var o=arguments[0],s=arguments[1],a=new Nt,u=o.iterator();u.hasNext();){var l=u.next(),c=s.map(l);null!==c&&a.add(c)}return a}},Sr.MapOp=function(){};var Lr=function(t){function e(){var e=arguments[0],n=arguments[1];t.call(this,e,n),this._ptLocator=new Si,this._geomFact=null,this._resultGeom=null,this._graph=null,this._edgeList=new Hn,this._resultPolyList=new Nt,this._resultLineList=new Nt,this._resultPointList=new Nt,this._graph=new Ye(new kn),this._geomFact=e.getFactory()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.insertUniqueEdge=function(t){var e=this._edgeList.findEqualEdge(t);if(null!==e){var n=e.getLabel(),i=t.getLabel();e.isPointwiseEqual(t)||(i=new Pe(t.getLabel())).flip();var r=e.getDepth();r.isNull()&&r.add(n),r.add(i),n.merge(i)}else this._edgeList.add(t)},e.prototype.getGraph=function(){return this._graph},e.prototype.cancelDuplicateResultEdges=function(){for(var t=this._graph.getEdgeEnds().iterator();t.hasNext();){var e=t.next(),n=e.getSym();e.isInResult()&&n.isInResult()&&(e.setInResult(!1),n.setInResult(!1))}},e.prototype.isCoveredByLA=function(t){return!!this.isCovered(t,this._resultLineList)||!!this.isCovered(t,this._resultPolyList)},e.prototype.computeGeometry=function(t,n,i,r){var o=new Nt;return o.addAll(t),o.addAll(n),o.addAll(i),o.isEmpty()?e.createEmptyResult(r,this._arg[0].getGeometry(),this._arg[1].getGeometry(),this._geomFact):this._geomFact.buildGeometry(o)},e.prototype.mergeSymLabels=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().mergeSymLabels()}},e.prototype.isCovered=function(t,e){for(var n=e.iterator();n.hasNext();){var i=n.next();if(this._ptLocator.locate(t,i)!==w.EXTERIOR)return!0}return!1},e.prototype.replaceCollapsedEdges=function(){for(var t=new Nt,e=this._edgeList.iterator();e.hasNext();){var n=e.next();n.isCollapsed()&&(e.remove(),t.add(n.getCollapsedEdge()))}this._edgeList.addAll(t)},e.prototype.updateNodeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getEdges().getLabel();e.getLabel().merge(n)}},e.prototype.getResultGeometry=function(t){return this.computeOverlay(t),this._resultGeom},e.prototype.insertUniqueEdges=function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this.insertUniqueEdge(n)}},e.prototype.computeOverlay=function(t){this.copyPoints(0),this.copyPoints(1),this._arg[0].computeSelfNodes(this._li,!1),this._arg[1].computeSelfNodes(this._li,!1),this._arg[0].computeEdgeIntersections(this._arg[1],this._li,!0);var e=new Nt;this._arg[0].computeSplitEdges(e),this._arg[1].computeSplitEdges(e),this.insertUniqueEdges(e),this.computeLabelsFromDepths(),this.replaceCollapsedEdges(),Yi.checkValid(this._edgeList.getEdges()),this._graph.addEdges(this._edgeList.getEdges()),this.computeLabelling(),this.labelIncompleteNodes(),this.findResultAreaEdges(t),this.cancelDuplicateResultEdges();var n=new ke(this._geomFact);n.add(this._graph),this._resultPolyList=n.getPolygons();var i=new ji(this,this._geomFact,this._ptLocator);this._resultLineList=i.build(t);var r=new Hi(this,this._geomFact,this._ptLocator);this._resultPointList=r.build(t),this._resultGeom=this.computeGeometry(this._resultPointList,this._resultLineList,this._resultPolyList,t)},e.prototype.labelIncompleteNode=function(t,e){var n=this._ptLocator.locate(t.getCoordinate(),this._arg[e].getGeometry());t.getLabel().setLocation(e,n)},e.prototype.copyPoints=function(t){for(var e=this._arg[t].getNodeIterator();e.hasNext();){var n=e.next();this._graph.addNode(n.getCoordinate()).setLabel(t,n.getLabel().getLocation(t))}},e.prototype.findResultAreaEdges=function(t){for(var n=this._graph.getEdgeEnds().iterator();n.hasNext();){var i=n.next(),r=i.getLabel();r.isArea()&&!i.isInteriorAreaEdge()&&e.isResultOfOp(r.getLocation(0,Se.RIGHT),r.getLocation(1,Se.RIGHT),t)&&i.setInResult(!0)}},e.prototype.computeLabelsFromDepths=function(){for(var t=this._edgeList.iterator();t.hasNext();){var e=t.next(),n=e.getLabel(),i=e.getDepth();if(!i.isNull()){i.normalize();for(var r=0;r<2;r++)n.isNull(r)||!n.isArea()||i.isNull(r)||(0===i.getDelta(r)?n.toLine(r):(et.isTrue(!i.isNull(r,Se.LEFT),\"depth of LEFT side has not been initialized\"),n.setLocation(r,Se.LEFT,i.getLocation(r,Se.LEFT)),et.isTrue(!i.isNull(r,Se.RIGHT),\"depth of RIGHT side has not been initialized\"),n.setLocation(r,Se.RIGHT,i.getLocation(r,Se.RIGHT))))}}},e.prototype.computeLabelling=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){t.next().getEdges().computeLabelling(this._arg)}this.mergeSymLabels(),this.updateNodeLabelling()},e.prototype.labelIncompleteNodes=function(){for(var t=this._graph.getNodes().iterator();t.hasNext();){var e=t.next(),n=e.getLabel();e.isIsolated()&&(n.isNull(0)?this.labelIncompleteNode(e,0):this.labelIncompleteNode(e,1)),e.getEdges().updateLabelling(n)}},e.prototype.isCoveredByA=function(t){return!!this.isCovered(t,this._resultPolyList)},e.prototype.interfaces_=function(){return[]},e.prototype.getClass=function(){return e},e}(Cr);Lr.overlayOp=function(t,e,n){return new Lr(t,e).getResultGeometry(n)},Lr.intersection=function(t,e){if(t.isEmpty()||e.isEmpty())return Lr.createEmptyResult(Lr.INTERSECTION,t,e,t.getFactory());if(t.isGeometryCollection()){var n=e;return ki.map(t,{interfaces_:function(){return[Sr.MapOp]},map:function(t){return t.intersection(n)}})}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.INTERSECTION)},Lr.symDifference=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.SYMDIFFERENCE,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.SYMDIFFERENCE)},Lr.resultDimension=function(t,e,n){var i=e.getDimension(),r=n.getDimension(),o=-1;switch(t){case Lr.INTERSECTION:o=Math.min(i,r);break;case Lr.UNION:o=Math.max(i,r);break;case Lr.DIFFERENCE:o=i;break;case Lr.SYMDIFFERENCE:o=Math.max(i,r)}return o},Lr.createEmptyResult=function(t,e,n,i){var r=null;switch(Lr.resultDimension(t,e,n)){case-1:r=i.createGeometryCollection(new Array(0).fill(null));break;case 0:r=i.createPoint();break;case 1:r=i.createLineString();break;case 2:r=i.createPolygon()}return r},Lr.difference=function(t,e){return t.isEmpty()?Lr.createEmptyResult(Lr.DIFFERENCE,t,e,t.getFactory()):e.isEmpty()?t.copy():(t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.DIFFERENCE))},Lr.isResultOfOp=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=t.getLocation(0),i=t.getLocation(1);return Lr.isResultOfOp(n,i,e)}if(3===arguments.length){var r=arguments[0],o=arguments[1],s=arguments[2];switch(r===w.BOUNDARY&&(r=w.INTERIOR),o===w.BOUNDARY&&(o=w.INTERIOR),s){case Lr.INTERSECTION:return r===w.INTERIOR&&o===w.INTERIOR;case Lr.UNION:return r===w.INTERIOR||o===w.INTERIOR;case Lr.DIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR;case Lr.SYMDIFFERENCE:return r===w.INTERIOR&&o!==w.INTERIOR||r!==w.INTERIOR&&o===w.INTERIOR}return!1}},Lr.INTERSECTION=1,Lr.UNION=2,Lr.DIFFERENCE=3,Lr.SYMDIFFERENCE=4;var br=function(){this._g=null,this._boundaryDistanceTolerance=null,this._linework=null,this._ptLocator=new Si,this._seg=new dn;var t=arguments[0],e=arguments[1];this._g=t,this._boundaryDistanceTolerance=e,this._linework=this.extractLinework(t)};br.prototype.isWithinToleranceOfBoundary=function(t){for(var e=0;e<this._linework.getNumGeometries();e++)for(var n=this._linework.getGeometryN(e).getCoordinateSequence(),i=0;i<n.size()-1;i++){n.getCoordinate(i,this._seg.p0),n.getCoordinate(i+1,this._seg.p1);if(this._seg.distance(t)<=this._boundaryDistanceTolerance)return!0}return!1},br.prototype.getLocation=function(t){return this.isWithinToleranceOfBoundary(t)?w.BOUNDARY:this._ptLocator.locate(t,this._g)},br.prototype.extractLinework=function(t){var e=new wr;t.apply(e);var n=e.getLinework(),i=_e.toLineStringArray(n);return t.getFactory().createMultiLineString(i)},br.prototype.interfaces_=function(){return[]},br.prototype.getClass=function(){return br};var wr=function(){this._linework=null,this._linework=new Nt};wr.prototype.getLinework=function(){return this._linework},wr.prototype.filter=function(t){if(t instanceof $t){var e=t;this._linework.add(e.getExteriorRing());for(var n=0;n<e.getNumInteriorRing();n++)this._linework.add(e.getInteriorRingN(n))}},wr.prototype.interfaces_=function(){return[Vt]},wr.prototype.getClass=function(){return wr};var Or=function(){this._g=null,this._doLeft=!0,this._doRight=!0;var t=arguments[0];this._g=t};Or.prototype.extractPoints=function(t,e,n){for(var i=t.getCoordinates(),r=0;r<i.length-1;r++)this.computeOffsetPoints(i[r],i[r+1],e,n)},Or.prototype.setSidesToGenerate=function(t,e){this._doLeft=t,this._doRight=e},Or.prototype.getPoints=function(t){for(var e=new Nt,n=Ci.getLines(this._g).iterator();n.hasNext();){var i=n.next();this.extractPoints(i,t,e)}return e},Or.prototype.computeOffsetPoints=function(t,e,n,i){var r=e.x-t.x,o=e.y-t.y,s=Math.sqrt(r*r+o*o),a=n*r/s,u=n*o/s,l=(e.x+t.x)/2,c=(e.y+t.y)/2;if(this._doLeft){var p=new C(l-u,c+a);i.add(p)}if(this._doRight){var h=new C(l+u,c-a);i.add(h)}},Or.prototype.interfaces_=function(){return[]},Or.prototype.getClass=function(){return Or};var Tr=function t(){this._geom=null,this._locFinder=null,this._location=new Array(3).fill(null),this._invalidLocation=null,this._boundaryDistanceTolerance=t.TOLERANCE,this._testCoords=new Nt;var e=arguments[0],n=arguments[1],i=arguments[2];this._boundaryDistanceTolerance=t.computeBoundaryDistanceTolerance(e,n),this._geom=[e,n,i],this._locFinder=[new br(this._geom[0],this._boundaryDistanceTolerance),new br(this._geom[1],this._boundaryDistanceTolerance),new br(this._geom[2],this._boundaryDistanceTolerance)]},Rr={TOLERANCE:{configurable:!0}};Tr.prototype.reportResult=function(t,e,n){Y.out.println(\"Overlay result invalid - A:\"+w.toLocationSymbol(e[0])+\" B:\"+w.toLocationSymbol(e[1])+\" expected:\"+(n?\"i\":\"e\")+\" actual:\"+w.toLocationSymbol(e[2]))},Tr.prototype.isValid=function(t){this.addTestPts(this._geom[0]),this.addTestPts(this._geom[1]);var e=this.checkValid(t);return e},Tr.prototype.checkValid=function(){if(1===arguments.length){for(var t=arguments[0],e=0;e<this._testCoords.size();e++){var n=this._testCoords.get(e);if(!this.checkValid(t,n))return this._invalidLocation=n,!1}return!0}if(2===arguments.length){var i=arguments[0],r=arguments[1];return this._location[0]=this._locFinder[0].getLocation(r),this._location[1]=this._locFinder[1].getLocation(r),this._location[2]=this._locFinder[2].getLocation(r),!!Tr.hasLocation(this._location,w.BOUNDARY)||this.isValidResult(i,this._location)}},Tr.prototype.addTestPts=function(t){var e=new Or(t);this._testCoords.addAll(e.getPoints(5*this._boundaryDistanceTolerance))},Tr.prototype.isValidResult=function(t,e){var n=Lr.isResultOfOp(e[0],e[1],t),i=!(n^e[2]===w.INTERIOR);return i||this.reportResult(t,e,n),i},Tr.prototype.getInvalidLocation=function(){return this._invalidLocation},Tr.prototype.interfaces_=function(){return[]},Tr.prototype.getClass=function(){return Tr},Tr.hasLocation=function(t,e){for(var n=0;n<3;n++)if(t[n]===e)return!0;return!1},Tr.computeBoundaryDistanceTolerance=function(t,e){return Math.min(Ji.computeSizeBasedSnapTolerance(t),Ji.computeSizeBasedSnapTolerance(e))},Tr.isValid=function(t,e,n,i){return new Tr(t,e,i).isValid(n)},Rr.TOLERANCE.get=function(){return 1e-6},Object.defineProperties(Tr,Rr);var Pr=function t(e){this._geomFactory=null,this._skipEmpty=!1,this._inputGeoms=null,this._geomFactory=t.extractFactory(e),this._inputGeoms=e};Pr.prototype.extractElements=function(t,e){if(null===t)return null;for(var n=0;n<t.getNumGeometries();n++){var i=t.getGeometryN(n);this._skipEmpty&&i.isEmpty()||e.add(i)}},Pr.prototype.combine=function(){for(var t=new Nt,e=this._inputGeoms.iterator();e.hasNext();){var n=e.next();this.extractElements(n,t)}return 0===t.size()?null!==this._geomFactory?this._geomFactory.createGeometryCollection(null):null:this._geomFactory.buildGeometry(t)},Pr.prototype.interfaces_=function(){return[]},Pr.prototype.getClass=function(){return Pr},Pr.combine=function(){if(1===arguments.length){var t=arguments[0];return new Pr(t).combine()}if(2===arguments.length){var e=arguments[0],n=arguments[1];return new Pr(Pr.createList(e,n)).combine()}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2];return new Pr(Pr.createList(i,r,o)).combine()}},Pr.extractFactory=function(t){return t.isEmpty()?null:t.iterator().next().getFactory()},Pr.createList=function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=new Nt;return n.add(t),n.add(e),n}if(3===arguments.length){var i=arguments[0],r=arguments[1],o=arguments[2],s=new Nt;return s.add(i),s.add(r),s.add(o),s}};var Dr=function(){this._inputPolys=null,this._geomFactory=null;var t=arguments[0];this._inputPolys=t,null===this._inputPolys&&(this._inputPolys=new Nt)},Mr={STRTREE_NODE_CAPACITY:{configurable:!0}};Dr.prototype.reduceToGeometries=function(t){for(var e=new Nt,n=t.iterator();n.hasNext();){var i=n.next(),r=null;T(i,xt)?r=this.unionTree(i):i instanceof ct&&(r=i),e.add(r)}return e},Dr.prototype.extractByEnvelope=function(t,e,n){for(var i=new Nt,r=0;r<e.getNumGeometries();r++){var o=e.getGeometryN(r);o.getEnvelopeInternal().intersects(t)?i.add(o):n.add(o)}return this._geomFactory.buildGeometry(i)},Dr.prototype.unionOptimized=function(t,e){var n=t.getEnvelopeInternal(),i=e.getEnvelopeInternal();if(!n.intersects(i)){return Pr.combine(t,e)}if(t.getNumGeometries()<=1&&e.getNumGeometries()<=1)return this.unionActual(t,e);var r=n.intersection(i);return this.unionUsingEnvelopeIntersection(t,e,r)},Dr.prototype.union=function(){if(null===this._inputPolys)throw new Error(\"union() method cannot be called twice\");if(this._inputPolys.isEmpty())return null;this._geomFactory=this._inputPolys.iterator().next().getFactory();for(var t=new sn(Dr.STRTREE_NODE_CAPACITY),e=this._inputPolys.iterator();e.hasNext();){var n=e.next();t.insert(n.getEnvelopeInternal(),n)}this._inputPolys=null;var i=t.itemsTree();return this.unionTree(i)},Dr.prototype.binaryUnion=function(){if(1===arguments.length){var t=arguments[0];return this.binaryUnion(t,0,t.size())}if(3===arguments.length){var e=arguments[0],n=arguments[1],i=arguments[2];if(i-n<=1){var r=Dr.getGeometry(e,n);return this.unionSafe(r,null)}if(i-n==2)return this.unionSafe(Dr.getGeometry(e,n),Dr.getGeometry(e,n+1));var o=Math.trunc((i+n)/2),s=this.binaryUnion(e,n,o),a=this.binaryUnion(e,o,i);return this.unionSafe(s,a)}},Dr.prototype.repeatedUnion=function(t){for(var e=null,n=t.iterator();n.hasNext();){var i=n.next();e=null===e?i.copy():e.union(i)}return e},Dr.prototype.unionSafe=function(t,e){return null===t&&null===e?null:null===t?e.copy():null===e?t.copy():this.unionOptimized(t,e)},Dr.prototype.unionActual=function(t,e){return Dr.restrictToPolygons(t.union(e))},Dr.prototype.unionTree=function(t){var e=this.reduceToGeometries(t);return this.binaryUnion(e)},Dr.prototype.unionUsingEnvelopeIntersection=function(t,e,n){var i=new Nt,r=this.extractByEnvelope(n,t,i),o=this.extractByEnvelope(n,e,i),s=this.unionActual(r,o);i.add(s);return Pr.combine(i)},Dr.prototype.bufferUnion=function(){if(1===arguments.length){var t=arguments[0];return t.get(0).getFactory().buildGeometry(t).buffer(0)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return e.getFactory().createGeometryCollection([e,n]).buffer(0)}},Dr.prototype.interfaces_=function(){return[]},Dr.prototype.getClass=function(){return Dr},Dr.restrictToPolygons=function(t){if(T(t,Zt))return t;var e=Ni.getPolygons(t);return 1===e.size()?e.get(0):t.getFactory().createMultiPolygon(_e.toPolygonArray(e))},Dr.getGeometry=function(t,e){return e>=t.size()?null:t.get(e)},Dr.union=function(t){return new Dr(t).union()},Mr.STRTREE_NODE_CAPACITY.get=function(){return 4},Object.defineProperties(Dr,Mr);var Ar=function(){};Ar.prototype.interfaces_=function(){return[]},Ar.prototype.getClass=function(){return Ar},Ar.union=function(t,e){if(t.isEmpty()||e.isEmpty()){if(t.isEmpty()&&e.isEmpty())return Lr.createEmptyResult(Lr.UNION,t,e,t.getFactory());if(t.isEmpty())return e.copy();if(e.isEmpty())return t.copy()}return t.checkNotGeometryCollection(t),t.checkNotGeometryCollection(e),or.overlayOp(t,e,Lr.UNION)},t.GeoJSONReader=Ne,t.GeoJSONWriter=Ce,t.OverlayOp=Lr,t.UnionOp=Ar,t.BufferOp=di,Object.defineProperty(t,\"__esModule\",{value:!0})});\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /*@__PURE__*/(function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = /** @type {LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = /** @type {MultiLineString} */ (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = /** @type {Point} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","import {Circle, Fill, Stroke, Style} from 'ol/style';\n\nconst positionBackgroundStyle = new Style({\n  image: new Circle({\n    radius: 10,\n    fill: new Fill({\n      color: '#FFF'\n    })\n  })\n});\n\nconst positionOutside = [\n  positionBackgroundStyle,\n  new Style({\n    image: new Circle({\n      radius: 8,\n      fill: new Fill({\n        color: 'red'\n      })\n    })\n  })\n];\n\nconst positionInside = [\n  positionBackgroundStyle,\n  new Style({\n    image: new Circle({\n      radius: 8,\n      fill: new Fill({\n        color: 'green'\n      })\n    })\n  })\n];\n\nconst shortestLineOutside = [\n  new Style({\n    stroke: new Stroke({\n      color: '#FFF',\n      width: 8,\n      lineDash: [8, 14]\n    })\n  }),\n  new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 4,\n      lineDash: [8, 14]\n    })\n  })\n];\n\n\nexport const track = [\n  new Style({\n    stroke: new Stroke({\n      color: '#FFF',\n      width: 8\n    })\n  }),\n  new Style({\n    stroke: new Stroke({\n      color: '#3399CCFF',\n      width: 4\n    })\n  })\n];\n\nexport const buffer = [\n  new Style({\n    fill: new Fill({\n      color: '#3399CC33'\n    })\n  })\n];\n\nexport function position(feature) {\n  if (feature.get('visible')) {\n    return feature.get('outside') ? positionOutside : positionInside;\n  }\n}\n\nexport function shortestLine(feature) {\n  if (feature.get('visible')) {\n    return feature.get('outside') ? shortestLineOutside : null;\n  }\n}\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","import Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile.js';\nimport TileJSON from 'ol/source/TileJSON.js';\n\nconst mapbox_token = 'pk.eyJ1IjoiZnJlZGoiLCJhIjoiMndGNGNINCJ9.yG14Tih1Vtuge0hsjL0grA';\n\nexport const view = new View({\n  center: [0, 0],\n  zoom: 0\n});\n\nexport const map = new Map({\n  controls: [],\n  layers: [\n    new TileLayer({\n      source: new TileJSON({\n        url: `https://api.mapbox.com/v4/mapbox.outdoors.json?secure&access_token=${mapbox_token}`,\n        crossOrigin: 'anonymous'\n      })\n    })\n  ],\n  loadTilesWhileInteracting: true,\n  view: view\n});\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nexport default bbox;\n","import bbox from '@turf/bbox';\nimport { isObject, point } from '@turf/helpers';\n\n/**\n * Takes a {@link Feature} or {@link FeatureCollection} and returns the absolute center point of all features.\n *\n * @name center\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} a Point feature at the absolute center point of all input features\n * @example\n * var features = turf.featureCollection([\n *   turf.point( [-97.522259, 35.4691]),\n *   turf.point( [-97.502754, 35.463455]),\n *   turf.point( [-97.508269, 35.463245])\n * ]);\n *\n * var center = turf.center(features);\n *\n * //addToMap\n * var addToMap = [features, center]\n * center.properties['marker-size'] = 'large';\n * center.properties['marker-color'] = '#000';\n */\nfunction center(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var properties = options.properties;\n\n    // Input validation\n    if (!geojson) throw new Error('geojson is required');\n\n    var ext = bbox(geojson);\n    var x = (ext[0] + ext[2]) / 2;\n    var y = (ext[1] + ext[3]) / 2;\n    return point([x, y], properties);\n}\n\nexport default center;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nexport default clone;\n","import { coordEach } from '@turf/meta';\nimport { isNumber, isObject } from '@turf/helpers';\nimport clone from '@turf/clone';\n\n/**\n * Converts a WGS84 GeoJSON object into Mercator (EPSG:900913) projection\n *\n * @name toMercator\n * @param {GeoJSON|Position} geojson WGS84 GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-71,41]);\n * var converted = turf.toMercator(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toMercator(geojson, options) {\n    return convert(geojson, 'mercator', options);\n}\n\n/**\n * Converts a Mercator (EPSG:900913) GeoJSON object into WGS84 projection\n *\n * @name toWgs84\n * @param {GeoJSON|Position} geojson Mercator GeoJSON object\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n * @example\n * var pt = turf.point([-7903683.846322424, 5012341.663847514]);\n * var converted = turf.toWgs84(pt);\n *\n * //addToMap\n * var addToMap = [pt, converted];\n */\nfunction toWgs84(geojson, options) {\n    return convert(geojson, 'wgs84', options);\n}\n\n\n/**\n * Converts a GeoJSON coordinates to the defined `projection`\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON Feature or Geometry\n * @param {string} projection defines the projection system to convert the coordinates to\n * @param {Object} [options] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} true/false\n */\nfunction convert(geojson, projection, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var mutate = options.mutate;\n\n    // Validation\n    if (!geojson) throw new Error('geojson is required');\n\n    // Handle Position\n    if (Array.isArray(geojson) && isNumber(geojson[0])) geojson = (projection === 'mercator') ? convertToMercator(geojson) : convertToWgs84(geojson);\n\n    // Handle GeoJSON\n    else {\n        // Handle possible data mutation\n        if (mutate !== true) geojson = clone(geojson);\n\n        coordEach(geojson, function (coord) {\n            var newCoord = (projection === 'mercator') ? convertToMercator(coord) : convertToWgs84(coord);\n            coord[0] = newCoord[0];\n            coord[1] = newCoord[1];\n        });\n    }\n    return geojson;\n}\n\n/**\n * Convert lon/lat values to 900913 x/y.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} lonLat WGS84 point\n * @returns {Array<number>} Mercator [x, y] point\n */\nfunction convertToMercator(lonLat) {\n    var D2R = Math.PI / 180,\n        // 900913 properties\n        A = 6378137.0,\n        MAXEXTENT = 20037508.342789244;\n\n    // compensate longitudes passing the 180th meridian\n    // from https://github.com/proj4js/proj4js/blob/master/lib/common/adjust_lon.js\n    var adjusted = (Math.abs(lonLat[0]) <= 180) ? lonLat[0] : (lonLat[0] - (sign(lonLat[0]) * 360));\n    var xy = [\n        A * adjusted * D2R,\n        A * Math.log(Math.tan((Math.PI * 0.25) + (0.5 * lonLat[1] * D2R)))\n    ];\n\n    // if xy value is beyond maxextent (e.g. poles), return maxextent\n    if (xy[0] > MAXEXTENT) xy[0] = MAXEXTENT;\n    if (xy[0] < -MAXEXTENT) xy[0] = -MAXEXTENT;\n    if (xy[1] > MAXEXTENT) xy[1] = MAXEXTENT;\n    if (xy[1] < -MAXEXTENT) xy[1] = -MAXEXTENT;\n\n    return xy;\n}\n\n/**\n * Convert 900913 x/y values to lon/lat.\n * (from https://github.com/mapbox/sphericalmercator)\n *\n * @private\n * @param {Array<number>} xy Mercator [x, y] point\n * @returns {Array<number>} WGS84 [lon, lat] point\n */\nfunction convertToWgs84(xy) {\n    // 900913 properties.\n    var R2D = 180 / Math.PI;\n    var A = 6378137.0;\n\n    return [\n        (xy[0] * R2D / A),\n        ((Math.PI * 0.5) - 2.0 * Math.atan(Math.exp(-xy[1] / A))) * R2D\n    ];\n}\n\n/**\n * Returns the sign of the input, or zero\n *\n * @private\n * @param {number} x input\n * @returns {number} -1|0|1 output\n */\nfunction sign(x) {\n    return (x < 0) ? -1 : (x > 0) ? 1 : 0;\n}\n\nexport { toMercator, toWgs84 };\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","import center from '@turf/center';\nimport turfBbox from '@turf/bbox';\nimport { BufferOp, GeoJSONReader, GeoJSONWriter } from 'turf-jsts';\nimport { toMercator, toWgs84 } from '@turf/projection';\nimport { featureEach, geomEach } from '@turf/meta';\nimport { geoTransverseMercator } from 'd3-geo';\nimport { earthRadius, feature, featureCollection, lengthToRadians, radiansToLength } from '@turf/helpers';\n\n/**\n * Calculates a buffer for input features for a given radius. Units supported are miles, kilometers, and degrees.\n *\n * When using a negative radius, the resulting geometry may be invalid if\n * it's too small compared to the radius magnitude. If the input is a\n * FeatureCollection, only valid members will be returned in the output\n * FeatureCollection - i.e., the output collection may have fewer members than\n * the input, or even be empty.\n *\n * @name buffer\n * @param {FeatureCollection|Geometry|Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer (negative values are allowed)\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units=\"kilometers\"] any of the options supported by turf units\n * @param {number} [options.steps=64] number of steps\n * @returns {FeatureCollection|Feature<Polygon|MultiPolygon>|undefined} buffered features\n * @example\n * var point = turf.point([-90.548630, 14.616599]);\n * var buffered = turf.buffer(point, 500, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [point, buffered]\n */\nfunction buffer(geojson, radius, options) {\n    // Optional params\n    options = options || {};\n    var units = options.units;\n    var steps = options.steps || 64;\n\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n    if (typeof options !== 'object') throw new Error('options must be an object');\n    if (typeof steps !== 'number') throw new Error('steps must be an number');\n\n    // Allow negative buffers (\"erosion\") or zero-sized buffers (\"repair geometry\")\n    if (radius === undefined) throw new Error('radius is required');\n    if (steps <= 0) throw new Error('steps must be greater than 0');\n\n    // default params\n    steps = steps || 64;\n    units = units || 'kilometers';\n\n    var results = [];\n    switch (geojson.type) {\n    case 'GeometryCollection':\n        geomEach(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    case 'FeatureCollection':\n        featureEach(geojson, function (feature$$1) {\n            var multiBuffered = bufferFeature(feature$$1, radius, units, steps);\n            if (multiBuffered) {\n                featureEach(multiBuffered, function (buffered) {\n                    if (buffered) results.push(buffered);\n                });\n            }\n        });\n        return featureCollection(results);\n    }\n    return bufferFeature(geojson, radius, units, steps);\n}\n\n/**\n * Buffer single Feature/Geometry\n *\n * @private\n * @param {Feature<any>} geojson input to be buffered\n * @param {number} radius distance to draw the buffer\n * @param {string} [units='kilometers'] any of the options supported by turf units\n * @param {number} [steps=64] number of steps\n * @returns {Feature<Polygon|MultiPolygon>} buffered feature\n */\nfunction bufferFeature(geojson, radius, units, steps) {\n    var properties = geojson.properties || {};\n    var geometry = (geojson.type === 'Feature') ? geojson.geometry : geojson;\n\n    // Geometry Types faster than jsts\n    if (geometry.type === 'GeometryCollection') {\n        var results = [];\n        geomEach(geojson, function (geometry) {\n            var buffered = bufferFeature(geometry, radius, units, steps);\n            if (buffered) results.push(buffered);\n        });\n        return featureCollection(results);\n    }\n\n    // Project GeoJSON to Transverse Mercator projection (convert to Meters)\n    var projected;\n    var bbox = turfBbox(geojson);\n    var needsTransverseMercator = bbox[1] > 50 && bbox[3] > 50;\n\n    if (needsTransverseMercator) {\n        projected = {\n            type: geometry.type,\n            coordinates: projectCoords(geometry.coordinates, defineProjection(geometry))\n        };\n    } else {\n        projected = toMercator(geometry);\n    }\n\n    // JSTS buffer operation\n    var reader = new GeoJSONReader();\n    var geom = reader.read(projected);\n    var distance = radiansToLength(lengthToRadians(radius, units), 'meters');\n    var buffered = BufferOp.bufferOp(geom, distance);\n    var writer = new GeoJSONWriter();\n    buffered = writer.write(buffered);\n\n    // Detect if empty geometries\n    if (coordsIsNaN(buffered.coordinates)) return undefined;\n\n    // Unproject coordinates (convert to Degrees)\n    var result;\n    if (needsTransverseMercator) {\n        result = {\n            type: buffered.type,\n            coordinates: unprojectCoords(buffered.coordinates, defineProjection(geometry))\n        };\n    } else {\n        result = toWgs84(buffered);\n    }\n\n    return (result.geometry) ? result : feature(result, properties);\n}\n\n/**\n * Coordinates isNaN\n *\n * @private\n * @param {Array<any>} coords GeoJSON Coordinates\n * @returns {boolean} if NaN exists\n */\nfunction coordsIsNaN(coords) {\n    if (Array.isArray(coords[0])) return coordsIsNaN(coords[0]);\n    return isNaN(coords[0]);\n}\n\n/**\n * Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} projected coordinates\n */\nfunction projectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj(coords);\n    return coords.map(function (coord) {\n        return projectCoords(coord, proj);\n    });\n}\n\n/**\n * Un-Project coordinates to projection\n *\n * @private\n * @param {Array<any>} coords to un-project\n * @param {GeoProjection} proj D3 Geo Projection\n * @returns {Array<any>} un-projected coordinates\n */\nfunction unprojectCoords(coords, proj) {\n    if (typeof coords[0] !== 'object') return proj.invert(coords);\n    return coords.map(function (coord) {\n        return unprojectCoords(coord, proj);\n    });\n}\n\n/**\n * Define Transverse Mercator projection\n *\n * @private\n * @param {Geometry|Feature<any>} geojson Base projection on center of GeoJSON\n * @returns {GeoProjection} D3 Geo Transverse Mercator Projection\n */\nfunction defineProjection(geojson) {\n    var coords = center(geojson).geometry.coordinates.reverse();\n    var rotate = coords.map(function (coord) { return -coord; });\n    return geoTransverseMercator()\n        .center(coords)\n        .rotate(rotate)\n        .scale(earthRadius);\n}\n\nexport default buffer;\n","import GeoJSON from 'ol/format/GeoJSON';\n\nimport buffer from '@turf/buffer';\n\nexport function getBufferCoordinates(geom, projection, distance) {\n  const format = new GeoJSON({\n    featureProjection: projection\n  });\n  const geojsonGeom = format.writeGeometryObject(geom);\n  const bufferFeature = format.readFeature(buffer(geojsonGeom, distance / 1000));\n\n  return bufferFeature.getGeometry().getCoordinates();\n}\n","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /*@__PURE__*/(function (Event) {\n  function GeolocationError(error) {\n    Event.call(this, EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = /*@__PURE__*/(function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","export default class Notifier {\n\n  constructor(actionHandler) {\n\n    Notification.requestPermission().then((result) => {\n      if (result === 'granted') {\n        navigator.serviceWorker.register('service-worker.js').then((registration) => {\n          this.registration = registration;\n        });\n\n      }\n    });\n\n    navigator.serviceWorker.addEventListener('message', (event) => {\n      if (event.data.action) {\n        actionHandler(event.data);\n      }\n    });\n  }\n\n  showNotification(title, options) {\n    if (this.registration) {\n      this.registration.showNotification(title, options);\n    }\n  }\n\n}\n","import Feature from 'ol/Feature';\nimport VectorSource from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport GPX from 'ol/format/GPX';\nimport {LineString, Polygon} from 'ol/geom';\nimport {loadFeaturesXhr} from 'ol/featureloader';\n\nimport * as style from './style';\nimport {map, view} from './map';\nimport {getBufferCoordinates} from './geom';\nimport Monitor from './monitor';\n\n\n/**\n * @type {LineString}\n */\nconst segmentGeometry = new LineString([]);\n\n/**\n * @type {Feature}\n */\nconst segmentFeature = new Feature(segmentGeometry);\nsegmentFeature.setStyle(style.track);\n\n/**\n * @type {Polygon}\n */\nconst bufferGeometry = new Polygon([]);\n\n/**\n * @type {Feature}\n */\nconst bufferFeature = new Feature(bufferGeometry);\nbufferFeature.setStyle(style.buffer);\n\nconst searchParams = new URLSearchParams(location.search);\n\nconst fenceWidth = searchParams.has('width') ? searchParams.get('width') : 75;\n\nconst loader = loadFeaturesXhr(searchParams.get('gpx'), new GPX(), (features, projection) => {\n  for (const feature of features) {\n    const geom = feature.getGeometry();\n    const type = geom.getType();\n    if (type === 'MultiLineString' || type === 'LineString') {\n      geom.transform(projection, view.getProjection());\n      if (geom.getLineString) {\n        // MultiLineString\n        segmentGeometry.setCoordinates(geom.getLineString(0).getCoordinates());\n      } else {\n        segmentGeometry.setCoordinates(geom.getCoordinates());\n      }\n      const polygonCoordinates = getBufferCoordinates(segmentGeometry, view.getProjection(), fenceWidth);\n      bufferGeometry.setCoordinates(polygonCoordinates);\n      view.fit(bufferGeometry);\n    }\n  }\n});\nloader();\n\nmap.setTarget('map');\n\nconst monitor = new Monitor(view, segmentGeometry, fenceWidth);\n\nmap.addLayer(\n  new VectorLayer({\n    source: new VectorSource({\n      features: [\n        segmentFeature, bufferFeature\n      ]\n    }),\n    updateWhileInteracting: true\n  })\n);\nmap.addLayer(\n  new VectorLayer({\n    source: new VectorSource({\n      features: [\n        monitor.positionFeature, monitor.shortestLineFeature\n      ]\n    }),\n    updateWhileInteracting: true\n  })\n);\n\ndocument.querySelector('.start').addEventListener('click', () => {\n  monitor.tracking = true;\n});\n\ndocument.querySelector('.stop').addEventListener('click', () => {\n  monitor.tracking = false;\n});\n","import {distance as coordinateDistance} from 'ol/coordinate';\nimport Geolocation from 'ol/Geolocation';\nimport Feature from 'ol/Feature';\nimport {Point, LineString} from 'ol/geom';\n\nimport * as style from './style';\nimport Notifier from './notification';\n\n\nexport default class Monitor {\n\n  constructor(view, segment, distance) {\n\n    this.segment = segment;\n\n    /**\n     * @type {number}\n     */\n    this.distance = distance;\n\n    this.geolocation = new Geolocation({\n      projection: view.getProjection()\n    });\n\n    this.positionFeature = new Feature(new Point([]));\n    this.positionFeature.setStyle(style.position);\n\n    this.shortestLineFeature = new Feature(new LineString([]));\n    this.shortestLineFeature.setStyle(style.shortestLine);\n\n    this.geolocation.on('change:position', this.onPositionChange.bind(this));\n\n    this.notifier = new Notifier(this.onAction.bind(this));\n\n    /**\n     * @type {number}\n     */\n    this.difference = 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.outside = false;\n\n    /**\n     * @type {boolean}\n     */\n    this.mutted = false;\n  }\n\n  onAction(eventData) {\n    this.mutted = eventData.action === 'mute';\n    this.notify();\n  }\n\n  onPositionChange(event) {\n    const position = event.target.getPosition();\n    // fixme: recenter only if not in viewport\n    //view.setCenter(position);\n    this.positionFeature.getGeometry().setCoordinates(position);\n\n    const closest = this.segment.getClosestPoint(position);\n    this.shortestLineFeature.getGeometry().setCoordinates([position, closest]);\n    const distance = coordinateDistance(closest, position);\n\n    this.difference = distance - this.distance;\n    this.outside = this.difference > 0;\n  }\n\n  notify() {\n    const actions = [];\n    if (this.mutted) {\n      actions.push({\n        action: 'Unmute',\n        title: 'Unmute'\n      });\n    } else {\n      actions.push({\n        action: 'mute',\n        title: 'Mute'\n      });\n    }\n    this.notifier.showNotification('You are lost!', {\n      body: `${Math.round(this.difference)}m away from the track `,\n      image: 'img/lost.jpg',\n      tag: 'outside',\n      renotify: !this.mutted,\n      actions: actions\n    });\n  }\n\n  set outside(value) {\n    if (value) {\n      this.notify();\n    }\n    this.positionFeature.set('outside', value);\n    this.shortestLineFeature.set('outside', value);\n  }\n\n  get tracking() {\n    return this.geolocation.getTracking();\n  }\n\n  set tracking(value) {\n    this.geolocation.setTracking(value);\n    this.positionFeature.set('visible', value);\n    this.shortestLineFeature.set('visible', value);\n  }\n}\n"],"sourceRoot":""}