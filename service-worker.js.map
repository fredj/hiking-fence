{"version":3,"sources":["service-worker.js"],"names":["matchAllWindow","type","includeUncontrolled","self","addEventListener","event","action","clients","matchAll","then","windowClients","windowClient","postMessage","promise","focus","waitUntil"],"mappings":";AAEA,MAAMA,EAAiB,CACrBC,KAAM,SACNC,qBAAqB,GAGvBC,KAAKC,iBAAiB,UAAYC,OAIlCF,KAAKC,iBAAiB,WAAYC,OAIlCF,KAAKC,iBAAiB,oBAAsBC,IACtCA,GAAAA,EAAMC,OACRC,QAAQC,SAASR,GAAgBS,KAAMC,IAChC,IAAA,MAAMC,KAAgBD,EACzBC,EAAaC,YAAY,CACvBN,OAAQD,EAAMC,eAIf,CAECO,MAAAA,EAAUN,QAAQC,SAASR,GAAgBS,KAAMC,IAChD,IAAA,MAAMC,KAAgBD,EAClBC,OAAAA,EAAaG,UAGxBT,EAAMU,UAAUF,MAIpBV,KAAKC,iBAAiB,oBAAsBC,OAK5CF,KAAKC,iBAAiB,QAAUC","file":"service-worker.js","sourceRoot":"../src","sourcesContent":["/* global clients */\n\nconst matchAllWindow = {\n  type: 'window',\n  includeUncontrolled: true\n};\n\nself.addEventListener('install', (event) => {\n\n});\n\nself.addEventListener('activate', event => {\n  // event.waitUntil(clients.claim());\n});\n\nself.addEventListener('notificationclick', (event) => {\n  if (event.action) {\n    clients.matchAll(matchAllWindow).then((windowClients) => {\n      for (const windowClient of windowClients) {\n        windowClient.postMessage({\n          action: event.action\n        });\n      }\n    });\n  } else {\n    // focus on window\n    const promise = clients.matchAll(matchAllWindow).then((windowClients) => {\n      for (const windowClient of windowClients) {\n        return windowClient.focus();\n      }\n    });\n    event.waitUntil(promise);\n  }\n});\n\nself.addEventListener('notificationclose', (event) => {\n\n});\n\n// debug\nself.addEventListener('fetch', (event) => {\n  // console.log('sw fetch', event.request.url);\n});\n"]}